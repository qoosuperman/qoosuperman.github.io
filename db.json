{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/googlef1f4f15c1e72b476.html","path":"googlef1f4f15c1e72b476.html","modified":1,"renderable":0},{"_id":"source/img/Q.ico","path":"img/Q.ico","modified":1,"renderable":0},{"_id":"source/img/icon_wechat.png","path":"img/icon_wechat.png","modified":1,"renderable":0},{"_id":"source/img/Q2.ico","path":"img/Q2.ico","modified":1,"renderable":0},{"_id":"themes/huweihuang/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"source/img/article/tag.png","path":"img/article/tag.png","modified":1,"renderable":0},{"_id":"themes/huweihuang/source/css/archive.styl","path":"css/archive.styl","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/beantech.css","path":"css/beantech.css","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/beantech.min.css","path":"css/beantech.min.css","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/donate.css","path":"css/donate.css","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/highlight.styl","path":"css/highlight.styl","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/hux-blog.min.css","path":"css/hux-blog.min.css","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/rocket.styl","path":"css/rocket.styl","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/signature.styl","path":"css/signature.styl","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/toc.styl","path":"css/toc.styl","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/widget.styl","path":"css/widget.styl","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.woff","path":"fonts/glyphicons-halflings-regular.woff","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.woff2","path":"fonts/glyphicons-halflings-regular.woff2","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/hux-blog.js","path":"js/hux-blog.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/hux-blog.min.js","path":"js/hux-blog.min.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/jquery.tagcloud.js","path":"js/jquery.tagcloud.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/jquery.nav.js","path":"js/jquery.nav.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.eot","path":"fonts/glyphicons-halflings-regular.eot","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/toc.js","path":"js/toc.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.ttf","path":"fonts/glyphicons-halflings-regular.ttf","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1},{"_id":"source/img/header_img/about.jpg","path":"img/header_img/about.jpg","modified":1,"renderable":0},{"_id":"themes/huweihuang/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.svg","path":"fonts/glyphicons-halflings-regular.svg","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/bootstrap.js","path":"js/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"source/img/header_img/archive.jpg","path":"img/header_img/archive.jpg","modified":1,"renderable":0},{"_id":"source/img/header_img/archives-widget.jpg","path":"img/header_img/archives-widget.jpg","modified":1,"renderable":0},{"_id":"themes/huweihuang/source/css/bootstrap.css","path":"css/bootstrap.css","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/images/ironman.png","path":"css/images/ironman.png","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/images/rocket.png","path":"css/images/rocket.png","modified":1,"renderable":1},{"_id":"source/img/signature/BeanTechSign-white.png","path":"img/signature/BeanTechSign-white.png","modified":1,"renderable":0},{"_id":"source/img/avatar/ironman.png","path":"img/avatar/ironman.png","modified":1,"renderable":0},{"_id":"source/img/article_header/article_bg.jpg","path":"img/article_header/article_bg.jpg","modified":1,"renderable":0},{"_id":"source/img/signature/BeanTechSign-black.png","path":"img/signature/BeanTechSign-black.png","modified":1,"renderable":0},{"_id":"themes/huweihuang/source/js/jquery.js","path":"js/jquery.js","modified":1,"renderable":1},{"_id":"source/img/article/huweihuang_blog.png","path":"img/article/huweihuang_blog.png","modified":1,"renderable":0},{"_id":"source/img/blog.jpg","path":"img/blog.jpg","modified":1,"renderable":0},{"_id":"source/img/header_img/home.jpg","path":"img/header_img/home.jpg","modified":1,"renderable":0},{"_id":"source/img/header_img/tag.png","path":"img/header_img/tag.png","modified":1,"renderable":0},{"_id":"source/img/article_header/article_header.png","path":"img/article_header/article_header.png","modified":1,"renderable":0},{"_id":"source/img/header_img/home-bg-o.png","path":"img/header_img/home-bg-o.png","modified":1,"renderable":0},{"_id":"source/img/header_img/home2.png","path":"img/header_img/home2.png","modified":1,"renderable":0},{"_id":"source/img/header_img/404.png","path":"img/header_img/404.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/404.md","hash":"8aa56af7bcd7cd23667cbf3eb5b5c9fa4533eb60","modified":1574394377579},{"_id":"source/CNAME","hash":"74e4a1e581964c92c2b9bed428dcda9a0afdfefc","modified":1574400702583},{"_id":"source/.DS_Store","hash":"aa3aba402c143f346008a86f5081fff8cef3f53f","modified":1574696763972},{"_id":"source/googlef1f4f15c1e72b476.html","hash":"c8a6a974293188063c0aa6f1090fb38cab263d7a","modified":1575520088661},{"_id":"themes/huweihuang/LICENSE","hash":"2b209f06bebeb2a8c2b7e187e436f3e1e1fbc8a7","modified":1574394377618},{"_id":"themes/huweihuang/_config.yml","hash":"e800e32847df32dacddb5202823a004557023bcd","modified":1574394377619},{"_id":"source/about/index.md","hash":"1891563b37d90fdd6a7df5efb1ef587eb86d3374","modified":1574402546618},{"_id":"source/_posts/2019-09-02-day1.md","hash":"223bebc79b8faf64cd2f6fc7473f79f1b887d8d4","modified":1574405023551},{"_id":"source/_posts/2019-09-03-day2.md","hash":"28e5ae9236083d00efc62bc67d745c26b646245f","modified":1574405028300},{"_id":"source/_posts/2019-09-04-day3.md","hash":"e404d89f34e5db24dc40670a3aa49f3743fcca10","modified":1574404711260},{"_id":"source/_posts/2019-09-06-day5.md","hash":"a33adc3cf6233945a56cc3ff7deae9e3b6fde730","modified":1574404737452},{"_id":"source/_posts/2019-09-07-day6.md","hash":"9025d086e9d65f97580915ada3bf674a6f3cfcd2","modified":1574404752685},{"_id":"source/_posts/2019-09-05-day4.md","hash":"4d2fc8843d04dde443a57f26d77f4db1347724cc","modified":1574404726720},{"_id":"source/_posts/2019-09-08-day7.md","hash":"5497600c2e858419149d4f70f3b4813c6150b5bb","modified":1574404764033},{"_id":"source/_posts/2019-09-09-day8.md","hash":"41476e61ca924f43c2c0b125759c4decf78b85ad","modified":1574404785254},{"_id":"source/_posts/2019-09-10-day9.md","hash":"016b82b2aa7f306d29050399429ddcf06d8a61b1","modified":1574404796695},{"_id":"source/_posts/2019-09-11-day10.md","hash":"2eb2a752c7289b1c294223e1375b3ae1c1946612","modified":1574404813091},{"_id":"source/_posts/2019-09-12-day11.md","hash":"81dd6511de386bfa001042494a21adeb66ebd4c8","modified":1574404838340},{"_id":"source/_posts/2019-09-13-day12.md","hash":"d9103e2536d60919b2635f389fe2c655d157a1d3","modified":1574404862894},{"_id":"source/_posts/2019-09-14-day13.md","hash":"7436ca1763e273aa85922f68079f2b72d56ee261","modified":1574404883550},{"_id":"source/_posts/2019-09-15-day14.md","hash":"ccb459525fc0f68de29806032a485026054906aa","modified":1574405046223},{"_id":"source/_posts/2019-09-21-day15.md","hash":"4c1b883e595e250c88d495cbf96f633606d5367e","modified":1574405252704},{"_id":"source/_posts/2019-09-22-day16.md","hash":"ea95218611852d2ba084a898d13d97c131e8d135","modified":1574405280206},{"_id":"source/_posts/2019-09-23-day17.md","hash":"62a0b3f8cc5379bfd64ab5f987dfcad19021696b","modified":1574405317413},{"_id":"source/_posts/2019-09-25-day19.md","hash":"6aab6a3cc216aedaaa16aff60553d8409c55797d","modified":1574405368518},{"_id":"source/_posts/2019-09-24-day18.md","hash":"27e1f7795a5ac915a777fe407701519944012adf","modified":1574405339751},{"_id":"source/_posts/2019-09-26-day20.md","hash":"121ff451b8dfe513505fdf52051d18a84fb50d6a","modified":1574405391801},{"_id":"source/_posts/2019-09-27-day21.md","hash":"533ac4e2704c0b0122c0bd4ef7972df6f02f0ffd","modified":1574405414168},{"_id":"source/_posts/2019-09-28-day22.md","hash":"d2c69b7f7704046d20ef33ab0cfd8955e308324b","modified":1574405437718},{"_id":"source/_posts/2019-09-29-day23.md","hash":"51f12ffa4c509615ec5ab85ac12ad541bfe3691d","modified":1574405468460},{"_id":"source/_posts/2019-09-30-day24.md","hash":"30efbe7d85957a9591af4fd0d4018d7641e6dba9","modified":1574405496136},{"_id":"source/_posts/2019-10-01-day25.md","hash":"0c41ebef698d56e77625e516cc4707d213ac07ba","modified":1574405529900},{"_id":"source/_posts/2019-10-02-day26.md","hash":"addc81c08634623ad7ee49979e4e75e4f8c004b3","modified":1574405565712},{"_id":"source/_posts/2019-10-03-day27.md","hash":"838873a3e4074825d4d776a091b34ab379ffed63","modified":1574405587404},{"_id":"source/_posts/2019-10-04-day28.md","hash":"48b1ea8022f30d6930ca849d380bb3ceb1ce9a24","modified":1574405614460},{"_id":"source/_posts/2019-10-05-day29.md","hash":"8af61314bb762b7400e115bd520b9b146f6a16aa","modified":1574405634484},{"_id":"source/_posts/2019-10-06-day30.md","hash":"cb507b26d76435dccbd237d3ca9d6707c9a3700a","modified":1574405658655},{"_id":"source/_posts/2019-10-26-mock_stub.md","hash":"58d13943be1ad3efc59b382993c36c743845fa20","modified":1574405709243},{"_id":"source/_posts/2019-10-31-JS30_day01.md","hash":"7b9c6bf2a4b4243d8e514ee04ae42439cd0712c5","modified":1574405837323},{"_id":"source/_posts/2019-11-01-JS30_day02.md","hash":"0144816986c0b79e9c13984cda0a8da82bfe16ce","modified":1574405861030},{"_id":"source/_posts/2019-11-02-JS30_day03.md","hash":"8fd2142f63d9f3c5b0bbe00681ce7fa2a675e408","modified":1574406042604},{"_id":"source/_posts/2019-11-03-JS30_day04.md","hash":"6b81a9f2da480f30c5c54346c0c8a5f6c0d5f608","modified":1574406064068},{"_id":"source/_posts/2019-11-04-JS30_day05.md","hash":"b0b6a37dc00fe482c2f6018bdaece75be95e07c0","modified":1574406084620},{"_id":"source/_posts/2019-11-05-JS30_day06.md","hash":"971908d778259051c6628811549cbb52c8644273","modified":1574406114852},{"_id":"source/_posts/2019-11-06-JS30_day07.md","hash":"d5b43c88ac5dcd354e78f4b283bb768cf6cdfcbe","modified":1574406137596},{"_id":"source/_posts/2019-11-07-JS30_day08.md","hash":"afad70036243cae1b0f828e72038088eecbc585b","modified":1574406172997},{"_id":"source/_posts/2019-11-08-JS30_day09.md","hash":"ca736f876cbf7e45ae825a69d0945d362c9874c4","modified":1574406202146},{"_id":"source/_posts/2019-11-10-JS30_day10.md","hash":"aced00273aa86310470a69a5027f15a57490f7c9","modified":1574406345180},{"_id":"source/_posts/2019-11-11-JS30_day11.md","hash":"e7379471fbb2996150db3ebae048b4ca768312c0","modified":1574406353363},{"_id":"source/_posts/2019-11-12-JS30_day12.md","hash":"918894a78e8e7d5b6e1f6d7cda49634da78174ab","modified":1578409992176},{"_id":"source/_posts/2019-11-13-JS30_day13.md","hash":"9116467e9c226a8a4cfa0256235c42a320a89c0a","modified":1574406396028},{"_id":"source/_posts/2019-11-14-JS30_day14.md","hash":"7af10c44df13a678e2760f08c631a800c8a50b18","modified":1574406417560},{"_id":"source/_posts/2019-11-15-JS30_day15.md","hash":"9bfffea91ff751692ba351be5ce3a6e24b9296b1","modified":1574406442241},{"_id":"source/_posts/2019-11-16-JS30_day16.md","hash":"e1bea00a502a33f64e1f55dd7b8bd446faa5f605","modified":1574406470335},{"_id":"source/_posts/2019-11-17-JS30_day17.md","hash":"ab0d44111e50fba73c310ad95ac1cf408cef5c07","modified":1574406498385},{"_id":"source/_posts/2019-11-18-JS30_day18.md","hash":"c49c32830c8f4ab41f5d65301c3f1f8736325ce3","modified":1574406517592},{"_id":"source/_posts/2019-11-20-JS30_day19.md","hash":"a9ae63059e7d03842aff0a0012639cd03d90d88f","modified":1574406537052},{"_id":"source/_posts/2019-11-21-JS30_day20.md","hash":"037b603cb649c762c73b197f28b8b455e39f035c","modified":1574406561868},{"_id":"source/_posts/2019-11-23-JS30_day22.md","hash":"e450212a8eb061bd44cd854bd5052bc216243ef1","modified":1574493394379},{"_id":"source/_posts/2019-11-24-JS30_day23.md","hash":"c30de3448e7b7e0b226534c9eeb0894e5333e1f8","modified":1574600725469},{"_id":"source/_posts/2019-11-25-JS30_day24.md","hash":"b8a421cc253710790aeb063a66e71a2a83af31b6","modified":1574653972984},{"_id":"source/_posts/2019-11-26-JS30_day25.md","hash":"db0eec286d7c655b95860ce1678566ccf9379ee8","modified":1574739585406},{"_id":"source/_posts/2019-11-27-JS30_day26.md","hash":"8df8fb091c23364de0b87cbe7bf129fdada48701","modified":1574825595936},{"_id":"source/_posts/2019-11-28-JS30_day27.md","hash":"c1c670baa09a28fd365b56e45d9ef4c4ff5465dd","modified":1574929127792},{"_id":"source/_posts/2019-11-29-JS30_day28.md","hash":"e9e9ba1926a1207d2ae13a386644ee7aa08477f7","modified":1575438629590},{"_id":"source/_posts/2019-11-30-JS30_day29.md","hash":"cae9d580d6def315bf26bff0087f352bacc4afaf","modified":1575438634724},{"_id":"source/_posts/2019-12-01-JS30_day30.md","hash":"1d0fb927626a55391807358b91c3c3e2797baff8","modified":1575438642573},{"_id":"source/_posts/2019-12-04-get_job.md","hash":"1475fe9013c4ed51359517163b1085a705e25c11","modified":1575468600537},{"_id":"source/_posts/2019-12-05-let_const_var.md","hash":"3dff901ce31f950929919075aacd4de716bb0145","modified":1575559886920},{"_id":"source/_posts/2019-12-09-ruby_rails_codingstyle.md","hash":"b1acab2bf95c62091f0738423b1efb56ff059956","modified":1575894721539},{"_id":"source/_posts/2019-12-22-try.md","hash":"eb38930bc19be7d1744f448247e42a346a90e5f4","modified":1577022372465},{"_id":"source/archive/index.md","hash":"3da4319579cdef642dba7c6fc173101c5bba4250","modified":1574402540445},{"_id":"source/tags/index.md","hash":"3ff88c16680a4949bbc25c04fdd01bee1e542347","modified":1574402445517},{"_id":"source/img/Q.ico","hash":"f8ff8e68366d97c8d9b9f7286859731d86d0ec68","modified":1574696679466},{"_id":"themes/huweihuang/layout/404.ejs","hash":"40de38bd399f6f4aef0d6c63c7b13b02d74f1c56","modified":1574394377622},{"_id":"source/img/icon_wechat.png","hash":"4188058026609de06c6cac88b349a2da831a1783","modified":1574394377613},{"_id":"source/img/Q2.ico","hash":"1d5f0c716c6c8b2c5918e736ace832aeacf768b7","modified":1574696714872},{"_id":"themes/huweihuang/layout/about.ejs","hash":"edcf8fa3bf7093c974d418ffef42ac89c19af128","modified":1574394377627},{"_id":"themes/huweihuang/layout/archive.ejs","hash":"c15726ab348cbf75291b88ffe5e5e50335b5cb0b","modified":1574394377628},{"_id":"themes/huweihuang/layout/index.ejs","hash":"9e682d5d19cce88ffcae6bbcd0d644df64a6d735","modified":1574394377628},{"_id":"themes/huweihuang/layout/keynote.ejs","hash":"f5689862281e34dbe8402b0e72f632902e53e88b","modified":1574394377628},{"_id":"themes/huweihuang/layout/layout.ejs","hash":"a5af5b99ac3456ab5da1a319455904b979b91601","modified":1574394377628},{"_id":"themes/huweihuang/layout/page.ejs","hash":"5e588f200a7b7cd3ae40402b0dd3b779aac6787f","modified":1574394377628},{"_id":"themes/huweihuang/layout/post.ejs","hash":"7088681f19dee7f2bb3d52969a912521423a6494","modified":1574394377629},{"_id":"themes/huweihuang/layout/tags.ejs","hash":"2c72eb2e89130658aa068d80d27b561b509c5dcd","modified":1574394377629},{"_id":"themes/huweihuang/languages_to_be_added/de.yml","hash":"424a9c1e6ab69334d7873f6574da02ca960aa572","modified":1574394377619},{"_id":"themes/huweihuang/languages_to_be_added/default.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1574394377619},{"_id":"themes/huweihuang/languages_to_be_added/en.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1574394377619},{"_id":"themes/huweihuang/languages_to_be_added/es.yml","hash":"cb4eeca0ed3768a77e0cd216300f2b2549628b1b","modified":1574394377619},{"_id":"themes/huweihuang/languages_to_be_added/no.yml","hash":"8ca475a3b4f8efe6603030f0013aae39668230e1","modified":1574394377620},{"_id":"themes/huweihuang/languages_to_be_added/pl.yml","hash":"de7eb5850ae65ba7638e907c805fea90617a988c","modified":1574394377620},{"_id":"themes/huweihuang/languages_to_be_added/ru.yml","hash":"42df7afeb7a35dc46d272b7f4fb880a9d9ebcaa5","modified":1574394377621},{"_id":"themes/huweihuang/languages_to_be_added/zh-CN.yml","hash":"7bfcb0b8e97d7e5edcfca8ab26d55d9da2573c1c","modified":1574394377622},{"_id":"themes/huweihuang/languages_to_be_added/zh-TW.yml","hash":"9acac6cc4f8002c3fa53ff69fb8cf66c915bd016","modified":1574394377622},{"_id":"themes/huweihuang/source/favicon.ico","hash":"f8ff8e68366d97c8d9b9f7286859731d86d0ec68","modified":1574707109397},{"_id":"source/img/article/tag.png","hash":"c8632d64d9471009098b84f70273e63037a4e7b8","modified":1574394377586},{"_id":"themes/huweihuang/layout/_partial/footer.ejs","hash":"387e83c8d2b7f35ef845ab4ed29358a819cb831a","modified":1574402666870},{"_id":"themes/huweihuang/layout/_partial/head.ejs","hash":"c959e64d014937893d5c6222e2ee2f1a4ed2993c","modified":1574707417371},{"_id":"themes/huweihuang/layout/_partial/header.ejs","hash":"3bd09df76e0622d76d186b020393fcab361e6c97","modified":1574394377622},{"_id":"themes/huweihuang/layout/_partial/pagination.ejs","hash":"557d6bb069a1d48af49ae912994653f44b32a570","modified":1574394377623},{"_id":"themes/huweihuang/layout/_partial/nav.ejs","hash":"4c905166c960852e9b9a3c9d5c680091e37b481f","modified":1574394377623},{"_id":"themes/huweihuang/layout/_partial/sidebar.ejs","hash":"2e4e528a555917b2a267da4db2440bcc4a7a65ab","modified":1574394377624},{"_id":"themes/huweihuang/layout/_partial/toc.ejs","hash":"40e11b303df113c64a5ca35b79dd53c824010c09","modified":1574394377624},{"_id":"themes/huweihuang/layout/_widget/category.ejs","hash":"1cf485def07dc06e870dc9613767c6c614bcf428","modified":1574394377626},{"_id":"themes/huweihuang/layout/_widget/archive.ejs","hash":"7594929d472806ca4c64d9906d9903a96de111a0","modified":1574394377625},{"_id":"themes/huweihuang/layout/_widget/featured-tags.ejs","hash":"0c9ce1942f1943dc8891a9302a922ef1ffe300c5","modified":1574394377626},{"_id":"themes/huweihuang/layout/_widget/friends-blog.ejs","hash":"734d3775017aedac185028924baf890a71a74548","modified":1574394377627},{"_id":"themes/huweihuang/layout/_widget/short-about.ejs","hash":"315de02246f07c747c32495e107ad7b19cb3ff54","modified":1574394377627},{"_id":"themes/huweihuang/layout/_widget/recent-posts.ejs","hash":"e08ab8ba60e31638006acf27f066b989a0a3c433","modified":1574394377627},{"_id":"themes/huweihuang/source/css/archive.styl","hash":"715bcbd085eb95ec26c9805c11c374919cde971c","modified":1574394377629},{"_id":"themes/huweihuang/source/css/beantech.css","hash":"4c361354fd8e9851923fb21a620bc079380ebcd8","modified":1574394377630},{"_id":"themes/huweihuang/source/css/beantech.min.css","hash":"05a06230b1a9eca0b30cece54a397008cb77dc50","modified":1574394377630},{"_id":"themes/huweihuang/source/css/donate.css","hash":"f65ac8363d8d215adb896158e7b45165db259a47","modified":1574394377631},{"_id":"themes/huweihuang/source/css/highlight.styl","hash":"e842080e6d580f0f70a7df71fbde3c4e49463c19","modified":1574394377631},{"_id":"themes/huweihuang/source/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1574394377632},{"_id":"themes/huweihuang/source/css/rocket.styl","hash":"e15c51c8566ecd943112e57592888dd318b6fa6a","modified":1574394377633},{"_id":"themes/huweihuang/source/css/signature.styl","hash":"88159b31c59d59c01a0b534af57242662a2a3969","modified":1574394377633},{"_id":"themes/huweihuang/source/css/toc.styl","hash":"631e97f634d30f53314e2fec8bdde267c1c49f4c","modified":1574394377633},{"_id":"themes/huweihuang/source/css/widget.styl","hash":"7a9f735f5ef323dc2950fbd9d76daa16c9a0f1a9","modified":1574394377633},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1574394377635},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1574394377635},{"_id":"themes/huweihuang/source/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1574394377636},{"_id":"themes/huweihuang/source/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1574394377636},{"_id":"themes/huweihuang/source/js/hux-blog.min.js","hash":"1563e7f70550ac6b30803d6f449719b853200e35","modified":1574394377636},{"_id":"themes/huweihuang/source/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1574394377639},{"_id":"themes/huweihuang/source/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1574394377639},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1574394377634},{"_id":"themes/huweihuang/source/js/toc.js","hash":"41e52551731854224c249d53010c1bae5aa92ffa","modified":1574394377639},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1574394377635},{"_id":"themes/huweihuang/source/js/totop.js","hash":"c05360f6fc699ac12e794b1764b4a952713a3017","modified":1574394377639},{"_id":"source/img/header_img/about.jpg","hash":"62a9a76854503c327990cc8d10de293ab6e9588f","modified":1574394377598},{"_id":"themes/huweihuang/source/css/bootstrap.min.css","hash":"fec7b176a4b9a67c0eb5d184f57b84297efc23aa","modified":1574394377631},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.svg","hash":"d4ec608dab344cb94b586c8628421d55580bc5fb","modified":1574677471171},{"_id":"themes/huweihuang/source/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1574394377635},{"_id":"themes/huweihuang/source/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1574394377638},{"_id":"source/img/header_img/archive.jpg","hash":"990f6f9dd0ecb5348bfcc47305553d58c0d8f326","modified":1574394377599},{"_id":"source/img/header_img/archives-widget.jpg","hash":"68f7d525269a94287e0ad18713ae232fb59dcf71","modified":1574394377601},{"_id":"themes/huweihuang/source/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1574394377630},{"_id":"themes/huweihuang/source/css/images/ironman.png","hash":"2f0db0ab15d466c4065d9f6102fdf829726d9e3f","modified":1574394377632},{"_id":"themes/huweihuang/source/css/images/rocket.png","hash":"6dee0406955aa9b7a261161d30f2538a671e806b","modified":1574394377632},{"_id":"source/img/signature/BeanTechSign-white.png","hash":"34289ed41cf9ddac2d56be46fbb1515b7d5913cd","modified":1574394377615},{"_id":"source/img/avatar/ironman.png","hash":"7d6a06b4b544ab146c3b3e8474edc33f14ac6e4d","modified":1574394377591},{"_id":"source/img/article_header/article_bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1574394377587},{"_id":"source/img/signature/BeanTechSign-black.png","hash":"94b7102e819fd6ee082d3fb0166f4de7458c22ff","modified":1574394377614},{"_id":"themes/huweihuang/source/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1574394377638},{"_id":"source/img/article/huweihuang_blog.png","hash":"392cf8b33be6c752dd908e027fa3346a6ecd58ab","modified":1574394377586},{"_id":"source/img/blog.jpg","hash":"a76af0b98dbe92ca2d21babcef13f094e409554b","modified":1574394377593},{"_id":"source/img/header_img/home.jpg","hash":"8f1c440427a4aa86b623503a926c027e2e10cd66","modified":1574394377606},{"_id":"source/img/header_img/tag.png","hash":"e83cd7b04ff85bcbc9bd3ebf5e57a55166e82568","modified":1574394377612},{"_id":"source/_posts/hexo-theme-huweihuang/Demo.png","hash":"d9fa12f1e40924a0db57761d09d52dce450b4f7b","modified":1574394377583},{"_id":"source/img/article_header/article_header.png","hash":"d9fa12f1e40924a0db57761d09d52dce450b4f7b","modified":1574394377589},{"_id":"source/img/header_img/home-bg-o.png","hash":"134ece4cb4c49c7ca1403a5afe7f46d0e2f9ecbb","modified":1574394377604},{"_id":"source/img/header_img/home2.png","hash":"da6a3d5ca787bdc25e69655abd879b4f821aeb30","modified":1574394377610},{"_id":"source/img/header_img/404.png","hash":"6bf9c224543ec54e250309db89cbdf46e0c4b5ba","modified":1574394377597}],"Category":[],"Data":[],"Page":[{"layout":"404","description":"你来到了没有知识的荒原","header-img":"/img/header_img/404.png","_content":"","source":"404.md","raw":"---\nlayout: 404\ndescription: \"你来到了没有知识的荒原\"\nheader-img: \"/img/header_img/404.png\"\n---\n","date":"2019-11-22T03:48:47.131Z","updated":"2019-11-22T03:46:17.579Z","path":"404.html","title":"","comments":1,"_id":"ckjza0es100002ob1fwg3dy4t","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"about","title":"About","date":"2019-11-22T05:58:33.000Z","description":"","header-img":"https://images.unsplash.com/photo-1472392036208-33c459d5c8b9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2089&q=80","aplayer":false,"fixed":false,"_content":"\n# About me\n![](https://i.imgur.com/XK2P4Zc.png)  \n\n大家好，我的名字叫做趙志偉，你也可以叫我安東尼，目前正在努力朝成為網頁設計工程師的方向前進！\n\n興趣是彈吉他，下廚，旅遊，打電動，調酒等等，歡迎有共同喜好的人來當個朋友！\n\n## 經歷\n\n* Bachelor of Science in Chemical Engineering, 2009 - 2013\n* Master of Science in Chemical Engineering, 2013 - 2015 \n* Process Enginner of Taiwan Semiconductor Manufacture Company, 2015 - 2019\n","source":"about/index.md","raw":"---\nlayout: \"about\"\ntitle: \"About\"\ndate: 2019-11-22 13:58:33\ndescription: \"\"\nheader-img: \"https://images.unsplash.com/photo-1472392036208-33c459d5c8b9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2089&q=80\"\naplayer: false\nfixed: false\n---\n\n# About me\n![](https://i.imgur.com/XK2P4Zc.png)  \n\n大家好，我的名字叫做趙志偉，你也可以叫我安東尼，目前正在努力朝成為網頁設計工程師的方向前進！\n\n興趣是彈吉他，下廚，旅遊，打電動，調酒等等，歡迎有共同喜好的人來當個朋友！\n\n## 經歷\n\n* Bachelor of Science in Chemical Engineering, 2009 - 2013\n* Master of Science in Chemical Engineering, 2013 - 2015 \n* Process Enginner of Taiwan Semiconductor Manufacture Company, 2015 - 2019\n","updated":"2019-11-22T06:02:26.618Z","path":"about/index.html","comments":1,"_id":"ckjza0ete00012ob10v1zh4t5","content":"<h1 id=\"about-me\">About me</h1>\n<p><img src=\"https://i.imgur.com/XK2P4Zc.png\" alt=\"\"></p>\n<p>大家好，我的名字叫做趙志偉，你也可以叫我安東尼，目前正在努力朝成為網頁設計工程師的方向前進！</p>\n<p>興趣是彈吉他，下廚，旅遊，打電動，調酒等等，歡迎有共同喜好的人來當個朋友！</p>\n<h2 id=\"經歷\">經歷</h2>\n<ul>\n<li>Bachelor of Science in Chemical Engineering, 2009 - 2013</li>\n<li>Master of Science in Chemical Engineering, 2013 - 2015</li>\n<li>Process Enginner of Taiwan Semiconductor Manufacture Company, 2015 - 2019</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1>About me</h1>\n<p><img src=\"https://i.imgur.com/XK2P4Zc.png\" alt=\"\"></p>\n<p>大家好，我的名字叫做趙志偉，你也可以叫我安東尼，目前正在努力朝成為網頁設計工程師的方向前進！</p>\n<p>興趣是彈吉他，下廚，旅遊，打電動，調酒等等，歡迎有共同喜好的人來當個朋友！</p>\n<h2>經歷</h2>\n<ul>\n<li>Bachelor of Science in Chemical Engineering, 2009 - 2013</li>\n<li>Master of Science in Chemical Engineering, 2013 - 2015</li>\n<li>Process Enginner of Taiwan Semiconductor Manufacture Company, 2015 - 2019</li>\n</ul>\n"},{"layout":"archive","title":"Archive","header-img":"https://images.unsplash.com/photo-1573900100953-1e08492fba5c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","comments":0,"date":"2019-11-22T05:58:33.000Z","description":"","_content":"","source":"archive/index.md","raw":"---\nlayout: \"archive\"\ntitle: \"Archive\"\nheader-img: \"https://images.unsplash.com/photo-1573900100953-1e08492fba5c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ncomments: false\ndate: 2019-11-22 13:58:33\ndescription: \"\"\n---\n","updated":"2019-11-22T06:02:20.445Z","path":"archive/index.html","_id":"ckjza0eti00032ob1onmakzp1","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"tags","title":"Tags","description":"標籤列表","header-img":"https://images.unsplash.com/photo-1574249142908-c8824d0bdebb?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1567&q=80","_content":"","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: \"Tags\"\ndescription: \"標籤列表\"\nheader-img: \"https://images.unsplash.com/photo-1574249142908-c8824d0bdebb?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1567&q=80\"\n---\n","date":"2019-11-22T06:00:45.517Z","updated":"2019-11-22T06:00:45.517Z","path":"tags/index.html","comments":1,"_id":"ckjza0etm00062ob1npbw2btl","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"參賽宣言","catalog":true,"toc_nav_num":true,"date":"2019-09-02T14:26:24.000Z","subtitle":"","header-img":"https://img.zhaohuabing.com/in-post/istio-traffic-shifting/crossroads.png","catagories":["Rails"],"updateDate":"2019-09-02T14:26:24.000Z","_content":"\n\n\n總算是克服心魔要參加這個比賽了\n\n**參賽原因：**\n1. 其實一直想要好好看一下 rails guide，但找不到動力\n2. 挑戰自己\n3. 雖然覺得自己已經有點忙了，但在這段沒有工作的空窗期，如果連每天發個文章都不行，感覺以後也會幫自己找藉口不做 side project ，所以這算是一種預習\n\n-----\n\n\n\n**主題緣起：**\n其實想主題也想了很久，本來想要把自己學習過程中遇到一些觀念澄清的部分寫出來，但又覺得這樣子實在太沒有主題性，最後決定來做個類似 rails guide 的導讀好了，把裡面一些比較不好懂的部分用自己的話說出來，如果可以幫助到誰就太好了，順便也逼自己去看\n\n\n-----\n\n\n\n**系列文內容**\n在這系列中我會盡量以 rails guide 裡面看到的內容為主題，可以的話再用實例做出來，希望可以比較好理解\n\n另外為了塑造自己風格，會每篇文章的一開始都放一首歌，有可能是跟今天主題有關的，想不到的話我就會放自己覺得好聽的 :P\n\np.s 拜託恩主公保佑我可以撐過這 30 天 ...XD\n","source":"_posts/2019-09-02-day1.md","raw":"---\ntitle: \"參賽宣言\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-02 22:26:24\nsubtitle: \"\"\nheader-img: \"https://img.zhaohuabing.com/in-post/istio-traffic-shifting/crossroads.png\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-02 22:26:24\n# top: 1\n\n---\n\n\n\n總算是克服心魔要參加這個比賽了\n\n**參賽原因：**\n1. 其實一直想要好好看一下 rails guide，但找不到動力\n2. 挑戰自己\n3. 雖然覺得自己已經有點忙了，但在這段沒有工作的空窗期，如果連每天發個文章都不行，感覺以後也會幫自己找藉口不做 side project ，所以這算是一種預習\n\n-----\n\n\n\n**主題緣起：**\n其實想主題也想了很久，本來想要把自己學習過程中遇到一些觀念澄清的部分寫出來，但又覺得這樣子實在太沒有主題性，最後決定來做個類似 rails guide 的導讀好了，把裡面一些比較不好懂的部分用自己的話說出來，如果可以幫助到誰就太好了，順便也逼自己去看\n\n\n-----\n\n\n\n**系列文內容**\n在這系列中我會盡量以 rails guide 裡面看到的內容為主題，可以的話再用實例做出來，希望可以比較好理解\n\n另外為了塑造自己風格，會每篇文章的一開始都放一首歌，有可能是跟今天主題有關的，想不到的話我就會放自己覺得好聽的 :P\n\np.s 拜託恩主公保佑我可以撐過這 30 天 ...XD\n","slug":"2019-09-02-day1","published":1,"updated":"2019-11-22T06:43:43.551Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0ete00022ob1wzbk2hvf","content":"<p>總算是克服心魔要參加這個比賽了</p>\n<p><strong>參賽原因：</strong></p>\n<ol>\n<li>其實一直想要好好看一下 rails guide，但找不到動力</li>\n<li>挑戰自己</li>\n<li>雖然覺得自己已經有點忙了，但在這段沒有工作的空窗期，如果連每天發個文章都不行，感覺以後也會幫自己找藉口不做 side project ，所以這算是一種預習</li>\n</ol>\n<hr>\n<p><strong>主題緣起：</strong><br>\n其實想主題也想了很久，本來想要把自己學習過程中遇到一些觀念澄清的部分寫出來，但又覺得這樣子實在太沒有主題性，最後決定來做個類似 rails guide 的導讀好了，把裡面一些比較不好懂的部分用自己的話說出來，如果可以幫助到誰就太好了，順便也逼自己去看</p>\n<hr>\n<p><strong>系列文內容</strong><br>\n在這系列中我會盡量以 rails guide 裡面看到的內容為主題，可以的話再用實例做出來，希望可以比較好理解</p>\n<p>另外為了塑造自己風格，會每篇文章的一開始都放一首歌，有可能是跟今天主題有關的，想不到的話我就會放自己覺得好聽的 :P</p>\n<p>p.s 拜託恩主公保佑我可以撐過這 30 天 …XD</p>\n","site":{"data":{}},"excerpt":"","more":"<p>總算是克服心魔要參加這個比賽了</p>\n<p><strong>參賽原因：</strong></p>\n<ol>\n<li>其實一直想要好好看一下 rails guide，但找不到動力</li>\n<li>挑戰自己</li>\n<li>雖然覺得自己已經有點忙了，但在這段沒有工作的空窗期，如果連每天發個文章都不行，感覺以後也會幫自己找藉口不做 side project ，所以這算是一種預習</li>\n</ol>\n<hr>\n<p><strong>主題緣起：</strong><br>\n其實想主題也想了很久，本來想要把自己學習過程中遇到一些觀念澄清的部分寫出來，但又覺得這樣子實在太沒有主題性，最後決定來做個類似 rails guide 的導讀好了，把裡面一些比較不好懂的部分用自己的話說出來，如果可以幫助到誰就太好了，順便也逼自己去看</p>\n<hr>\n<p><strong>系列文內容</strong><br>\n在這系列中我會盡量以 rails guide 裡面看到的內容為主題，可以的話再用實例做出來，希望可以比較好理解</p>\n<p>另外為了塑造自己風格，會每篇文章的一開始都放一首歌，有可能是跟今天主題有關的，想不到的話我就會放自己覺得好聽的 :P</p>\n<p>p.s 拜託恩主公保佑我可以撐過這 30 天 …XD</p>\n"},{"title":"DRY & CoC 是啥","catalog":true,"toc_nav_num":true,"date":"2019-09-03T14:26:24.000Z","subtitle":"","header-img":"/img/article_header/article_header.png","catagories":["Rails"],"updateDate":"2019-09-03T14:26:24.000Z","_content":"今天要來看的是 Getting Started with Rails [這一篇](https://guides.rubyonrails.org/getting_started.html)\n這篇其實是很概括的東西居多，但有些地方值得一提，比方說第二章這邊講的是 rails 哲學的兩個大概念 DRY 跟 CoC\n\n## DRY\nDRY 的全名是 Don't repeat yourself，也就是重複的東西不要一直寫一直寫，讓這個系統好維護，好延伸，也比較少 bug，其實對於公司本身來說， code 比較少通常表示花費比較少，因為越多 code 通常也需要比較多人來維護，除非今天寫到\" over dried\" 的地步，表示已經精簡到難以讓人理解又反而過頭了\n\nGoogle 一下就可以發現，工程師真的是個很有趣的生物，有些人根據這段描述也做了一個反義字叫做 WET ，你可以把他的全名說是 \"write Everything Twice\" 或者 \"write every time\" 或 \"waste everyone's time\"\n\n## CoC\nCoC 的全名是 Convention Over Configuration，中文可以翻成慣例優於設定，如果用白話文來理解的話可能是\"請遵循我們的習慣不然你會很痛苦，因為什麼都要自己設定\"，而在這邊文章裡面他也有很含蓄地說了這句話\n> If you persist in bringing old habits from other languages to your Rails development, and trying to use patterns you learned elsewhere, you may have a less happy experience.\n\n所以rails 的製作團隊本身有一個他們自己主觀認為比較好的作法，用這套系統最好乖乖跟著他們的慣例，如果不想要的話你當然大可以自己設定，只是比較享受不到好處\n\n今天的內容主要是以上這些，明天的內容應該會從 5.6 開始，因為中間的很多東西現在探討好像只能摸到皮毛，在 controller / model / view 裡面又會講到，也比較清楚所以剛開始沒有基礎的人看我覺得看不懂也非常正常，如果看到哪裡不懂建議可以直接去那個章節翻翻看可能會寫得更詳細\n\n參考資料：\n[rails guide](https://guides.rubyonrails.org/getting_started.html)\n\n[Is Your Code DRY or WET?](https://dzone.com/articles/is-your-code-dry-or-wet)","source":"_posts/2019-09-03-day2.md","raw":"---\ntitle: \"DRY & CoC 是啥\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-03 22:26:24\nsubtitle: \"\"\nheader-img: \"/img/article_header/article_header.png\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-03 22:26:24\n# top: 1\n\n---\n今天要來看的是 Getting Started with Rails [這一篇](https://guides.rubyonrails.org/getting_started.html)\n這篇其實是很概括的東西居多，但有些地方值得一提，比方說第二章這邊講的是 rails 哲學的兩個大概念 DRY 跟 CoC\n\n## DRY\nDRY 的全名是 Don't repeat yourself，也就是重複的東西不要一直寫一直寫，讓這個系統好維護，好延伸，也比較少 bug，其實對於公司本身來說， code 比較少通常表示花費比較少，因為越多 code 通常也需要比較多人來維護，除非今天寫到\" over dried\" 的地步，表示已經精簡到難以讓人理解又反而過頭了\n\nGoogle 一下就可以發現，工程師真的是個很有趣的生物，有些人根據這段描述也做了一個反義字叫做 WET ，你可以把他的全名說是 \"write Everything Twice\" 或者 \"write every time\" 或 \"waste everyone's time\"\n\n## CoC\nCoC 的全名是 Convention Over Configuration，中文可以翻成慣例優於設定，如果用白話文來理解的話可能是\"請遵循我們的習慣不然你會很痛苦，因為什麼都要自己設定\"，而在這邊文章裡面他也有很含蓄地說了這句話\n> If you persist in bringing old habits from other languages to your Rails development, and trying to use patterns you learned elsewhere, you may have a less happy experience.\n\n所以rails 的製作團隊本身有一個他們自己主觀認為比較好的作法，用這套系統最好乖乖跟著他們的慣例，如果不想要的話你當然大可以自己設定，只是比較享受不到好處\n\n今天的內容主要是以上這些，明天的內容應該會從 5.6 開始，因為中間的很多東西現在探討好像只能摸到皮毛，在 controller / model / view 裡面又會講到，也比較清楚所以剛開始沒有基礎的人看我覺得看不懂也非常正常，如果看到哪裡不懂建議可以直接去那個章節翻翻看可能會寫得更詳細\n\n參考資料：\n[rails guide](https://guides.rubyonrails.org/getting_started.html)\n\n[Is Your Code DRY or WET?](https://dzone.com/articles/is-your-code-dry-or-wet)","slug":"2019-09-03-day2","published":1,"updated":"2019-11-22T06:43:48.300Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0etj00042ob10w432n69","content":"<p>今天要來看的是 Getting Started with Rails <a href=\"https://guides.rubyonrails.org/getting_started.html\" target=\"_blank\" rel=\"noopener\">這一篇</a><br>\n這篇其實是很概括的東西居多，但有些地方值得一提，比方說第二章這邊講的是 rails 哲學的兩個大概念 DRY 跟 CoC</p>\n<h2 id=\"dry\">DRY</h2>\n<p>DRY 的全名是 Don’t repeat yourself，也就是重複的東西不要一直寫一直寫，讓這個系統好維護，好延伸，也比較少 bug，其實對於公司本身來說， code 比較少通常表示花費比較少，因為越多 code 通常也需要比較多人來維護，除非今天寫到&quot; over dried&quot; 的地步，表示已經精簡到難以讓人理解又反而過頭了</p>\n<p>Google 一下就可以發現，工程師真的是個很有趣的生物，有些人根據這段描述也做了一個反義字叫做 WET ，你可以把他的全名說是 “write Everything Twice” 或者 “write every time” 或 “waste everyone’s time”</p>\n<h2 id=\"coc\">CoC</h2>\n<p>CoC 的全名是 Convention Over Configuration，中文可以翻成慣例優於設定，如果用白話文來理解的話可能是&quot;請遵循我們的習慣不然你會很痛苦，因為什麼都要自己設定&quot;，而在這邊文章裡面他也有很含蓄地說了這句話</p>\n<blockquote>\n<p>If you persist in bringing old habits from other languages to your Rails development, and trying to use patterns you learned elsewhere, you may have a less happy experience.</p>\n</blockquote>\n<p>所以rails 的製作團隊本身有一個他們自己主觀認為比較好的作法，用這套系統最好乖乖跟著他們的慣例，如果不想要的話你當然大可以自己設定，只是比較享受不到好處</p>\n<p>今天的內容主要是以上這些，明天的內容應該會從 5.6 開始，因為中間的很多東西現在探討好像只能摸到皮毛，在 controller / model / view 裡面又會講到，也比較清楚所以剛開始沒有基礎的人看我覺得看不懂也非常正常，如果看到哪裡不懂建議可以直接去那個章節翻翻看可能會寫得更詳細</p>\n<p>參考資料：<br>\n<a href=\"https://guides.rubyonrails.org/getting_started.html\" target=\"_blank\" rel=\"noopener\">rails guide</a></p>\n<p><a href=\"https://dzone.com/articles/is-your-code-dry-or-wet\" target=\"_blank\" rel=\"noopener\">Is Your Code DRY or WET?</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天要來看的是 Getting Started with Rails <a href=\"https://guides.rubyonrails.org/getting_started.html\" target=\"_blank\" rel=\"noopener\">這一篇</a><br>\n這篇其實是很概括的東西居多，但有些地方值得一提，比方說第二章這邊講的是 rails 哲學的兩個大概念 DRY 跟 CoC</p>\n<h2>DRY</h2>\n<p>DRY 的全名是 Don’t repeat yourself，也就是重複的東西不要一直寫一直寫，讓這個系統好維護，好延伸，也比較少 bug，其實對於公司本身來說， code 比較少通常表示花費比較少，因為越多 code 通常也需要比較多人來維護，除非今天寫到&quot; over dried&quot; 的地步，表示已經精簡到難以讓人理解又反而過頭了</p>\n<p>Google 一下就可以發現，工程師真的是個很有趣的生物，有些人根據這段描述也做了一個反義字叫做 WET ，你可以把他的全名說是 “write Everything Twice” 或者 “write every time” 或 “waste everyone’s time”</p>\n<h2>CoC</h2>\n<p>CoC 的全名是 Convention Over Configuration，中文可以翻成慣例優於設定，如果用白話文來理解的話可能是&quot;請遵循我們的習慣不然你會很痛苦，因為什麼都要自己設定&quot;，而在這邊文章裡面他也有很含蓄地說了這句話</p>\n<blockquote>\n<p>If you persist in bringing old habits from other languages to your Rails development, and trying to use patterns you learned elsewhere, you may have a less happy experience.</p>\n</blockquote>\n<p>所以rails 的製作團隊本身有一個他們自己主觀認為比較好的作法，用這套系統最好乖乖跟著他們的慣例，如果不想要的話你當然大可以自己設定，只是比較享受不到好處</p>\n<p>今天的內容主要是以上這些，明天的內容應該會從 5.6 開始，因為中間的很多東西現在探討好像只能摸到皮毛，在 controller / model / view 裡面又會講到，也比較清楚所以剛開始沒有基礎的人看我覺得看不懂也非常正常，如果看到哪裡不懂建議可以直接去那個章節翻翻看可能會寫得更詳細</p>\n<p>參考資料：<br>\n<a href=\"https://guides.rubyonrails.org/getting_started.html\" target=\"_blank\" rel=\"noopener\">rails guide</a></p>\n<p><a href=\"https://dzone.com/articles/is-your-code-dry-or-wet\" target=\"_blank\" rel=\"noopener\">Is Your Code DRY or WET?</a></p>\n"},{"title":"Strong parameters","catalog":true,"toc_nav_num":true,"date":"2019-09-04T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1472738805989-ede1a5b9a821?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Rails"],"updateDate":"2019-09-04T14:26:24.000Z","_content":"\n今天來到 [5.6 的章節](https://guides.rubyonrails.org/getting_started.html)，提到了關鍵字： strong parameters\n如果在看 rails 網頁畫面看到這個 error 那你就是遇到今天要講的主題了\n![](https://i.imgur.com/xhdMIEh.png)\n\nstrong parameters 是 rails 的眾多防護機制之一\n想像某種情境：今天你做出一個表單讓使用者填，但有心人士可能會把一些你不想要的資訊也透過這個表單傳送到你的資料庫，讓你的應用程式崩壞甚至更糟，而strong parameters 的機制就是要防止這種狀況發生\n\n要怎麼防護呢？ 其實他就很像一種過濾器的功能，我們預先設定好，不管使用者怎樣使用，只讓我想拿到的參數傳進來\n***\n概念上講起來很簡單，但實際上怎麼做呢？\n\n我們從表單拿到的資訊會是一個 params ，這包資訊如果直接想直接存進資料庫就會被 strong parameters 機制卡住，得到上面那種錯誤畫面，所以我們就用 rails 提供的方法來過濾他\n\n我們比較常用的是 `require` 跟 `permit` 這兩種方法\n\n這兩種方法拿的東西有什麼不同呢？ `require` 拿到的是裡面的東西，而`permit` 拿到的是包括他的整個 Hash\n```ruby\nparams = ActionController::Parameters.new(username: \"john\")\nparams.permit(:username)\n# => { \"username\" => \"john\" }\nparams.require(:username)\n# => \"john\"\n```\n(以上範例來自別人網站，來源在[這裡](https://blog.trackets.com/2013/08/17/strong-parameters-by-example.html)\n\n`permit` 後面接的只能是 scalar values，至於什麼是 scaler values 官網也有寫：\n>The permitted scalar types are String, Symbol, NilClass, Numeric, TrueClass, FalseClass, Date, Time, DateTime, StringIO, IO, ActionDispatch::Http::UploadedFile, and Rack::Test::UploadedFile\n\n這裡面是不包括 Hash 跟 Array 的！\n假如你今天的資料結構長這樣\n```ruby\nuser: { username: \"john\" }\n```\n你必須用兩段式的方式將他過濾掉\n```ruby\nclean_params = params.require(:user).permit(:username)\n```\n\n更進階的方法還有在實體剛 new 出來的時候就先用 `fetch` 抓住資料再過濾或者複雜巢狀結構過濾等等，可以參考下面的參考資料，都寫得非常清楚，我這邊就不再贅述\n\n參考資料\n[rails guide](https://guides.rubyonrails.org/getting_started.html)\n\n[超有用的範例網站](https://blog.trackets.com/2013/08/17/strong-parameters-by-example.html)\n","source":"_posts/2019-09-04-day3.md","raw":"---\ntitle: \"Strong parameters\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-04 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1472738805989-ede1a5b9a821?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-04 22:26:24\n# top: 1\n\n---\n\n今天來到 [5.6 的章節](https://guides.rubyonrails.org/getting_started.html)，提到了關鍵字： strong parameters\n如果在看 rails 網頁畫面看到這個 error 那你就是遇到今天要講的主題了\n![](https://i.imgur.com/xhdMIEh.png)\n\nstrong parameters 是 rails 的眾多防護機制之一\n想像某種情境：今天你做出一個表單讓使用者填，但有心人士可能會把一些你不想要的資訊也透過這個表單傳送到你的資料庫，讓你的應用程式崩壞甚至更糟，而strong parameters 的機制就是要防止這種狀況發生\n\n要怎麼防護呢？ 其實他就很像一種過濾器的功能，我們預先設定好，不管使用者怎樣使用，只讓我想拿到的參數傳進來\n***\n概念上講起來很簡單，但實際上怎麼做呢？\n\n我們從表單拿到的資訊會是一個 params ，這包資訊如果直接想直接存進資料庫就會被 strong parameters 機制卡住，得到上面那種錯誤畫面，所以我們就用 rails 提供的方法來過濾他\n\n我們比較常用的是 `require` 跟 `permit` 這兩種方法\n\n這兩種方法拿的東西有什麼不同呢？ `require` 拿到的是裡面的東西，而`permit` 拿到的是包括他的整個 Hash\n```ruby\nparams = ActionController::Parameters.new(username: \"john\")\nparams.permit(:username)\n# => { \"username\" => \"john\" }\nparams.require(:username)\n# => \"john\"\n```\n(以上範例來自別人網站，來源在[這裡](https://blog.trackets.com/2013/08/17/strong-parameters-by-example.html)\n\n`permit` 後面接的只能是 scalar values，至於什麼是 scaler values 官網也有寫：\n>The permitted scalar types are String, Symbol, NilClass, Numeric, TrueClass, FalseClass, Date, Time, DateTime, StringIO, IO, ActionDispatch::Http::UploadedFile, and Rack::Test::UploadedFile\n\n這裡面是不包括 Hash 跟 Array 的！\n假如你今天的資料結構長這樣\n```ruby\nuser: { username: \"john\" }\n```\n你必須用兩段式的方式將他過濾掉\n```ruby\nclean_params = params.require(:user).permit(:username)\n```\n\n更進階的方法還有在實體剛 new 出來的時候就先用 `fetch` 抓住資料再過濾或者複雜巢狀結構過濾等等，可以參考下面的參考資料，都寫得非常清楚，我這邊就不再贅述\n\n參考資料\n[rails guide](https://guides.rubyonrails.org/getting_started.html)\n\n[超有用的範例網站](https://blog.trackets.com/2013/08/17/strong-parameters-by-example.html)\n","slug":"2019-09-04-day3","published":1,"updated":"2019-11-22T06:38:31.260Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0etm00072ob1hvbf5nat","content":"<p>今天來到 <a href=\"https://guides.rubyonrails.org/getting_started.html\" target=\"_blank\" rel=\"noopener\">5.6 的章節</a>，提到了關鍵字： strong parameters<br>\n如果在看 rails 網頁畫面看到這個 error 那你就是遇到今天要講的主題了<br>\n<img src=\"https://i.imgur.com/xhdMIEh.png\" alt=\"\"></p>\n<p>strong parameters 是 rails 的眾多防護機制之一<br>\n想像某種情境：今天你做出一個表單讓使用者填，但有心人士可能會把一些你不想要的資訊也透過這個表單傳送到你的資料庫，讓你的應用程式崩壞甚至更糟，而strong parameters 的機制就是要防止這種狀況發生</p>\n<p>要怎麼防護呢？ 其實他就很像一種過濾器的功能，我們預先設定好，不管使用者怎樣使用，只讓我想拿到的參數傳進來</p>\n<hr>\n<p>概念上講起來很簡單，但實際上怎麼做呢？</p>\n<p>我們從表單拿到的資訊會是一個 params ，這包資訊如果直接想直接存進資料庫就會被 strong parameters 機制卡住，得到上面那種錯誤畫面，所以我們就用 rails 提供的方法來過濾他</p>\n<p>我們比較常用的是 <code>require</code> 跟 <code>permit</code> 這兩種方法</p>\n<p>這兩種方法拿的東西有什麼不同呢？ <code>require</code> 拿到的是裡面的東西，而<code>permit</code> 拿到的是包括他的整個 Hash</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">params = ActionController::Parameters.new(<span class=\"symbol\">username:</span> <span class=\"string\">\"john\"</span>)</span><br><span class=\"line\">params.permit(<span class=\"symbol\">:username</span>)</span><br><span class=\"line\"><span class=\"comment\"># =&gt; &#123; \"username\" =&gt; \"john\" &#125;</span></span><br><span class=\"line\">params.<span class=\"keyword\">require</span>(<span class=\"symbol\">:username</span>)</span><br><span class=\"line\"><span class=\"comment\"># =&gt; \"john\"</span></span><br></pre></td></tr></table></figure>\n<p>(以上範例來自別人網站，來源在<a href=\"https://blog.trackets.com/2013/08/17/strong-parameters-by-example.html\" target=\"_blank\" rel=\"noopener\">這裡</a></p>\n<p><code>permit</code> 後面接的只能是 scalar values，至於什麼是 scaler values 官網也有寫：</p>\n<blockquote>\n<p>The permitted scalar types are String, Symbol, NilClass, Numeric, TrueClass, FalseClass, Date, Time, DateTime, StringIO, IO, ActionDispatch::Http::UploadedFile, and Rack::Test::UploadedFile</p>\n</blockquote>\n<p>這裡面是不包括 Hash 跟 Array 的！<br>\n假如你今天的資料結構長這樣</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">user:</span> &#123; <span class=\"symbol\">username:</span> <span class=\"string\">\"john\"</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>你必須用兩段式的方式將他過濾掉</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clean_params = params.<span class=\"keyword\">require</span>(<span class=\"symbol\">:user</span>).permit(<span class=\"symbol\">:username</span>)</span><br></pre></td></tr></table></figure>\n<p>更進階的方法還有在實體剛 new 出來的時候就先用 <code>fetch</code> 抓住資料再過濾或者複雜巢狀結構過濾等等，可以參考下面的參考資料，都寫得非常清楚，我這邊就不再贅述</p>\n<p>參考資料<br>\n<a href=\"https://guides.rubyonrails.org/getting_started.html\" target=\"_blank\" rel=\"noopener\">rails guide</a></p>\n<p><a href=\"https://blog.trackets.com/2013/08/17/strong-parameters-by-example.html\" target=\"_blank\" rel=\"noopener\">超有用的範例網站</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天來到 <a href=\"https://guides.rubyonrails.org/getting_started.html\" target=\"_blank\" rel=\"noopener\">5.6 的章節</a>，提到了關鍵字： strong parameters<br>\n如果在看 rails 網頁畫面看到這個 error 那你就是遇到今天要講的主題了<br>\n<img src=\"https://i.imgur.com/xhdMIEh.png\" alt=\"\"></p>\n<p>strong parameters 是 rails 的眾多防護機制之一<br>\n想像某種情境：今天你做出一個表單讓使用者填，但有心人士可能會把一些你不想要的資訊也透過這個表單傳送到你的資料庫，讓你的應用程式崩壞甚至更糟，而strong parameters 的機制就是要防止這種狀況發生</p>\n<p>要怎麼防護呢？ 其實他就很像一種過濾器的功能，我們預先設定好，不管使用者怎樣使用，只讓我想拿到的參數傳進來</p>\n<hr>\n<p>概念上講起來很簡單，但實際上怎麼做呢？</p>\n<p>我們從表單拿到的資訊會是一個 params ，這包資訊如果直接想直接存進資料庫就會被 strong parameters 機制卡住，得到上面那種錯誤畫面，所以我們就用 rails 提供的方法來過濾他</p>\n<p>我們比較常用的是 <code>require</code> 跟 <code>permit</code> 這兩種方法</p>\n<p>這兩種方法拿的東西有什麼不同呢？ <code>require</code> 拿到的是裡面的東西，而<code>permit</code> 拿到的是包括他的整個 Hash</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">params = ActionController::Parameters.new(<span class=\"symbol\">username:</span> <span class=\"string\">\"john\"</span>)</span><br><span class=\"line\">params.permit(<span class=\"symbol\">:username</span>)</span><br><span class=\"line\"><span class=\"comment\"># =&gt; &#123; \"username\" =&gt; \"john\" &#125;</span></span><br><span class=\"line\">params.<span class=\"keyword\">require</span>(<span class=\"symbol\">:username</span>)</span><br><span class=\"line\"><span class=\"comment\"># =&gt; \"john\"</span></span><br></pre></td></tr></table></figure>\n<p>(以上範例來自別人網站，來源在<a href=\"https://blog.trackets.com/2013/08/17/strong-parameters-by-example.html\" target=\"_blank\" rel=\"noopener\">這裡</a></p>\n<p><code>permit</code> 後面接的只能是 scalar values，至於什麼是 scaler values 官網也有寫：</p>\n<blockquote>\n<p>The permitted scalar types are String, Symbol, NilClass, Numeric, TrueClass, FalseClass, Date, Time, DateTime, StringIO, IO, ActionDispatch::Http::UploadedFile, and Rack::Test::UploadedFile</p>\n</blockquote>\n<p>這裡面是不包括 Hash 跟 Array 的！<br>\n假如你今天的資料結構長這樣</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">user:</span> &#123; <span class=\"symbol\">username:</span> <span class=\"string\">\"john\"</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>你必須用兩段式的方式將他過濾掉</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clean_params = params.<span class=\"keyword\">require</span>(<span class=\"symbol\">:user</span>).permit(<span class=\"symbol\">:username</span>)</span><br></pre></td></tr></table></figure>\n<p>更進階的方法還有在實體剛 new 出來的時候就先用 <code>fetch</code> 抓住資料再過濾或者複雜巢狀結構過濾等等，可以參考下面的參考資料，都寫得非常清楚，我這邊就不再贅述</p>\n<p>參考資料<br>\n<a href=\"https://guides.rubyonrails.org/getting_started.html\" target=\"_blank\" rel=\"noopener\">rails guide</a></p>\n<p><a href=\"https://blog.trackets.com/2013/08/17/strong-parameters-by-example.html\" target=\"_blank\" rel=\"noopener\">超有用的範例網站</a></p>\n"},{"title":"Primary key / Foreign key介紹","catalog":true,"toc_nav_num":true,"date":"2019-09-06T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1480455643164-cf3115e33b36?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Rails"],"updateDate":"2019-09-06T14:26:24.000Z","_content":"\n上一次講完 Avtive record 的解釋後，今天繼續往下看，網站在[這邊](https://guides.rubyonrails.org/active_record_basics.html)\n2.1 這邊的 model 命名慣例， rails guide 寫了很多說明，但重點其實就是一句話而已:\nmodel 名稱大寫單數， table 名稱小寫複數\n***\n2.2 這個段落中提到了 primary key 跟 foreign key，他們是什麼呢？\n### primary key: \n對於某個表格來說，primary key 是其中一個或多個欄位，他們被用來辨識每筆資料，再白話一點來說，就像是每一筆資料在這個表格中的地址，要注意的是每個表格的 primary key 只能有一種設定，就像你家地址不會有兩種寫法，但他可以同時有多個欄位\n但，什麼情況下有多個欄位呢？ 從 [Microsoft 的網站中](https://docs.microsoft.com/zh-tw/sql/relational-databases/tables/primary-and-foreign-key-constraints?view=sql-server-2017)我找到了一個例子\n![](https://i.imgur.com/3Wl12DT.png)\n這張圖表中，每個ProductID 可以不是唯一的，因為同一個產品可以很多個製造商製作，每個製造商也不是唯一的，因為一個製造商可以做很多產品\nBut!霸特！同時符合同一個製造商跟某個產品的組合只會有一種，這時候這兩個合起來就是這張表格的 primary key\n\n在 rails 中，就算你不寫，在生出每一個表格的時候，他也預設會幫你做出一個 id 的欄位，並用 id 號碼作為 primary key 來辨識每一筆資料\n\n### foreign key: \n在多個表格的狀況下，foreign key 是用來做不同表格之間的關聯，比方說今天 A 表格是記錄全班同學的名字跟學號， B 表格是全班同學的學號跟成績，他們之間可以用來當作關聯的很明顯是學號，因為這個資訊兩邊都有，我可以從 A 表格的學號去找到 B 表格某位特定同學的成績，因此學號就是 foreign key\n在一張表格中，可以跟很多表格有關聯性的欄位，因此很常 foreign key 不只有一個，當然也不一定要是 primary key\n\n明天會接著這篇繼續往下看喔！會介紹基本的 CRUD 操作跟部分覆寫原先設定的方法~\n\n參考資料：\n[Rails Guide](https://guides.rubyonrails.org/active_record_basics.html)\n\n[Foreign and Primary Key Differences](https://www.essentialsql.com/what-is-the-difference-between-a-primary-key-and-a-foreign-key/) \n\n[主要與外部索引鍵條件約束](https://docs.microsoft.com/zh-tw/sql/relational-databases/tables/primary-and-foreign-key-constraints?view=sql-server-2017)\n\n","source":"_posts/2019-09-06-day5.md","raw":"---\ntitle: \"Primary key / Foreign key介紹\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-06 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1480455643164-cf3115e33b36?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-06 22:26:24\n# top: 1\n\n---\n\n上一次講完 Avtive record 的解釋後，今天繼續往下看，網站在[這邊](https://guides.rubyonrails.org/active_record_basics.html)\n2.1 這邊的 model 命名慣例， rails guide 寫了很多說明，但重點其實就是一句話而已:\nmodel 名稱大寫單數， table 名稱小寫複數\n***\n2.2 這個段落中提到了 primary key 跟 foreign key，他們是什麼呢？\n### primary key: \n對於某個表格來說，primary key 是其中一個或多個欄位，他們被用來辨識每筆資料，再白話一點來說，就像是每一筆資料在這個表格中的地址，要注意的是每個表格的 primary key 只能有一種設定，就像你家地址不會有兩種寫法，但他可以同時有多個欄位\n但，什麼情況下有多個欄位呢？ 從 [Microsoft 的網站中](https://docs.microsoft.com/zh-tw/sql/relational-databases/tables/primary-and-foreign-key-constraints?view=sql-server-2017)我找到了一個例子\n![](https://i.imgur.com/3Wl12DT.png)\n這張圖表中，每個ProductID 可以不是唯一的，因為同一個產品可以很多個製造商製作，每個製造商也不是唯一的，因為一個製造商可以做很多產品\nBut!霸特！同時符合同一個製造商跟某個產品的組合只會有一種，這時候這兩個合起來就是這張表格的 primary key\n\n在 rails 中，就算你不寫，在生出每一個表格的時候，他也預設會幫你做出一個 id 的欄位，並用 id 號碼作為 primary key 來辨識每一筆資料\n\n### foreign key: \n在多個表格的狀況下，foreign key 是用來做不同表格之間的關聯，比方說今天 A 表格是記錄全班同學的名字跟學號， B 表格是全班同學的學號跟成績，他們之間可以用來當作關聯的很明顯是學號，因為這個資訊兩邊都有，我可以從 A 表格的學號去找到 B 表格某位特定同學的成績，因此學號就是 foreign key\n在一張表格中，可以跟很多表格有關聯性的欄位，因此很常 foreign key 不只有一個，當然也不一定要是 primary key\n\n明天會接著這篇繼續往下看喔！會介紹基本的 CRUD 操作跟部分覆寫原先設定的方法~\n\n參考資料：\n[Rails Guide](https://guides.rubyonrails.org/active_record_basics.html)\n\n[Foreign and Primary Key Differences](https://www.essentialsql.com/what-is-the-difference-between-a-primary-key-and-a-foreign-key/) \n\n[主要與外部索引鍵條件約束](https://docs.microsoft.com/zh-tw/sql/relational-databases/tables/primary-and-foreign-key-constraints?view=sql-server-2017)\n\n","slug":"2019-09-06-day5","published":1,"updated":"2019-11-22T06:38:57.452Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0etn00082ob1fornmozx","content":"<p>上一次講完 Avtive record 的解釋後，今天繼續往下看，網站在<a href=\"https://guides.rubyonrails.org/active_record_basics.html\" target=\"_blank\" rel=\"noopener\">這邊</a><br>\n2.1 這邊的 model 命名慣例， rails guide 寫了很多說明，但重點其實就是一句話而已:<br>\nmodel 名稱大寫單數， table 名稱小寫複數</p>\n<hr>\n<p>2.2 這個段落中提到了 primary key 跟 foreign key，他們是什麼呢？</p>\n<h3 id=\"primary-key\">primary key:</h3>\n<p>對於某個表格來說，primary key 是其中一個或多個欄位，他們被用來辨識每筆資料，再白話一點來說，就像是每一筆資料在這個表格中的地址，要注意的是每個表格的 primary key 只能有一種設定，就像你家地址不會有兩種寫法，但他可以同時有多個欄位<br>\n但，什麼情況下有多個欄位呢？ 從 <a href=\"https://docs.microsoft.com/zh-tw/sql/relational-databases/tables/primary-and-foreign-key-constraints?view=sql-server-2017\" target=\"_blank\" rel=\"noopener\">Microsoft 的網站中</a>我找到了一個例子<br>\n<img src=\"https://i.imgur.com/3Wl12DT.png\" alt=\"\"><br>\n這張圖表中，每個ProductID 可以不是唯一的，因為同一個產品可以很多個製造商製作，每個製造商也不是唯一的，因為一個製造商可以做很多產品<br>\nBut!霸特！同時符合同一個製造商跟某個產品的組合只會有一種，這時候這兩個合起來就是這張表格的 primary key</p>\n<p>在 rails 中，就算你不寫，在生出每一個表格的時候，他也預設會幫你做出一個 id 的欄位，並用 id 號碼作為 primary key 來辨識每一筆資料</p>\n<h3 id=\"foreign-key\">foreign key:</h3>\n<p>在多個表格的狀況下，foreign key 是用來做不同表格之間的關聯，比方說今天 A 表格是記錄全班同學的名字跟學號， B 表格是全班同學的學號跟成績，他們之間可以用來當作關聯的很明顯是學號，因為這個資訊兩邊都有，我可以從 A 表格的學號去找到 B 表格某位特定同學的成績，因此學號就是 foreign key<br>\n在一張表格中，可以跟很多表格有關聯性的欄位，因此很常 foreign key 不只有一個，當然也不一定要是 primary key</p>\n<p>明天會接著這篇繼續往下看喔！會介紹基本的 CRUD 操作跟部分覆寫原先設定的方法~</p>\n<p>參考資料：<br>\n<a href=\"https://guides.rubyonrails.org/active_record_basics.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n<p><a href=\"https://www.essentialsql.com/what-is-the-difference-between-a-primary-key-and-a-foreign-key/\" target=\"_blank\" rel=\"noopener\">Foreign and Primary Key Differences</a></p>\n<p><a href=\"https://docs.microsoft.com/zh-tw/sql/relational-databases/tables/primary-and-foreign-key-constraints?view=sql-server-2017\" target=\"_blank\" rel=\"noopener\">主要與外部索引鍵條件約束</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>上一次講完 Avtive record 的解釋後，今天繼續往下看，網站在<a href=\"https://guides.rubyonrails.org/active_record_basics.html\" target=\"_blank\" rel=\"noopener\">這邊</a><br>\n2.1 這邊的 model 命名慣例， rails guide 寫了很多說明，但重點其實就是一句話而已:<br>\nmodel 名稱大寫單數， table 名稱小寫複數</p>\n<hr>\n<p>2.2 這個段落中提到了 primary key 跟 foreign key，他們是什麼呢？</p>\n<h3>primary key:</h3>\n<p>對於某個表格來說，primary key 是其中一個或多個欄位，他們被用來辨識每筆資料，再白話一點來說，就像是每一筆資料在這個表格中的地址，要注意的是每個表格的 primary key 只能有一種設定，就像你家地址不會有兩種寫法，但他可以同時有多個欄位<br>\n但，什麼情況下有多個欄位呢？ 從 <a href=\"https://docs.microsoft.com/zh-tw/sql/relational-databases/tables/primary-and-foreign-key-constraints?view=sql-server-2017\" target=\"_blank\" rel=\"noopener\">Microsoft 的網站中</a>我找到了一個例子<br>\n<img src=\"https://i.imgur.com/3Wl12DT.png\" alt=\"\"><br>\n這張圖表中，每個ProductID 可以不是唯一的，因為同一個產品可以很多個製造商製作，每個製造商也不是唯一的，因為一個製造商可以做很多產品<br>\nBut!霸特！同時符合同一個製造商跟某個產品的組合只會有一種，這時候這兩個合起來就是這張表格的 primary key</p>\n<p>在 rails 中，就算你不寫，在生出每一個表格的時候，他也預設會幫你做出一個 id 的欄位，並用 id 號碼作為 primary key 來辨識每一筆資料</p>\n<h3>foreign key:</h3>\n<p>在多個表格的狀況下，foreign key 是用來做不同表格之間的關聯，比方說今天 A 表格是記錄全班同學的名字跟學號， B 表格是全班同學的學號跟成績，他們之間可以用來當作關聯的很明顯是學號，因為這個資訊兩邊都有，我可以從 A 表格的學號去找到 B 表格某位特定同學的成績，因此學號就是 foreign key<br>\n在一張表格中，可以跟很多表格有關聯性的欄位，因此很常 foreign key 不只有一個，當然也不一定要是 primary key</p>\n<p>明天會接著這篇繼續往下看喔！會介紹基本的 CRUD 操作跟部分覆寫原先設定的方法~</p>\n<p>參考資料：<br>\n<a href=\"https://guides.rubyonrails.org/active_record_basics.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n<p><a href=\"https://www.essentialsql.com/what-is-the-difference-between-a-primary-key-and-a-foreign-key/\" target=\"_blank\" rel=\"noopener\">Foreign and Primary Key Differences</a></p>\n<p><a href=\"https://docs.microsoft.com/zh-tw/sql/relational-databases/tables/primary-and-foreign-key-constraints?view=sql-server-2017\" target=\"_blank\" rel=\"noopener\">主要與外部索引鍵條件約束</a></p>\n"},{"title":"如何複寫Model table 慣例 / 資料存取刪除簡介","catalog":true,"toc_nav_num":true,"date":"2019-09-07T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1482783106515-925510af9a82?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Rails"],"updateDate":"2019-09-07T14:26:24.000Z","_content":"\n## 覆寫 model 中 table name 跟 primary key 慣例\n來到第四段這邊提到覆蓋掉原本設定的做法\n也就是 model 大寫單數 table 小寫複數的慣例如果要推翻掉要怎麼做呢？\n在 ActiveRecord::Base 中有個 `table_name=` 的方法，要先用它覆蓋原本的設定 \n```ruby\nself.table_name = \"my_products\"\n```\n接著還沒結束，要去這個 table 相對應的 yml 檔中使用 `set_fixture_class` 方法設定這個 table 的相對應 model，有沒有感覺到不遵循 Coc 要遭到怎樣的報應了 XD?\n```ruby\n#my_products.yml\nclass ProductTest < ActiveSupport::TestCase\n  set_fixture_class my_products: Product\n  fixtures :my_products\n  ...\nend\n```\n\n上一篇有講到 primary_key rails 會 default 幫你設定一個 ID 欄位，如果要改掉的話就用 `primary_key=` 這個方法\n``` ruby\nself.primary_key = \"product_id\"\n```\n***\n## 資料存取與刪除\n下面有講到一些比較基礎的 CRUD 方法，雖然他很快的帶過了，因為後面還會補充，但我還是在這裡先寫下最基本的方法\n\n存資料：\n存資料的方法主要有三種: create / update / save\nsave 是最基本的，把這筆資料存到資料庫中，那麼 save 跟 create 又差在哪裡呢？可以看下面的例子說明\n``` ruby \nc1 = Candidate.new(name: \"c1\")\nc1.save\n#上面的兩步會等於下面這步\nCandidate.create(name: \"c1\")\n```\n也就是說 create 同時新增又馬上儲存了這筆資料，如果使用 save 需要拆兩步做，update 跟 save 之間的差別也類似如此，只不過是用來更新已經存到資料庫的資料\n``` ruby\nc1 = Candidate.find_by(name: \"c1\")\nc1.name = \"qoo\"\nc1.save\n#上面的兩步會等於下面 update 這步\nc1 = Candidate.find_by(name: \"c1\")\nc1.update(name: \"qoo\")\n```\n\n刪除資料：\n這部分就比較單純，用 `destroy` 這個方法刊除資料庫中的資料，另外也有 `destroy_by` 跟 `destroy_all` 可以用\n``` ruby\nc1 = Candidate.find_by(name: \"c1\")\nc1.destroy\n#找到 name 叫做 \"c1\" 的第一筆資料然後刪除\nCandidate.destroy_by(name: \"c1\")\n#刪除所有 name 叫做 \"c1\" 的資料\nCandidate.destroy_all\n#刪除所有 Candidate 的資料\n``` \n\n下一篇預計會從 Layouts and Rendering in Rails 這裏繼續探討，為什麼會這樣跳著講呢？因為我覺得要對 MVC 這三個區塊分別有初步認識之後再進去看更細的章節才能把握到 rails 架構大致上的形狀，那就明天見了！\n\n參考資料\n[Rails Guide](https://guides.rubyonrails.org/active_record_basics.html)\n\n\n","source":"_posts/2019-09-07-day6.md","raw":"---\ntitle: \"如何複寫Model table 慣例 / 資料存取刪除簡介\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-07 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1482783106515-925510af9a82?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-07 22:26:24\n# top: 1\n\n---\n\n## 覆寫 model 中 table name 跟 primary key 慣例\n來到第四段這邊提到覆蓋掉原本設定的做法\n也就是 model 大寫單數 table 小寫複數的慣例如果要推翻掉要怎麼做呢？\n在 ActiveRecord::Base 中有個 `table_name=` 的方法，要先用它覆蓋原本的設定 \n```ruby\nself.table_name = \"my_products\"\n```\n接著還沒結束，要去這個 table 相對應的 yml 檔中使用 `set_fixture_class` 方法設定這個 table 的相對應 model，有沒有感覺到不遵循 Coc 要遭到怎樣的報應了 XD?\n```ruby\n#my_products.yml\nclass ProductTest < ActiveSupport::TestCase\n  set_fixture_class my_products: Product\n  fixtures :my_products\n  ...\nend\n```\n\n上一篇有講到 primary_key rails 會 default 幫你設定一個 ID 欄位，如果要改掉的話就用 `primary_key=` 這個方法\n``` ruby\nself.primary_key = \"product_id\"\n```\n***\n## 資料存取與刪除\n下面有講到一些比較基礎的 CRUD 方法，雖然他很快的帶過了，因為後面還會補充，但我還是在這裡先寫下最基本的方法\n\n存資料：\n存資料的方法主要有三種: create / update / save\nsave 是最基本的，把這筆資料存到資料庫中，那麼 save 跟 create 又差在哪裡呢？可以看下面的例子說明\n``` ruby \nc1 = Candidate.new(name: \"c1\")\nc1.save\n#上面的兩步會等於下面這步\nCandidate.create(name: \"c1\")\n```\n也就是說 create 同時新增又馬上儲存了這筆資料，如果使用 save 需要拆兩步做，update 跟 save 之間的差別也類似如此，只不過是用來更新已經存到資料庫的資料\n``` ruby\nc1 = Candidate.find_by(name: \"c1\")\nc1.name = \"qoo\"\nc1.save\n#上面的兩步會等於下面 update 這步\nc1 = Candidate.find_by(name: \"c1\")\nc1.update(name: \"qoo\")\n```\n\n刪除資料：\n這部分就比較單純，用 `destroy` 這個方法刊除資料庫中的資料，另外也有 `destroy_by` 跟 `destroy_all` 可以用\n``` ruby\nc1 = Candidate.find_by(name: \"c1\")\nc1.destroy\n#找到 name 叫做 \"c1\" 的第一筆資料然後刪除\nCandidate.destroy_by(name: \"c1\")\n#刪除所有 name 叫做 \"c1\" 的資料\nCandidate.destroy_all\n#刪除所有 Candidate 的資料\n``` \n\n下一篇預計會從 Layouts and Rendering in Rails 這裏繼續探討，為什麼會這樣跳著講呢？因為我覺得要對 MVC 這三個區塊分別有初步認識之後再進去看更細的章節才能把握到 rails 架構大致上的形狀，那就明天見了！\n\n參考資料\n[Rails Guide](https://guides.rubyonrails.org/active_record_basics.html)\n\n\n","slug":"2019-09-07-day6","published":1,"updated":"2019-11-22T06:39:12.685Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0eto00092ob1c1ijte5h","content":"<h2 id=\"覆寫-model-中-table-name-跟-primary-key-慣例\">覆寫 model 中 table name 跟 primary key 慣例</h2>\n<p>來到第四段這邊提到覆蓋掉原本設定的做法<br>\n也就是 model 大寫單數 table 小寫複數的慣例如果要推翻掉要怎麼做呢？<br>\n在 ActiveRecord::Base 中有個 <code>table_name=</code> 的方法，要先用它覆蓋原本的設定</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">self</span>.table_name = <span class=\"string\">\"my_products\"</span></span><br></pre></td></tr></table></figure>\n<p>接著還沒結束，要去這個 table 相對應的 yml 檔中使用 <code>set_fixture_class</code> 方法設定這個 table 的相對應 model，有沒有感覺到不遵循 Coc 要遭到怎樣的報應了 XD?</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#my_products.yml</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProductTest</span> &lt; ActiveSupport::TestCase</span></span><br><span class=\"line\">  set_fixture_class <span class=\"symbol\">my_products:</span> Product</span><br><span class=\"line\">  fixtures <span class=\"symbol\">:my_products</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>上一篇有講到 primary_key rails 會 default 幫你設定一個 ID 欄位，如果要改掉的話就用 <code>primary_key=</code> 這個方法</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">self</span>.primary_key = <span class=\"string\">\"product_id\"</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"資料存取與刪除\">資料存取與刪除</h2>\n<p>下面有講到一些比較基礎的 CRUD 方法，雖然他很快的帶過了，因為後面還會補充，但我還是在這裡先寫下最基本的方法</p>\n<p>存資料：<br>\n存資料的方法主要有三種: create / update / save<br>\nsave 是最基本的，把這筆資料存到資料庫中，那麼 save 跟 create 又差在哪裡呢？可以看下面的例子說明</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c1 = Candidate.new(<span class=\"symbol\">name:</span> <span class=\"string\">\"c1\"</span>)</span><br><span class=\"line\">c1.save</span><br><span class=\"line\"><span class=\"comment\">#上面的兩步會等於下面這步</span></span><br><span class=\"line\">Candidate.create(<span class=\"symbol\">name:</span> <span class=\"string\">\"c1\"</span>)</span><br></pre></td></tr></table></figure>\n<p>也就是說 create 同時新增又馬上儲存了這筆資料，如果使用 save 需要拆兩步做，update 跟 save 之間的差別也類似如此，只不過是用來更新已經存到資料庫的資料</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c1 = Candidate.find_by(<span class=\"symbol\">name:</span> <span class=\"string\">\"c1\"</span>)</span><br><span class=\"line\">c1.name = <span class=\"string\">\"qoo\"</span></span><br><span class=\"line\">c1.save</span><br><span class=\"line\"><span class=\"comment\">#上面的兩步會等於下面 update 這步</span></span><br><span class=\"line\">c1 = Candidate.find_by(<span class=\"symbol\">name:</span> <span class=\"string\">\"c1\"</span>)</span><br><span class=\"line\">c1.update(<span class=\"symbol\">name:</span> <span class=\"string\">\"qoo\"</span>)</span><br></pre></td></tr></table></figure>\n<p>刪除資料：<br>\n這部分就比較單純，用 <code>destroy</code> 這個方法刊除資料庫中的資料，另外也有 <code>destroy_by</code> 跟 <code>destroy_all</code> 可以用</p>\n<pre><code class=\"language-ruby\">c1 = Candidate.find_by(name: &quot;c1&quot;)\nc1.destroy\n#找到 name 叫做 &quot;c1&quot; 的第一筆資料然後刪除\nCandidate.destroy_by(name: &quot;c1&quot;)\n#刪除所有 name 叫做 &quot;c1&quot; 的資料\nCandidate.destroy_all\n#刪除所有 Candidate 的資料\n</code></pre>\n<p>下一篇預計會從 Layouts and Rendering in Rails 這裏繼續探討，為什麼會這樣跳著講呢？因為我覺得要對 MVC 這三個區塊分別有初步認識之後再進去看更細的章節才能把握到 rails 架構大致上的形狀，那就明天見了！</p>\n<p>參考資料<br>\n<a href=\"https://guides.rubyonrails.org/active_record_basics.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2>覆寫 model 中 table name 跟 primary key 慣例</h2>\n<p>來到第四段這邊提到覆蓋掉原本設定的做法<br>\n也就是 model 大寫單數 table 小寫複數的慣例如果要推翻掉要怎麼做呢？<br>\n在 ActiveRecord::Base 中有個 <code>table_name=</code> 的方法，要先用它覆蓋原本的設定</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">self</span>.table_name = <span class=\"string\">\"my_products\"</span></span><br></pre></td></tr></table></figure>\n<p>接著還沒結束，要去這個 table 相對應的 yml 檔中使用 <code>set_fixture_class</code> 方法設定這個 table 的相對應 model，有沒有感覺到不遵循 Coc 要遭到怎樣的報應了 XD?</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#my_products.yml</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProductTest</span> &lt; ActiveSupport::TestCase</span></span><br><span class=\"line\">  set_fixture_class <span class=\"symbol\">my_products:</span> Product</span><br><span class=\"line\">  fixtures <span class=\"symbol\">:my_products</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>上一篇有講到 primary_key rails 會 default 幫你設定一個 ID 欄位，如果要改掉的話就用 <code>primary_key=</code> 這個方法</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">self</span>.primary_key = <span class=\"string\">\"product_id\"</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2>資料存取與刪除</h2>\n<p>下面有講到一些比較基礎的 CRUD 方法，雖然他很快的帶過了，因為後面還會補充，但我還是在這裡先寫下最基本的方法</p>\n<p>存資料：<br>\n存資料的方法主要有三種: create / update / save<br>\nsave 是最基本的，把這筆資料存到資料庫中，那麼 save 跟 create 又差在哪裡呢？可以看下面的例子說明</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c1 = Candidate.new(<span class=\"symbol\">name:</span> <span class=\"string\">\"c1\"</span>)</span><br><span class=\"line\">c1.save</span><br><span class=\"line\"><span class=\"comment\">#上面的兩步會等於下面這步</span></span><br><span class=\"line\">Candidate.create(<span class=\"symbol\">name:</span> <span class=\"string\">\"c1\"</span>)</span><br></pre></td></tr></table></figure>\n<p>也就是說 create 同時新增又馬上儲存了這筆資料，如果使用 save 需要拆兩步做，update 跟 save 之間的差別也類似如此，只不過是用來更新已經存到資料庫的資料</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c1 = Candidate.find_by(<span class=\"symbol\">name:</span> <span class=\"string\">\"c1\"</span>)</span><br><span class=\"line\">c1.name = <span class=\"string\">\"qoo\"</span></span><br><span class=\"line\">c1.save</span><br><span class=\"line\"><span class=\"comment\">#上面的兩步會等於下面 update 這步</span></span><br><span class=\"line\">c1 = Candidate.find_by(<span class=\"symbol\">name:</span> <span class=\"string\">\"c1\"</span>)</span><br><span class=\"line\">c1.update(<span class=\"symbol\">name:</span> <span class=\"string\">\"qoo\"</span>)</span><br></pre></td></tr></table></figure>\n<p>刪除資料：<br>\n這部分就比較單純，用 <code>destroy</code> 這個方法刊除資料庫中的資料，另外也有 <code>destroy_by</code> 跟 <code>destroy_all</code> 可以用</p>\n<pre><code class=\"language-ruby\">c1 = Candidate.find_by(name: &quot;c1&quot;)\nc1.destroy\n#找到 name 叫做 &quot;c1&quot; 的第一筆資料然後刪除\nCandidate.destroy_by(name: &quot;c1&quot;)\n#刪除所有 name 叫做 &quot;c1&quot; 的資料\nCandidate.destroy_all\n#刪除所有 Candidate 的資料\n</code></pre>\n<p>下一篇預計會從 Layouts and Rendering in Rails 這裏繼續探討，為什麼會這樣跳著講呢？因為我覺得要對 MVC 這三個區塊分別有初步認識之後再進去看更細的章節才能把握到 rails 架構大致上的形狀，那就明天見了！</p>\n<p>參考資料<br>\n<a href=\"https://guides.rubyonrails.org/active_record_basics.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n"},{"title":"Active Record 介紹","catalog":true,"toc_nav_num":true,"date":"2019-09-05T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1472392036208-33c459d5c8b9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2089&q=80","catagories":["Rails"],"updateDate":"2019-09-05T14:26:24.000Z","_content":"\n上一個章節的內容大部分其實都隱藏在 rails guide 其他的文章中，所以一些專有名詞介紹完之後我們今天來到下一單元:[Active Record Basics](https://guides.rubyonrails.org/active_record_basics.html)\n\n光是 Active Record 這個名詞本身就不太能讓人理解了，所以這邊來嘗試介紹一下~\n\nrails guide 中提到 Active Record 是一種 ORM 的框架，那什麼是 ORM 呢？\n\nORM (Object Relational Mapping) 是一種程序設計技術，把兩個互相無法溝通的系統，使用物件導向語言把關聯性建立起來，對於 Active Record 來說是用來簡化資料庫操作語法\n\n如果再更白話一點來說：\nActiveRecord 的概念是把資料庫的每一列 (每一筆資料) 包成一個物件，並且給他一些方法，可以想像成把這些資料打了類固醇，讓他們突然多了很多方法可以操作使用，使用上更方便\n\n至於 Model 是什麼?\nModel 可以當作是資料庫前面的翻譯蒟蒻，是根據ActiveRecord 創造出來的產物 (概念上很像 Model = ActiveRecord.new )\n\n聽說在 Rails 中因為 ORM 實在太好用，所以導致大部分的人 SQL 語法都不是很好 XD，不管是資料庫的搜尋還是儲存，幾乎都是靠 ORM，其實這並不是好現象，而且 SQL 語法是一個不管在什麼領域都非常實用的技能！期許自己之後也能繼續鑽研這部分！\n\n今天就先寫到這邊了！爬資料也花了很多時間，希望有幫到來搜尋相關知識的朋友！\n\n參考資料：\n[rails guide](https://guides.rubyonrails.org/active_record_basics.html)\n\n[深入了解 ActiveRecord](https://draveness.me/activerecord)\n\n[ORM in ruby](https://www.sitepoint.com/orm-ruby-introduction/?source=post_page-----fa2147787d09----------------------)\n\n\n","source":"_posts/2019-09-05-day4.md","raw":"---\ntitle: \"Active Record 介紹\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-05 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1472392036208-33c459d5c8b9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2089&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-05 22:26:24\n# top: 1\n\n---\n\n上一個章節的內容大部分其實都隱藏在 rails guide 其他的文章中，所以一些專有名詞介紹完之後我們今天來到下一單元:[Active Record Basics](https://guides.rubyonrails.org/active_record_basics.html)\n\n光是 Active Record 這個名詞本身就不太能讓人理解了，所以這邊來嘗試介紹一下~\n\nrails guide 中提到 Active Record 是一種 ORM 的框架，那什麼是 ORM 呢？\n\nORM (Object Relational Mapping) 是一種程序設計技術，把兩個互相無法溝通的系統，使用物件導向語言把關聯性建立起來，對於 Active Record 來說是用來簡化資料庫操作語法\n\n如果再更白話一點來說：\nActiveRecord 的概念是把資料庫的每一列 (每一筆資料) 包成一個物件，並且給他一些方法，可以想像成把這些資料打了類固醇，讓他們突然多了很多方法可以操作使用，使用上更方便\n\n至於 Model 是什麼?\nModel 可以當作是資料庫前面的翻譯蒟蒻，是根據ActiveRecord 創造出來的產物 (概念上很像 Model = ActiveRecord.new )\n\n聽說在 Rails 中因為 ORM 實在太好用，所以導致大部分的人 SQL 語法都不是很好 XD，不管是資料庫的搜尋還是儲存，幾乎都是靠 ORM，其實這並不是好現象，而且 SQL 語法是一個不管在什麼領域都非常實用的技能！期許自己之後也能繼續鑽研這部分！\n\n今天就先寫到這邊了！爬資料也花了很多時間，希望有幫到來搜尋相關知識的朋友！\n\n參考資料：\n[rails guide](https://guides.rubyonrails.org/active_record_basics.html)\n\n[深入了解 ActiveRecord](https://draveness.me/activerecord)\n\n[ORM in ruby](https://www.sitepoint.com/orm-ruby-introduction/?source=post_page-----fa2147787d09----------------------)\n\n\n","slug":"2019-09-05-day4","published":1,"updated":"2019-11-22T06:38:46.720Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0ets000c2ob1j2lp1lxg","content":"<p>上一個章節的內容大部分其實都隱藏在 rails guide 其他的文章中，所以一些專有名詞介紹完之後我們今天來到下一單元:<a href=\"https://guides.rubyonrails.org/active_record_basics.html\" target=\"_blank\" rel=\"noopener\">Active Record Basics</a></p>\n<p>光是 Active Record 這個名詞本身就不太能讓人理解了，所以這邊來嘗試介紹一下~</p>\n<p>rails guide 中提到 Active Record 是一種 ORM 的框架，那什麼是 ORM 呢？</p>\n<p>ORM (Object Relational Mapping) 是一種程序設計技術，把兩個互相無法溝通的系統，使用物件導向語言把關聯性建立起來，對於 Active Record 來說是用來簡化資料庫操作語法</p>\n<p>如果再更白話一點來說：<br>\nActiveRecord 的概念是把資料庫的每一列 (每一筆資料) 包成一個物件，並且給他一些方法，可以想像成把這些資料打了類固醇，讓他們突然多了很多方法可以操作使用，使用上更方便</p>\n<p>至於 Model 是什麼?<br>\nModel 可以當作是資料庫前面的翻譯蒟蒻，是根據ActiveRecord 創造出來的產物 (概念上很像 Model = ActiveRecord.new )</p>\n<p>聽說在 Rails 中因為 ORM 實在太好用，所以導致大部分的人 SQL 語法都不是很好 XD，不管是資料庫的搜尋還是儲存，幾乎都是靠 ORM，其實這並不是好現象，而且 SQL 語法是一個不管在什麼領域都非常實用的技能！期許自己之後也能繼續鑽研這部分！</p>\n<p>今天就先寫到這邊了！爬資料也花了很多時間，希望有幫到來搜尋相關知識的朋友！</p>\n<p>參考資料：<br>\n<a href=\"https://guides.rubyonrails.org/active_record_basics.html\" target=\"_blank\" rel=\"noopener\">rails guide</a></p>\n<p><a href=\"https://draveness.me/activerecord\" target=\"_blank\" rel=\"noopener\">深入了解 ActiveRecord</a></p>\n<p><a href=\"https://www.sitepoint.com/orm-ruby-introduction/?source=post_page-----fa2147787d09----------------------\" target=\"_blank\" rel=\"noopener\">ORM in ruby</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>上一個章節的內容大部分其實都隱藏在 rails guide 其他的文章中，所以一些專有名詞介紹完之後我們今天來到下一單元:<a href=\"https://guides.rubyonrails.org/active_record_basics.html\" target=\"_blank\" rel=\"noopener\">Active Record Basics</a></p>\n<p>光是 Active Record 這個名詞本身就不太能讓人理解了，所以這邊來嘗試介紹一下~</p>\n<p>rails guide 中提到 Active Record 是一種 ORM 的框架，那什麼是 ORM 呢？</p>\n<p>ORM (Object Relational Mapping) 是一種程序設計技術，把兩個互相無法溝通的系統，使用物件導向語言把關聯性建立起來，對於 Active Record 來說是用來簡化資料庫操作語法</p>\n<p>如果再更白話一點來說：<br>\nActiveRecord 的概念是把資料庫的每一列 (每一筆資料) 包成一個物件，並且給他一些方法，可以想像成把這些資料打了類固醇，讓他們突然多了很多方法可以操作使用，使用上更方便</p>\n<p>至於 Model 是什麼?<br>\nModel 可以當作是資料庫前面的翻譯蒟蒻，是根據ActiveRecord 創造出來的產物 (概念上很像 Model = ActiveRecord.new )</p>\n<p>聽說在 Rails 中因為 ORM 實在太好用，所以導致大部分的人 SQL 語法都不是很好 XD，不管是資料庫的搜尋還是儲存，幾乎都是靠 ORM，其實這並不是好現象，而且 SQL 語法是一個不管在什麼領域都非常實用的技能！期許自己之後也能繼續鑽研這部分！</p>\n<p>今天就先寫到這邊了！爬資料也花了很多時間，希望有幫到來搜尋相關知識的朋友！</p>\n<p>參考資料：<br>\n<a href=\"https://guides.rubyonrails.org/active_record_basics.html\" target=\"_blank\" rel=\"noopener\">rails guide</a></p>\n<p><a href=\"https://draveness.me/activerecord\" target=\"_blank\" rel=\"noopener\">深入了解 ActiveRecord</a></p>\n<p><a href=\"https://www.sitepoint.com/orm-ruby-introduction/?source=post_page-----fa2147787d09----------------------\" target=\"_blank\" rel=\"noopener\">ORM in ruby</a></p>\n"},{"title":"Render 的基本使用","catalog":true,"toc_nav_num":true,"date":"2019-09-08T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1487615215796-62477c922fa5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1567&q=80","catagories":["Rails"],"updateDate":"2019-09-08T14:26:24.000Z","_content":"\n## Controller 跟 View 最基本的慣例\n今天來到全新的章節，來看看他寫了什麼吧~\n這[整篇文章](https://guides.rubyonrails.org/layouts_and_rendering.html)主要講的是 controller 跟 view 之間的互動關係\n\n在 2.1 這邊提到了一個很常用的慣例\n如果今天有一個 controller 叫做 CandidatesController，如果內容長這樣\n```ruby\nclass CandidatesController < ApplicationController\n    def index\n    end\nend\n```\n在 routes 檔案中有設定好路徑的前提下\n\n雖然我們的 index 方法裡面什麼都沒寫，但他會根據這個 controller 跟 index 這個方法的名字去找到 views 資料夾底下 candidates 資料夾中有 index.html 字樣的檔案，檔案名稱有可能是 index.html.erb 或者 index.html.slim 等等\n\n>views/controller_name/action_name.html.erb => 會自動找到這裡來喔\n\n檔案名其中的 erb 跟 slim 是樣版引擎，這裡面除了 html 的語法之外，還可以用特殊的方式容納其他語言的語法進來，這個方式根據不同樣板引擎會有不同的方法\n***\n## Render 的基本使用\n接下來文章中提到我們可以用 render 這個方法去渲染出很多種類的資訊，比較常用的是我們會需要去渲染出同一個 controller 裡面的 action\n``` ruby\n# 以下六種方式都可以渲染出 candidates controller 中的 edit 畫面\nrender :edit\nrender action: :edit\nrender \"edit\"\nrender action: \"edit\"\nrender \"candidates/edit\"\nrender template: \"candidates/edit\"\n```\n\nrender 後面還可以接其他種資訊\n``` ruby\n# 要渲染出其他 controller 的畫面可以用 render template:\nrender template: \"products/show\"\n# render template 後面的 template 可以選擇不寫\nrender \"products/show\"\n\n# render inline: 只適用在 erb 樣版引擎，不建議使用\nrender inline: \"<% products.each do |p| %><p><%= p.name %></p><% end %>\"\n# 完全不想要任何 html 標籤的話可以使用 plain\nrender plain: \"OK\"\n\n# 如果要渲染的 html 內容不多可以考慮寫在 controller 中\nrender html: helpers.tag.strong('Not Found')\n\n# 除上述之外， 也可以 render json / xml / body / file 這些格式\n```\n在 render 後面，我們還可以額外增加一些屬性如下：\n``` ruby\n# conten_type 指的是要用什麼格式去渲染，預設會用 text/html \n:content_type\n# layout 可以指定我們要讓他的外殼用哪一份文件去渲染，這部分會在之後再提到\n:layout\n# 用 location 設定 HTTP Location header\n:location\n# 用 status 直接指定 http 狀態\n:status\n# 用 formats 轉換格式，預設是 html\n:formats\n# rails 預設中已經有手機跟桌機格式，可以用 varaints 去做變換\n:variants\n```\n\n今天就先寫到這邊啦！請大家期待更多好歌吧（咦？）\n\n參考資料\n[Rails Guide](https://guides.rubyonrails.org/layouts_and_rendering.html)\n\n[Rails] [Action View, Layout, Partial, Render](https://pjchender.github.io/2017/10/03/rails-action-view-layout-partial-render/)\n","source":"_posts/2019-09-08-day7.md","raw":"---\ntitle: \"Render 的基本使用\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-08 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1487615215796-62477c922fa5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1567&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-08 22:26:24\n# top: 1\n\n---\n\n## Controller 跟 View 最基本的慣例\n今天來到全新的章節，來看看他寫了什麼吧~\n這[整篇文章](https://guides.rubyonrails.org/layouts_and_rendering.html)主要講的是 controller 跟 view 之間的互動關係\n\n在 2.1 這邊提到了一個很常用的慣例\n如果今天有一個 controller 叫做 CandidatesController，如果內容長這樣\n```ruby\nclass CandidatesController < ApplicationController\n    def index\n    end\nend\n```\n在 routes 檔案中有設定好路徑的前提下\n\n雖然我們的 index 方法裡面什麼都沒寫，但他會根據這個 controller 跟 index 這個方法的名字去找到 views 資料夾底下 candidates 資料夾中有 index.html 字樣的檔案，檔案名稱有可能是 index.html.erb 或者 index.html.slim 等等\n\n>views/controller_name/action_name.html.erb => 會自動找到這裡來喔\n\n檔案名其中的 erb 跟 slim 是樣版引擎，這裡面除了 html 的語法之外，還可以用特殊的方式容納其他語言的語法進來，這個方式根據不同樣板引擎會有不同的方法\n***\n## Render 的基本使用\n接下來文章中提到我們可以用 render 這個方法去渲染出很多種類的資訊，比較常用的是我們會需要去渲染出同一個 controller 裡面的 action\n``` ruby\n# 以下六種方式都可以渲染出 candidates controller 中的 edit 畫面\nrender :edit\nrender action: :edit\nrender \"edit\"\nrender action: \"edit\"\nrender \"candidates/edit\"\nrender template: \"candidates/edit\"\n```\n\nrender 後面還可以接其他種資訊\n``` ruby\n# 要渲染出其他 controller 的畫面可以用 render template:\nrender template: \"products/show\"\n# render template 後面的 template 可以選擇不寫\nrender \"products/show\"\n\n# render inline: 只適用在 erb 樣版引擎，不建議使用\nrender inline: \"<% products.each do |p| %><p><%= p.name %></p><% end %>\"\n# 完全不想要任何 html 標籤的話可以使用 plain\nrender plain: \"OK\"\n\n# 如果要渲染的 html 內容不多可以考慮寫在 controller 中\nrender html: helpers.tag.strong('Not Found')\n\n# 除上述之外， 也可以 render json / xml / body / file 這些格式\n```\n在 render 後面，我們還可以額外增加一些屬性如下：\n``` ruby\n# conten_type 指的是要用什麼格式去渲染，預設會用 text/html \n:content_type\n# layout 可以指定我們要讓他的外殼用哪一份文件去渲染，這部分會在之後再提到\n:layout\n# 用 location 設定 HTTP Location header\n:location\n# 用 status 直接指定 http 狀態\n:status\n# 用 formats 轉換格式，預設是 html\n:formats\n# rails 預設中已經有手機跟桌機格式，可以用 varaints 去做變換\n:variants\n```\n\n今天就先寫到這邊啦！請大家期待更多好歌吧（咦？）\n\n參考資料\n[Rails Guide](https://guides.rubyonrails.org/layouts_and_rendering.html)\n\n[Rails] [Action View, Layout, Partial, Render](https://pjchender.github.io/2017/10/03/rails-action-view-layout-partial-render/)\n","slug":"2019-09-08-day7","published":1,"updated":"2019-11-22T06:39:24.033Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0etv000e2ob1nb9bfezd","content":"<h2 id=\"controller-跟-view-最基本的慣例\">Controller 跟 View 最基本的慣例</h2>\n<p>今天來到全新的章節，來看看他寫了什麼吧~<br>\n這<a href=\"https://guides.rubyonrails.org/layouts_and_rendering.html\" target=\"_blank\" rel=\"noopener\">整篇文章</a>主要講的是 controller 跟 view 之間的互動關係</p>\n<p>在 2.1 這邊提到了一個很常用的慣例<br>\n如果今天有一個 controller 叫做 CandidatesController，如果內容長這樣</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CandidatesController</span> &lt; ApplicationController</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span></span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>在 routes 檔案中有設定好路徑的前提下</p>\n<p>雖然我們的 index 方法裡面什麼都沒寫，但他會根據這個 controller 跟 index 這個方法的名字去找到 views 資料夾底下 candidates 資料夾中有 index.html 字樣的檔案，檔案名稱有可能是 index.html.erb 或者 index.html.slim 等等</p>\n<blockquote>\n<p>views/controller_name/action_name.html.erb =&gt; 會自動找到這裡來喔</p>\n</blockquote>\n<p>檔案名其中的 erb 跟 slim 是樣版引擎，這裡面除了 html 的語法之外，還可以用特殊的方式容納其他語言的語法進來，這個方式根據不同樣板引擎會有不同的方法</p>\n<hr>\n<h2 id=\"render-的基本使用\">Render 的基本使用</h2>\n<p>接下來文章中提到我們可以用 render 這個方法去渲染出很多種類的資訊，比較常用的是我們會需要去渲染出同一個 controller 裡面的 action</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 以下六種方式都可以渲染出 candidates controller 中的 edit 畫面</span></span><br><span class=\"line\">render <span class=\"symbol\">:edit</span></span><br><span class=\"line\">render <span class=\"symbol\">action:</span> <span class=\"symbol\">:edit</span></span><br><span class=\"line\">render <span class=\"string\">\"edit\"</span></span><br><span class=\"line\">render <span class=\"symbol\">action:</span> <span class=\"string\">\"edit\"</span></span><br><span class=\"line\">render <span class=\"string\">\"candidates/edit\"</span></span><br><span class=\"line\">render <span class=\"symbol\">template:</span> <span class=\"string\">\"candidates/edit\"</span></span><br></pre></td></tr></table></figure>\n<p>render 後面還可以接其他種資訊</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 要渲染出其他 controller 的畫面可以用 render template:</span></span><br><span class=\"line\">render <span class=\"symbol\">template:</span> <span class=\"string\">\"products/show\"</span></span><br><span class=\"line\"><span class=\"comment\"># render template 後面的 template 可以選擇不寫</span></span><br><span class=\"line\">render <span class=\"string\">\"products/show\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># render inline: 只適用在 erb 樣版引擎，不建議使用</span></span><br><span class=\"line\">render <span class=\"symbol\">inline:</span> <span class=\"string\">\"&lt;% products.each do |p| %&gt;&lt;p&gt;&lt;%= p.name %&gt;&lt;/p&gt;&lt;% end %&gt;\"</span></span><br><span class=\"line\"><span class=\"comment\"># 完全不想要任何 html 標籤的話可以使用 plain</span></span><br><span class=\"line\">render <span class=\"symbol\">plain:</span> <span class=\"string\">\"OK\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果要渲染的 html 內容不多可以考慮寫在 controller 中</span></span><br><span class=\"line\">render <span class=\"symbol\">html:</span> helpers.tag.strong(<span class=\"string\">'Not Found'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 除上述之外， 也可以 render json / xml / body / file 這些格式</span></span><br></pre></td></tr></table></figure>\n<p>在 render 後面，我們還可以額外增加一些屬性如下：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># conten_type 指的是要用什麼格式去渲染，預設會用 text/html </span></span><br><span class=\"line\"><span class=\"symbol\">:content_type</span></span><br><span class=\"line\"><span class=\"comment\"># layout 可以指定我們要讓他的外殼用哪一份文件去渲染，這部分會在之後再提到</span></span><br><span class=\"line\"><span class=\"symbol\">:layout</span></span><br><span class=\"line\"><span class=\"comment\"># 用 location 設定 HTTP Location header</span></span><br><span class=\"line\"><span class=\"symbol\">:location</span></span><br><span class=\"line\"><span class=\"comment\"># 用 status 直接指定 http 狀態</span></span><br><span class=\"line\"><span class=\"symbol\">:status</span></span><br><span class=\"line\"><span class=\"comment\"># 用 formats 轉換格式，預設是 html</span></span><br><span class=\"line\"><span class=\"symbol\">:formats</span></span><br><span class=\"line\"><span class=\"comment\"># rails 預設中已經有手機跟桌機格式，可以用 varaints 去做變換</span></span><br><span class=\"line\"><span class=\"symbol\">:variants</span></span><br></pre></td></tr></table></figure>\n<p>今天就先寫到這邊啦！請大家期待更多好歌吧（咦？）</p>\n<p>參考資料<br>\n<a href=\"https://guides.rubyonrails.org/layouts_and_rendering.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n<p>[Rails] <a href=\"https://pjchender.github.io/2017/10/03/rails-action-view-layout-partial-render/\" target=\"_blank\" rel=\"noopener\">Action View, Layout, Partial, Render</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2>Controller 跟 View 最基本的慣例</h2>\n<p>今天來到全新的章節，來看看他寫了什麼吧~<br>\n這<a href=\"https://guides.rubyonrails.org/layouts_and_rendering.html\" target=\"_blank\" rel=\"noopener\">整篇文章</a>主要講的是 controller 跟 view 之間的互動關係</p>\n<p>在 2.1 這邊提到了一個很常用的慣例<br>\n如果今天有一個 controller 叫做 CandidatesController，如果內容長這樣</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CandidatesController</span> &lt; ApplicationController</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span></span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>在 routes 檔案中有設定好路徑的前提下</p>\n<p>雖然我們的 index 方法裡面什麼都沒寫，但他會根據這個 controller 跟 index 這個方法的名字去找到 views 資料夾底下 candidates 資料夾中有 index.html 字樣的檔案，檔案名稱有可能是 index.html.erb 或者 index.html.slim 等等</p>\n<blockquote>\n<p>views/controller_name/action_name.html.erb =&gt; 會自動找到這裡來喔</p>\n</blockquote>\n<p>檔案名其中的 erb 跟 slim 是樣版引擎，這裡面除了 html 的語法之外，還可以用特殊的方式容納其他語言的語法進來，這個方式根據不同樣板引擎會有不同的方法</p>\n<hr>\n<h2>Render 的基本使用</h2>\n<p>接下來文章中提到我們可以用 render 這個方法去渲染出很多種類的資訊，比較常用的是我們會需要去渲染出同一個 controller 裡面的 action</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 以下六種方式都可以渲染出 candidates controller 中的 edit 畫面</span></span><br><span class=\"line\">render <span class=\"symbol\">:edit</span></span><br><span class=\"line\">render <span class=\"symbol\">action:</span> <span class=\"symbol\">:edit</span></span><br><span class=\"line\">render <span class=\"string\">\"edit\"</span></span><br><span class=\"line\">render <span class=\"symbol\">action:</span> <span class=\"string\">\"edit\"</span></span><br><span class=\"line\">render <span class=\"string\">\"candidates/edit\"</span></span><br><span class=\"line\">render <span class=\"symbol\">template:</span> <span class=\"string\">\"candidates/edit\"</span></span><br></pre></td></tr></table></figure>\n<p>render 後面還可以接其他種資訊</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 要渲染出其他 controller 的畫面可以用 render template:</span></span><br><span class=\"line\">render <span class=\"symbol\">template:</span> <span class=\"string\">\"products/show\"</span></span><br><span class=\"line\"><span class=\"comment\"># render template 後面的 template 可以選擇不寫</span></span><br><span class=\"line\">render <span class=\"string\">\"products/show\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># render inline: 只適用在 erb 樣版引擎，不建議使用</span></span><br><span class=\"line\">render <span class=\"symbol\">inline:</span> <span class=\"string\">\"&lt;% products.each do |p| %&gt;&lt;p&gt;&lt;%= p.name %&gt;&lt;/p&gt;&lt;% end %&gt;\"</span></span><br><span class=\"line\"><span class=\"comment\"># 完全不想要任何 html 標籤的話可以使用 plain</span></span><br><span class=\"line\">render <span class=\"symbol\">plain:</span> <span class=\"string\">\"OK\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果要渲染的 html 內容不多可以考慮寫在 controller 中</span></span><br><span class=\"line\">render <span class=\"symbol\">html:</span> helpers.tag.strong(<span class=\"string\">'Not Found'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 除上述之外， 也可以 render json / xml / body / file 這些格式</span></span><br></pre></td></tr></table></figure>\n<p>在 render 後面，我們還可以額外增加一些屬性如下：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># conten_type 指的是要用什麼格式去渲染，預設會用 text/html </span></span><br><span class=\"line\"><span class=\"symbol\">:content_type</span></span><br><span class=\"line\"><span class=\"comment\"># layout 可以指定我們要讓他的外殼用哪一份文件去渲染，這部分會在之後再提到</span></span><br><span class=\"line\"><span class=\"symbol\">:layout</span></span><br><span class=\"line\"><span class=\"comment\"># 用 location 設定 HTTP Location header</span></span><br><span class=\"line\"><span class=\"symbol\">:location</span></span><br><span class=\"line\"><span class=\"comment\"># 用 status 直接指定 http 狀態</span></span><br><span class=\"line\"><span class=\"symbol\">:status</span></span><br><span class=\"line\"><span class=\"comment\"># 用 formats 轉換格式，預設是 html</span></span><br><span class=\"line\"><span class=\"symbol\">:formats</span></span><br><span class=\"line\"><span class=\"comment\"># rails 預設中已經有手機跟桌機格式，可以用 varaints 去做變換</span></span><br><span class=\"line\"><span class=\"symbol\">:variants</span></span><br></pre></td></tr></table></figure>\n<p>今天就先寫到這邊啦！請大家期待更多好歌吧（咦？）</p>\n<p>參考資料<br>\n<a href=\"https://guides.rubyonrails.org/layouts_and_rendering.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n<p>[Rails] <a href=\"https://pjchender.github.io/2017/10/03/rails-action-view-layout-partial-render/\" target=\"_blank\" rel=\"noopener\">Action View, Layout, Partial, Render</a></p>\n"},{"title":"Layout 的基本使用","catalog":true,"toc_nav_num":true,"date":"2019-09-09T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1500921726673-e4bdc09efa55?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Rails"],"updateDate":"2019-09-09T14:26:24.000Z","_content":"\n## 如何使用 Layout\n今天從到[這篇](https://guides.rubyonrails.org/layouts_and_rendering.html)的 2.2.13 繼續看下去，這裡講到 layout 的使用方法\n\n我們先來看看一開始 rails 的 layout 長什麼模樣\n``` html\n<!-- views/layouts/application.html.erb -->\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>titile</title>\n    <%= csrf_meta_tags %>\n    <%= csp_meta_tag %>\n\n    <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>\n    <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>\n  </head>\n  <body>\n\n      <%= yield %>\n\n  </body>\n</html>\n```\n看到這裡，不知道大家有沒有注意到在平常使用 rails view 的時候，怎麼都不用寫上面這些寫 html 的時候一定要寫的東西？就是因為它藏在 layout 裡面，平常他直接會跟著 controller ，基本上在同一個 controller 中的 layout 是一樣的，然後在 body 中才把內容 \"讓\" 給 view 裡面的內容渲染\n\n\n那這些 layout 該放在哪裡呢？\n\n如果你的 controller 名字叫做 CandidatesController，那麼他會去找 app/views/layouts/candidates.html.erb 這個檔案當作 layout ， 如果沒有這個檔案，他會去找 app/views/layouts/application.html.erb 當作 layout，這些都是 \"慣例\" ，當然我們也是可以自己設定\n\n```ruby\nclass CandidatesController < ApplicationController\n  layout \"qoo\"\n  #...\nend\n```\n利用 layout 這個方法，我們可以指定 layout 是哪個檔案，上面這個例子中就會去找 app/views/layouts/qoo.html.erb 這檔案\n\n另外，layout 後面也可以接方法，來判斷是要使用哪一份 layout\n```ruby\nclass CandidatesController < ApplicationController\n  layout :which_layout\n \n  private\n    def which_layout\n      @current_user.login? ? \"admin\" : \"visit\"\n    end\nend\n```\n在上面的例子中，會去判斷 @current_user 是否登入，登入的話會使用 admin layout，否則使用 visit layout\n\n***\n## 跳回前一個來源： redirect_back\n\n有時候我們會希望使用者回到他在進到這個頁面的前一個來源，這時候可以用 `redirect_back` 這個方法，在 rails 5 以前是 `redirect_to :back`\n\n不過要注意的是，使用這個方法的前提是瀏覽器會回報 `HTTP_REFERER` 這個 error ，但有時候瀏覽器並不是丟這個 error 而是丟一個例外，這時候畫面就會爆掉，接下來說明解決方法\n\n在 rails 5 以前解決這個問題有點麻煩，必須去抓這個例外錯誤\n```ruby\nclass CandidatesController < ApplicationController\n  rescue_from ActionController::RedirectBackError, with: :redirect_to_default\n\n  def vote\n    @candidate = Candidate.find params[:id]\n    @candidate.vote\n    redirect_to :back\n  end\n\n  private\n\n  def redirect_to_default\n    redirect_to root_path\n  end\nend\n```\n上面這個例子是說，當例外發生的時候，我就把瀏覽器導至首頁\n\n現在變得比較簡單了，可以用 `fallback_location` 這個方法\n```ruby\nclass CandidatesController < ApplicationController\n\n  def vote\n    @candidate = Candidate.find params[:id]\n    @candidate.vote\n    redirect_back(fallback_location: root_path)\n  end\nend\n```\n***\n## Render 跟 direct_to 的差異？\n2.3 中提到，我們會在某個條件成功或失敗的情況下，使用 `render` 或者 `redirect_to` 讓使用者看到跳轉的畫面，那`redirect_to` 跟 `render` 有什麼不同？\n\n\nredirect_to 是叫瀏覽器送出新的 request 給這個目的地的 url \nrender 則是請瀏覽器借用哪個畫面做為回應\n\n在 2.3.2 中， Rails guide 給了一個講解的很清楚的例子，我們這裡直接借用\n\n```ruby\n# redirect_to 版本\ndef index\n  @books = Book.all\nend\ndef show\n  @book = Book.find_by(id: params[:id])\n  if @book.nil?\n    redirect_to action: :index\n  end\nend\n\n# render 版本\ndef index\n  @books = Book.all\nend\ndef show\n  @book = Book.find_by(id: params[:id])\n  if @book.nil?\n    @books = Book.all\n    flash.now[:alert] = \"Your book was not found\"\n    render \"index\"\n  end\nend\n```\n乍看之下 `redirect_to` 的程式碼比較簡短，但我們透過瀏覽器的角度來看看這件事情\n\n在 `redirect_to` 版本中，我們嘗試去找這本 @book ，但發現並沒有這本書，這時候 controller 要求瀏覽器去 index 的頁面，我們轉到這個網址來，發現需要 index 的 view 跟 資料庫中的 @books 資訊，因此再去抓這些東西回來到瀏覽器上\n\n在 `render` 版本中，我們同樣沒找到這本書，這時候 controller 請我們先抓資料庫中的 @bookd 資料，並請瀏覽器渲染出 index 的畫面，需要 @books 的地方就把資料套上去\n\n從上面兩個說明中，應該可以知道在這個例子中 `redirect_to` 多繞了一圈，因此效能較差，這種情況下建議使用 `render`\n\n\n參考資料 \n[rails guide](https://guides.rubyonrails.org/layouts_and_rendering.html)\n\n[Rails 5 improves redirect_to :back with new redirect_back method](https://blog.bigbinary.com/2016/02/29/rails-5-improves-redirect_to_back-with-redirect-back.html)\n","source":"_posts/2019-09-09-day8.md","raw":"---\ntitle: \"Layout 的基本使用\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-09 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1500921726673-e4bdc09efa55?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-09 22:26:24\n# top: 1\n\n---\n\n## 如何使用 Layout\n今天從到[這篇](https://guides.rubyonrails.org/layouts_and_rendering.html)的 2.2.13 繼續看下去，這裡講到 layout 的使用方法\n\n我們先來看看一開始 rails 的 layout 長什麼模樣\n``` html\n<!-- views/layouts/application.html.erb -->\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>titile</title>\n    <%= csrf_meta_tags %>\n    <%= csp_meta_tag %>\n\n    <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>\n    <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>\n  </head>\n  <body>\n\n      <%= yield %>\n\n  </body>\n</html>\n```\n看到這裡，不知道大家有沒有注意到在平常使用 rails view 的時候，怎麼都不用寫上面這些寫 html 的時候一定要寫的東西？就是因為它藏在 layout 裡面，平常他直接會跟著 controller ，基本上在同一個 controller 中的 layout 是一樣的，然後在 body 中才把內容 \"讓\" 給 view 裡面的內容渲染\n\n\n那這些 layout 該放在哪裡呢？\n\n如果你的 controller 名字叫做 CandidatesController，那麼他會去找 app/views/layouts/candidates.html.erb 這個檔案當作 layout ， 如果沒有這個檔案，他會去找 app/views/layouts/application.html.erb 當作 layout，這些都是 \"慣例\" ，當然我們也是可以自己設定\n\n```ruby\nclass CandidatesController < ApplicationController\n  layout \"qoo\"\n  #...\nend\n```\n利用 layout 這個方法，我們可以指定 layout 是哪個檔案，上面這個例子中就會去找 app/views/layouts/qoo.html.erb 這檔案\n\n另外，layout 後面也可以接方法，來判斷是要使用哪一份 layout\n```ruby\nclass CandidatesController < ApplicationController\n  layout :which_layout\n \n  private\n    def which_layout\n      @current_user.login? ? \"admin\" : \"visit\"\n    end\nend\n```\n在上面的例子中，會去判斷 @current_user 是否登入，登入的話會使用 admin layout，否則使用 visit layout\n\n***\n## 跳回前一個來源： redirect_back\n\n有時候我們會希望使用者回到他在進到這個頁面的前一個來源，這時候可以用 `redirect_back` 這個方法，在 rails 5 以前是 `redirect_to :back`\n\n不過要注意的是，使用這個方法的前提是瀏覽器會回報 `HTTP_REFERER` 這個 error ，但有時候瀏覽器並不是丟這個 error 而是丟一個例外，這時候畫面就會爆掉，接下來說明解決方法\n\n在 rails 5 以前解決這個問題有點麻煩，必須去抓這個例外錯誤\n```ruby\nclass CandidatesController < ApplicationController\n  rescue_from ActionController::RedirectBackError, with: :redirect_to_default\n\n  def vote\n    @candidate = Candidate.find params[:id]\n    @candidate.vote\n    redirect_to :back\n  end\n\n  private\n\n  def redirect_to_default\n    redirect_to root_path\n  end\nend\n```\n上面這個例子是說，當例外發生的時候，我就把瀏覽器導至首頁\n\n現在變得比較簡單了，可以用 `fallback_location` 這個方法\n```ruby\nclass CandidatesController < ApplicationController\n\n  def vote\n    @candidate = Candidate.find params[:id]\n    @candidate.vote\n    redirect_back(fallback_location: root_path)\n  end\nend\n```\n***\n## Render 跟 direct_to 的差異？\n2.3 中提到，我們會在某個條件成功或失敗的情況下，使用 `render` 或者 `redirect_to` 讓使用者看到跳轉的畫面，那`redirect_to` 跟 `render` 有什麼不同？\n\n\nredirect_to 是叫瀏覽器送出新的 request 給這個目的地的 url \nrender 則是請瀏覽器借用哪個畫面做為回應\n\n在 2.3.2 中， Rails guide 給了一個講解的很清楚的例子，我們這裡直接借用\n\n```ruby\n# redirect_to 版本\ndef index\n  @books = Book.all\nend\ndef show\n  @book = Book.find_by(id: params[:id])\n  if @book.nil?\n    redirect_to action: :index\n  end\nend\n\n# render 版本\ndef index\n  @books = Book.all\nend\ndef show\n  @book = Book.find_by(id: params[:id])\n  if @book.nil?\n    @books = Book.all\n    flash.now[:alert] = \"Your book was not found\"\n    render \"index\"\n  end\nend\n```\n乍看之下 `redirect_to` 的程式碼比較簡短，但我們透過瀏覽器的角度來看看這件事情\n\n在 `redirect_to` 版本中，我們嘗試去找這本 @book ，但發現並沒有這本書，這時候 controller 要求瀏覽器去 index 的頁面，我們轉到這個網址來，發現需要 index 的 view 跟 資料庫中的 @books 資訊，因此再去抓這些東西回來到瀏覽器上\n\n在 `render` 版本中，我們同樣沒找到這本書，這時候 controller 請我們先抓資料庫中的 @bookd 資料，並請瀏覽器渲染出 index 的畫面，需要 @books 的地方就把資料套上去\n\n從上面兩個說明中，應該可以知道在這個例子中 `redirect_to` 多繞了一圈，因此效能較差，這種情況下建議使用 `render`\n\n\n參考資料 \n[rails guide](https://guides.rubyonrails.org/layouts_and_rendering.html)\n\n[Rails 5 improves redirect_to :back with new redirect_back method](https://blog.bigbinary.com/2016/02/29/rails-5-improves-redirect_to_back-with-redirect-back.html)\n","slug":"2019-09-09-day8","published":1,"updated":"2019-11-22T06:39:45.254Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0etw000h2ob1jnwuu9yq","content":"<h2 id=\"如何使用-layout\">如何使用 Layout</h2>\n<p>今天從到<a href=\"https://guides.rubyonrails.org/layouts_and_rendering.html\" target=\"_blank\" rel=\"noopener\">這篇</a>的 2.2.13 繼續看下去，這裡講到 layout 的使用方法</p>\n<p>我們先來看看一開始 rails 的 layout 長什麼模樣</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- views/layouts/application.html.erb --&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>titile<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">csrf_meta_tags</span> %&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">csp_meta_tag</span> %&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">stylesheet_link_tag</span>    '<span class=\"attr\">application</span>', <span class=\"attr\">media:</span> '<span class=\"attr\">all</span>', '<span class=\"attr\">data-turbolinks-track</span>'<span class=\"attr\">:</span> '<span class=\"attr\">reload</span>' %&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">javascript_include_tag</span> '<span class=\"attr\">application</span>', '<span class=\"attr\">data-turbolinks-track</span>'<span class=\"attr\">:</span> '<span class=\"attr\">reload</span>' %&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">yield</span> %&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>看到這裡，不知道大家有沒有注意到在平常使用 rails view 的時候，怎麼都不用寫上面這些寫 html 的時候一定要寫的東西？就是因為它藏在 layout 裡面，平常他直接會跟著 controller ，基本上在同一個 controller 中的 layout 是一樣的，然後在 body 中才把內容 “讓” 給 view 裡面的內容渲染</p>\n<p>那這些 layout 該放在哪裡呢？</p>\n<p>如果你的 controller 名字叫做 CandidatesController，那麼他會去找 app/views/layouts/candidates.html.erb 這個檔案當作 layout ， 如果沒有這個檔案，他會去找 app/views/layouts/application.html.erb 當作 layout，這些都是 “慣例” ，當然我們也是可以自己設定</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CandidatesController</span> &lt; ApplicationController</span></span><br><span class=\"line\">  layout <span class=\"string\">\"qoo\"</span></span><br><span class=\"line\">  <span class=\"comment\">#...</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>利用 layout 這個方法，我們可以指定 layout 是哪個檔案，上面這個例子中就會去找 app/views/layouts/qoo.html.erb 這檔案</p>\n<p>另外，layout 後面也可以接方法，來判斷是要使用哪一份 layout</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CandidatesController</span> &lt; ApplicationController</span></span><br><span class=\"line\">  layout <span class=\"symbol\">:which_layout</span></span><br><span class=\"line\"> </span><br><span class=\"line\">  private</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">which_layout</span></span></span><br><span class=\"line\">      @current_user.login? ? <span class=\"string\">\"admin\"</span> : <span class=\"string\">\"visit\"</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>在上面的例子中，會去判斷 @current_user 是否登入，登入的話會使用 admin layout，否則使用 visit layout</p>\n<hr>\n<h2 id=\"跳回前一個來源-redirect_back\">跳回前一個來源： redirect_back</h2>\n<p>有時候我們會希望使用者回到他在進到這個頁面的前一個來源，這時候可以用 <code>redirect_back</code> 這個方法，在 rails 5 以前是 <code>redirect_to :back</code></p>\n<p>不過要注意的是，使用這個方法的前提是瀏覽器會回報 <code>HTTP_REFERER</code> 這個 error ，但有時候瀏覽器並不是丟這個 error 而是丟一個例外，這時候畫面就會爆掉，接下來說明解決方法</p>\n<p>在 rails 5 以前解決這個問題有點麻煩，必須去抓這個例外錯誤</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CandidatesController</span> &lt; ApplicationController</span></span><br><span class=\"line\">  rescue_from ActionController::RedirectBackError, <span class=\"symbol\">with:</span> <span class=\"symbol\">:redirect_to_default</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">vote</span></span></span><br><span class=\"line\">    @candidate = Candidate.find params[<span class=\"symbol\">:id</span>]</span><br><span class=\"line\">    @candidate.vote</span><br><span class=\"line\">    redirect_to <span class=\"symbol\">:back</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  private</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">redirect_to_default</span></span></span><br><span class=\"line\">    redirect_to root_path</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>上面這個例子是說，當例外發生的時候，我就把瀏覽器導至首頁</p>\n<p>現在變得比較簡單了，可以用 <code>fallback_location</code> 這個方法</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CandidatesController</span> &lt; ApplicationController</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">vote</span></span></span><br><span class=\"line\">    @candidate = Candidate.find params[<span class=\"symbol\">:id</span>]</span><br><span class=\"line\">    @candidate.vote</span><br><span class=\"line\">    redirect_back(<span class=\"symbol\">fallback_location:</span> root_path)</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"render-跟-direct_to-的差異\">Render 跟 direct_to 的差異？</h2>\n<p>2.3 中提到，我們會在某個條件成功或失敗的情況下，使用 <code>render</code> 或者 <code>redirect_to</code> 讓使用者看到跳轉的畫面，那<code>redirect_to</code> 跟 <code>render</code> 有什麼不同？</p>\n<p>redirect_to 是叫瀏覽器送出新的 request 給這個目的地的 url<br>\nrender 則是請瀏覽器借用哪個畫面做為回應</p>\n<p>在 2.3.2 中， Rails guide 給了一個講解的很清楚的例子，我們這裡直接借用</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># redirect_to 版本</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span></span></span><br><span class=\"line\">  @books = Book.all</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">show</span></span></span><br><span class=\"line\">  @book = Book.find_by(<span class=\"symbol\">id:</span> params[<span class=\"symbol\">:id</span>])</span><br><span class=\"line\">  <span class=\"keyword\">if</span> @book.<span class=\"literal\">nil</span>?</span><br><span class=\"line\">    redirect_to <span class=\"symbol\">action:</span> <span class=\"symbol\">:index</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># render 版本</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span></span></span><br><span class=\"line\">  @books = Book.all</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">show</span></span></span><br><span class=\"line\">  @book = Book.find_by(<span class=\"symbol\">id:</span> params[<span class=\"symbol\">:id</span>])</span><br><span class=\"line\">  <span class=\"keyword\">if</span> @book.<span class=\"literal\">nil</span>?</span><br><span class=\"line\">    @books = Book.all</span><br><span class=\"line\">    flash.now[<span class=\"symbol\">:alert</span>] = <span class=\"string\">\"Your book was not found\"</span></span><br><span class=\"line\">    render <span class=\"string\">\"index\"</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>乍看之下 <code>redirect_to</code> 的程式碼比較簡短，但我們透過瀏覽器的角度來看看這件事情</p>\n<p>在 <code>redirect_to</code> 版本中，我們嘗試去找這本 @book ，但發現並沒有這本書，這時候 controller 要求瀏覽器去 index 的頁面，我們轉到這個網址來，發現需要 index 的 view 跟 資料庫中的 @books 資訊，因此再去抓這些東西回來到瀏覽器上</p>\n<p>在 <code>render</code> 版本中，我們同樣沒找到這本書，這時候 controller 請我們先抓資料庫中的 @bookd 資料，並請瀏覽器渲染出 index 的畫面，需要 @books 的地方就把資料套上去</p>\n<p>從上面兩個說明中，應該可以知道在這個例子中 <code>redirect_to</code> 多繞了一圈，因此效能較差，這種情況下建議使用 <code>render</code></p>\n<p>參考資料<br>\n<a href=\"https://guides.rubyonrails.org/layouts_and_rendering.html\" target=\"_blank\" rel=\"noopener\">rails guide</a></p>\n<p><a href=\"https://blog.bigbinary.com/2016/02/29/rails-5-improves-redirect_to_back-with-redirect-back.html\" target=\"_blank\" rel=\"noopener\">Rails 5 improves redirect_to :back with new redirect_back method</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2>如何使用 Layout</h2>\n<p>今天從到<a href=\"https://guides.rubyonrails.org/layouts_and_rendering.html\" target=\"_blank\" rel=\"noopener\">這篇</a>的 2.2.13 繼續看下去，這裡講到 layout 的使用方法</p>\n<p>我們先來看看一開始 rails 的 layout 長什麼模樣</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- views/layouts/application.html.erb --&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>titile<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">csrf_meta_tags</span> %&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">csp_meta_tag</span> %&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">stylesheet_link_tag</span>    '<span class=\"attr\">application</span>', <span class=\"attr\">media:</span> '<span class=\"attr\">all</span>', '<span class=\"attr\">data-turbolinks-track</span>'<span class=\"attr\">:</span> '<span class=\"attr\">reload</span>' %&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">javascript_include_tag</span> '<span class=\"attr\">application</span>', '<span class=\"attr\">data-turbolinks-track</span>'<span class=\"attr\">:</span> '<span class=\"attr\">reload</span>' %&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">yield</span> %&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>看到這裡，不知道大家有沒有注意到在平常使用 rails view 的時候，怎麼都不用寫上面這些寫 html 的時候一定要寫的東西？就是因為它藏在 layout 裡面，平常他直接會跟著 controller ，基本上在同一個 controller 中的 layout 是一樣的，然後在 body 中才把內容 “讓” 給 view 裡面的內容渲染</p>\n<p>那這些 layout 該放在哪裡呢？</p>\n<p>如果你的 controller 名字叫做 CandidatesController，那麼他會去找 app/views/layouts/candidates.html.erb 這個檔案當作 layout ， 如果沒有這個檔案，他會去找 app/views/layouts/application.html.erb 當作 layout，這些都是 “慣例” ，當然我們也是可以自己設定</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CandidatesController</span> &lt; ApplicationController</span></span><br><span class=\"line\">  layout <span class=\"string\">\"qoo\"</span></span><br><span class=\"line\">  <span class=\"comment\">#...</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>利用 layout 這個方法，我們可以指定 layout 是哪個檔案，上面這個例子中就會去找 app/views/layouts/qoo.html.erb 這檔案</p>\n<p>另外，layout 後面也可以接方法，來判斷是要使用哪一份 layout</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CandidatesController</span> &lt; ApplicationController</span></span><br><span class=\"line\">  layout <span class=\"symbol\">:which_layout</span></span><br><span class=\"line\"> </span><br><span class=\"line\">  private</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">which_layout</span></span></span><br><span class=\"line\">      @current_user.login? ? <span class=\"string\">\"admin\"</span> : <span class=\"string\">\"visit\"</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>在上面的例子中，會去判斷 @current_user 是否登入，登入的話會使用 admin layout，否則使用 visit layout</p>\n<hr>\n<h2>跳回前一個來源： redirect_back</h2>\n<p>有時候我們會希望使用者回到他在進到這個頁面的前一個來源，這時候可以用 <code>redirect_back</code> 這個方法，在 rails 5 以前是 <code>redirect_to :back</code></p>\n<p>不過要注意的是，使用這個方法的前提是瀏覽器會回報 <code>HTTP_REFERER</code> 這個 error ，但有時候瀏覽器並不是丟這個 error 而是丟一個例外，這時候畫面就會爆掉，接下來說明解決方法</p>\n<p>在 rails 5 以前解決這個問題有點麻煩，必須去抓這個例外錯誤</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CandidatesController</span> &lt; ApplicationController</span></span><br><span class=\"line\">  rescue_from ActionController::RedirectBackError, <span class=\"symbol\">with:</span> <span class=\"symbol\">:redirect_to_default</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">vote</span></span></span><br><span class=\"line\">    @candidate = Candidate.find params[<span class=\"symbol\">:id</span>]</span><br><span class=\"line\">    @candidate.vote</span><br><span class=\"line\">    redirect_to <span class=\"symbol\">:back</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  private</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">redirect_to_default</span></span></span><br><span class=\"line\">    redirect_to root_path</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>上面這個例子是說，當例外發生的時候，我就把瀏覽器導至首頁</p>\n<p>現在變得比較簡單了，可以用 <code>fallback_location</code> 這個方法</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CandidatesController</span> &lt; ApplicationController</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">vote</span></span></span><br><span class=\"line\">    @candidate = Candidate.find params[<span class=\"symbol\">:id</span>]</span><br><span class=\"line\">    @candidate.vote</span><br><span class=\"line\">    redirect_back(<span class=\"symbol\">fallback_location:</span> root_path)</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2>Render 跟 direct_to 的差異？</h2>\n<p>2.3 中提到，我們會在某個條件成功或失敗的情況下，使用 <code>render</code> 或者 <code>redirect_to</code> 讓使用者看到跳轉的畫面，那<code>redirect_to</code> 跟 <code>render</code> 有什麼不同？</p>\n<p>redirect_to 是叫瀏覽器送出新的 request 給這個目的地的 url<br>\nrender 則是請瀏覽器借用哪個畫面做為回應</p>\n<p>在 2.3.2 中， Rails guide 給了一個講解的很清楚的例子，我們這裡直接借用</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># redirect_to 版本</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span></span></span><br><span class=\"line\">  @books = Book.all</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">show</span></span></span><br><span class=\"line\">  @book = Book.find_by(<span class=\"symbol\">id:</span> params[<span class=\"symbol\">:id</span>])</span><br><span class=\"line\">  <span class=\"keyword\">if</span> @book.<span class=\"literal\">nil</span>?</span><br><span class=\"line\">    redirect_to <span class=\"symbol\">action:</span> <span class=\"symbol\">:index</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># render 版本</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span></span></span><br><span class=\"line\">  @books = Book.all</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">show</span></span></span><br><span class=\"line\">  @book = Book.find_by(<span class=\"symbol\">id:</span> params[<span class=\"symbol\">:id</span>])</span><br><span class=\"line\">  <span class=\"keyword\">if</span> @book.<span class=\"literal\">nil</span>?</span><br><span class=\"line\">    @books = Book.all</span><br><span class=\"line\">    flash.now[<span class=\"symbol\">:alert</span>] = <span class=\"string\">\"Your book was not found\"</span></span><br><span class=\"line\">    render <span class=\"string\">\"index\"</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>乍看之下 <code>redirect_to</code> 的程式碼比較簡短，但我們透過瀏覽器的角度來看看這件事情</p>\n<p>在 <code>redirect_to</code> 版本中，我們嘗試去找這本 @book ，但發現並沒有這本書，這時候 controller 要求瀏覽器去 index 的頁面，我們轉到這個網址來，發現需要 index 的 view 跟 資料庫中的 @books 資訊，因此再去抓這些東西回來到瀏覽器上</p>\n<p>在 <code>render</code> 版本中，我們同樣沒找到這本書，這時候 controller 請我們先抓資料庫中的 @bookd 資料，並請瀏覽器渲染出 index 的畫面，需要 @books 的地方就把資料套上去</p>\n<p>從上面兩個說明中，應該可以知道在這個例子中 <code>redirect_to</code> 多繞了一圈，因此效能較差，這種情況下建議使用 <code>render</code></p>\n<p>參考資料<br>\n<a href=\"https://guides.rubyonrails.org/layouts_and_rendering.html\" target=\"_blank\" rel=\"noopener\">rails guide</a></p>\n<p><a href=\"https://blog.bigbinary.com/2016/02/29/rails-5-improves-redirect_to_back-with-redirect-back.html\" target=\"_blank\" rel=\"noopener\">Rails 5 improves redirect_to :back with new redirect_back method</a></p>\n"},{"title":"yield & content_for的使用","catalog":true,"toc_nav_num":true,"date":"2019-09-10T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1496994925241-77e9a8c6e858?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2091&q=80","catagories":["Rails"],"updateDate":"2019-09-10T14:26:24.000Z","_content":"\n今天從第三章繼續看下去，這裡講到 layout 的使用方法\n\n有三個工具，可以幫助 layout 更完整\n1. Asset tags\n2. yield and content_for\n3. Partials\n\n***\n### Asset tags\n這方面的應用在文章中的範例已經很完整了，比較常用的有下面這些 tag，有需要的翻一下使用手冊囉！\n\nauto_discovery_link_tag\njavascript_include_tag\nstylesheet_link_tag\nimage_tag\nvideo_tag\naudio_tag\n***\n### Yield and content_for\n之前已經有稍微提到過 yield 這個東西，他會把 layout 這部分的內容 \"讓\" 給 views 資料夾中對應的 controller_name#action_name 檔案，今天再多說些 layout 的用法\n\n在 layout 中可以 yield 不只一次，只是如果這樣做的話，必須指定這個 yield 的內容\n比方說我在 layout 中像下面這樣寫\n```html\n<!--application.html.erb-->\n\n<!DOCTYPE html>\n<html>\n  <head>\n    <%= yield :head %>\n  </head>\n\n  <body>\n    <%= yield %>\n  </body>\n</html>\n```\n上面的 `yield :head` 表示我讓給 head 這邊表示這裏的內容，然後我在對應的檔案也要標示他的範圍在哪裡\n\n```html\n<!-- index.html.erb-->\n<% content_for :head do %>\n<title>Who's your daddy</title>\n<% end %>\n<p>No, I'm mommy</p>\n```\n我在 index.html.erb 檔案中也要使用 `content_for` 方法寫出呼應的 :head 是從哪裡到哪裡\n在這之外的部分就是正常的 yield 會跑出來的部分\n出現的結果會在下面\n![](https://i.imgur.com/yG7pyjg.png)\n***\n從圖片可以看到網頁的 title 被我使用 yield 的方法換掉了！\n而本文中的字是一開始的 yield 所讓出來的內容\n\n明天開始會介紹 partial 的用法，請敬請期待！\n\n\n參考資料\n[Rails Guide](https://guides.rubyonrails.org/layouts_and_rendering.html)\n","source":"_posts/2019-09-10-day9.md","raw":"---\ntitle: \"yield & content_for的使用\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-10 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1496994925241-77e9a8c6e858?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2091&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-10 22:26:24\n# top: 1\n\n---\n\n今天從第三章繼續看下去，這裡講到 layout 的使用方法\n\n有三個工具，可以幫助 layout 更完整\n1. Asset tags\n2. yield and content_for\n3. Partials\n\n***\n### Asset tags\n這方面的應用在文章中的範例已經很完整了，比較常用的有下面這些 tag，有需要的翻一下使用手冊囉！\n\nauto_discovery_link_tag\njavascript_include_tag\nstylesheet_link_tag\nimage_tag\nvideo_tag\naudio_tag\n***\n### Yield and content_for\n之前已經有稍微提到過 yield 這個東西，他會把 layout 這部分的內容 \"讓\" 給 views 資料夾中對應的 controller_name#action_name 檔案，今天再多說些 layout 的用法\n\n在 layout 中可以 yield 不只一次，只是如果這樣做的話，必須指定這個 yield 的內容\n比方說我在 layout 中像下面這樣寫\n```html\n<!--application.html.erb-->\n\n<!DOCTYPE html>\n<html>\n  <head>\n    <%= yield :head %>\n  </head>\n\n  <body>\n    <%= yield %>\n  </body>\n</html>\n```\n上面的 `yield :head` 表示我讓給 head 這邊表示這裏的內容，然後我在對應的檔案也要標示他的範圍在哪裡\n\n```html\n<!-- index.html.erb-->\n<% content_for :head do %>\n<title>Who's your daddy</title>\n<% end %>\n<p>No, I'm mommy</p>\n```\n我在 index.html.erb 檔案中也要使用 `content_for` 方法寫出呼應的 :head 是從哪裡到哪裡\n在這之外的部分就是正常的 yield 會跑出來的部分\n出現的結果會在下面\n![](https://i.imgur.com/yG7pyjg.png)\n***\n從圖片可以看到網頁的 title 被我使用 yield 的方法換掉了！\n而本文中的字是一開始的 yield 所讓出來的內容\n\n明天開始會介紹 partial 的用法，請敬請期待！\n\n\n參考資料\n[Rails Guide](https://guides.rubyonrails.org/layouts_and_rendering.html)\n","slug":"2019-09-10-day9","published":1,"updated":"2019-11-22T06:39:56.695Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0etx000j2ob1xxug1sil","content":"<p>今天從第三章繼續看下去，這裡講到 layout 的使用方法</p>\n<p>有三個工具，可以幫助 layout 更完整</p>\n<ol>\n<li>Asset tags</li>\n<li>yield and content_for</li>\n<li>Partials</li>\n</ol>\n<hr>\n<h3 id=\"asset-tags\">Asset tags</h3>\n<p>這方面的應用在文章中的範例已經很完整了，比較常用的有下面這些 tag，有需要的翻一下使用手冊囉！</p>\n<p>auto_discovery_link_tag<br>\njavascript_include_tag<br>\nstylesheet_link_tag<br>\nimage_tag<br>\nvideo_tag<br>\naudio_tag</p>\n<hr>\n<h3 id=\"yield-and-content_for\">Yield and content_for</h3>\n<p>之前已經有稍微提到過 yield 這個東西，他會把 layout 這部分的內容 “讓” 給 views 資料夾中對應的 controller_name#action_name 檔案，今天再多說些 layout 的用法</p>\n<p>在 layout 中可以 yield 不只一次，只是如果這樣做的話，必須指定這個 yield 的內容<br>\n比方說我在 layout 中像下面這樣寫</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--application.html.erb--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">yield</span> <span class=\"attr\">:head</span> %&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">yield</span> %&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上面的 <code>yield :head</code> 表示我讓給 head 這邊表示這裏的內容，然後我在對應的檔案也要標示他的範圍在哪裡</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- index.html.erb--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">content_for</span> <span class=\"attr\">:head</span> <span class=\"attr\">do</span> %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Who's your daddy<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">end</span> %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>No, I'm mommy<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>我在 index.html.erb 檔案中也要使用 <code>content_for</code> 方法寫出呼應的 :head 是從哪裡到哪裡<br>\n在這之外的部分就是正常的 yield 會跑出來的部分<br>\n出現的結果會在下面<br>\n<img src=\"https://i.imgur.com/yG7pyjg.png\" alt=\"\"></p>\n<hr>\n<p>從圖片可以看到網頁的 title 被我使用 yield 的方法換掉了！<br>\n而本文中的字是一開始的 yield 所讓出來的內容</p>\n<p>明天開始會介紹 partial 的用法，請敬請期待！</p>\n<p>參考資料<br>\n<a href=\"https://guides.rubyonrails.org/layouts_and_rendering.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天從第三章繼續看下去，這裡講到 layout 的使用方法</p>\n<p>有三個工具，可以幫助 layout 更完整</p>\n<ol>\n<li>Asset tags</li>\n<li>yield and content_for</li>\n<li>Partials</li>\n</ol>\n<hr>\n<h3>Asset tags</h3>\n<p>這方面的應用在文章中的範例已經很完整了，比較常用的有下面這些 tag，有需要的翻一下使用手冊囉！</p>\n<p>auto_discovery_link_tag<br>\njavascript_include_tag<br>\nstylesheet_link_tag<br>\nimage_tag<br>\nvideo_tag<br>\naudio_tag</p>\n<hr>\n<h3>Yield and content_for</h3>\n<p>之前已經有稍微提到過 yield 這個東西，他會把 layout 這部分的內容 “讓” 給 views 資料夾中對應的 controller_name#action_name 檔案，今天再多說些 layout 的用法</p>\n<p>在 layout 中可以 yield 不只一次，只是如果這樣做的話，必須指定這個 yield 的內容<br>\n比方說我在 layout 中像下面這樣寫</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--application.html.erb--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">yield</span> <span class=\"attr\">:head</span> %&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">yield</span> %&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上面的 <code>yield :head</code> 表示我讓給 head 這邊表示這裏的內容，然後我在對應的檔案也要標示他的範圍在哪裡</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- index.html.erb--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">content_for</span> <span class=\"attr\">:head</span> <span class=\"attr\">do</span> %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Who's your daddy<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">end</span> %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>No, I'm mommy<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>我在 index.html.erb 檔案中也要使用 <code>content_for</code> 方法寫出呼應的 :head 是從哪裡到哪裡<br>\n在這之外的部分就是正常的 yield 會跑出來的部分<br>\n出現的結果會在下面<br>\n<img src=\"https://i.imgur.com/yG7pyjg.png\" alt=\"\"></p>\n<hr>\n<p>從圖片可以看到網頁的 title 被我使用 yield 的方法換掉了！<br>\n而本文中的字是一開始的 yield 所讓出來的內容</p>\n<p>明天開始會介紹 partial 的用法，請敬請期待！</p>\n<p>參考資料<br>\n<a href=\"https://guides.rubyonrails.org/layouts_and_rendering.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n"},{"title":"partial 的使用","catalog":true,"toc_nav_num":true,"date":"2019-09-11T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1485304018316-1ff471aa1369?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Rails"],"updateDate":"2019-09-11T14:26:24.000Z","_content":"\n## Partial\nPartial 也是一個很常用的功能，翻成白話文就是 \"借畫面\"\n我們只要在想要借畫面的頁面中使用 `render` 的方法就可以了！但這邊的慣例要記住：**要被借畫面的檔案前面需要有底線\"_\"的名字**，否則不會成功，來看看下面的範例\n\n目前有兩個檔案: index.html.erb 跟 _form.html.erb 都在 views/qoos 的路徑底下\n```html\n#index.html.erb\n<%= render \"form\" %>\n```\n```html\n#_form.html.erb\n<h1>這是 form 的畫面喔！</h1>\n```\n最後 index.html.erb 的畫面就會渲染出 _form.html.erb 的畫面\n![](https://i.imgur.com/Ba9Gpav.png)\n\n如果要渲染不同資料夾的檔案，只要把路徑寫清楚即可\n``` html\n<%= render \"shared/form\" %>\n```\n上面的例子中會渲染 views/shared/_form.html.erb. 的畫面\n\n***\n##  同時使用 layout\n我們在渲染 partial 的時候還能同時渲染 layout 喔!\n但這時候需要把 partial 跟 layout 分別是哪份文件都標明清楚，可以看看下面的例子\n```html\n# index.gtml.erb\n<%= render partial: \"form\" , layout: \"super\" %>\n```\n```html\n# _form.html.erb\n<h1>這是 form 的畫面喔！</h1>\n```\n```html\n# _super.html.erb\n<h1>這是 super 的畫面喔</h1>\n<%= yield %>\n```\n產生的畫面如下\n![](https://i.imgur.com/GL8hf5F.png)\n這邊要特別注意注意兩點：\n1. 這邊的 layout 也是要在同一個資料夾，檔案名稱有底線的檔案喔，而不是在 layout 資料夾中的檔案！\n2. 別忘記 application 的 layout 還是會渲染出來，畫面中 application layout 那一行就是寫在 layouts/application.html.erb 的內容\n\n接下來會介紹如果 partial 中需要變數的話要怎麼傳給他，敬請期待!","source":"_posts/2019-09-11-day10.md","raw":"---\ntitle: \"partial 的使用\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-11 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1485304018316-1ff471aa1369?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-11 22:26:24\n# top: 1\n\n---\n\n## Partial\nPartial 也是一個很常用的功能，翻成白話文就是 \"借畫面\"\n我們只要在想要借畫面的頁面中使用 `render` 的方法就可以了！但這邊的慣例要記住：**要被借畫面的檔案前面需要有底線\"_\"的名字**，否則不會成功，來看看下面的範例\n\n目前有兩個檔案: index.html.erb 跟 _form.html.erb 都在 views/qoos 的路徑底下\n```html\n#index.html.erb\n<%= render \"form\" %>\n```\n```html\n#_form.html.erb\n<h1>這是 form 的畫面喔！</h1>\n```\n最後 index.html.erb 的畫面就會渲染出 _form.html.erb 的畫面\n![](https://i.imgur.com/Ba9Gpav.png)\n\n如果要渲染不同資料夾的檔案，只要把路徑寫清楚即可\n``` html\n<%= render \"shared/form\" %>\n```\n上面的例子中會渲染 views/shared/_form.html.erb. 的畫面\n\n***\n##  同時使用 layout\n我們在渲染 partial 的時候還能同時渲染 layout 喔!\n但這時候需要把 partial 跟 layout 分別是哪份文件都標明清楚，可以看看下面的例子\n```html\n# index.gtml.erb\n<%= render partial: \"form\" , layout: \"super\" %>\n```\n```html\n# _form.html.erb\n<h1>這是 form 的畫面喔！</h1>\n```\n```html\n# _super.html.erb\n<h1>這是 super 的畫面喔</h1>\n<%= yield %>\n```\n產生的畫面如下\n![](https://i.imgur.com/GL8hf5F.png)\n這邊要特別注意注意兩點：\n1. 這邊的 layout 也是要在同一個資料夾，檔案名稱有底線的檔案喔，而不是在 layout 資料夾中的檔案！\n2. 別忘記 application 的 layout 還是會渲染出來，畫面中 application layout 那一行就是寫在 layouts/application.html.erb 的內容\n\n接下來會介紹如果 partial 中需要變數的話要怎麼傳給他，敬請期待!","slug":"2019-09-11-day10","published":1,"updated":"2019-11-22T06:40:13.091Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0ety000l2ob14qly07n2","content":"<h2 id=\"partial\">Partial</h2>\n<p>Partial 也是一個很常用的功能，翻成白話文就是 &quot;借畫面&quot;<br>\n我們只要在想要借畫面的頁面中使用 <code>render</code> 的方法就可以了！但這邊的慣例要記住：<strong>要被借畫面的檔案前面需要有底線&quot;_&quot;的名字</strong>，否則不會成功，來看看下面的範例</p>\n<p>目前有兩個檔案: index.html.erb 跟 _form.html.erb 都在 views/qoos 的路徑底下</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#index.html.erb</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">render</span> \"<span class=\"attr\">form</span>\" %&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#_form.html.erb</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>這是 form 的畫面喔！<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>最後 index.html.erb 的畫面就會渲染出 _form.html.erb 的畫面<br>\n<img src=\"https://i.imgur.com/Ba9Gpav.png\" alt=\"\"></p>\n<p>如果要渲染不同資料夾的檔案，只要把路徑寫清楚即可</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">render</span> \"<span class=\"attr\">shared</span>/<span class=\"attr\">form</span>\" %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上面的例子中會渲染 views/shared/_form.html.erb. 的畫面</p>\n<hr>\n<h2 id=\"同時使用-layout\">同時使用 layout</h2>\n<p>我們在渲染 partial 的時候還能同時渲染 layout 喔!<br>\n但這時候需要把 partial 跟 layout 分別是哪份文件都標明清楚，可以看看下面的例子</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># index.gtml.erb</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">render</span> <span class=\"attr\">partial:</span> \"<span class=\"attr\">form</span>\" , <span class=\"attr\">layout:</span> \"<span class=\"attr\">super</span>\" %&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># _form.html.erb</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>這是 form 的畫面喔！<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># _super.html.erb</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>這是 super 的畫面喔<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">yield</span> %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>產生的畫面如下<br>\n<img src=\"https://i.imgur.com/GL8hf5F.png\" alt=\"\"><br>\n這邊要特別注意注意兩點：</p>\n<ol>\n<li>這邊的 layout 也是要在同一個資料夾，檔案名稱有底線的檔案喔，而不是在 layout 資料夾中的檔案！</li>\n<li>別忘記 application 的 layout 還是會渲染出來，畫面中 application layout 那一行就是寫在 layouts/application.html.erb 的內容</li>\n</ol>\n<p>接下來會介紹如果 partial 中需要變數的話要怎麼傳給他，敬請期待!</p>\n","site":{"data":{}},"excerpt":"","more":"<h2>Partial</h2>\n<p>Partial 也是一個很常用的功能，翻成白話文就是 &quot;借畫面&quot;<br>\n我們只要在想要借畫面的頁面中使用 <code>render</code> 的方法就可以了！但這邊的慣例要記住：<strong>要被借畫面的檔案前面需要有底線&quot;_&quot;的名字</strong>，否則不會成功，來看看下面的範例</p>\n<p>目前有兩個檔案: index.html.erb 跟 _form.html.erb 都在 views/qoos 的路徑底下</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#index.html.erb</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">render</span> \"<span class=\"attr\">form</span>\" %&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#_form.html.erb</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>這是 form 的畫面喔！<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>最後 index.html.erb 的畫面就會渲染出 _form.html.erb 的畫面<br>\n<img src=\"https://i.imgur.com/Ba9Gpav.png\" alt=\"\"></p>\n<p>如果要渲染不同資料夾的檔案，只要把路徑寫清楚即可</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">render</span> \"<span class=\"attr\">shared</span>/<span class=\"attr\">form</span>\" %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上面的例子中會渲染 views/shared/_form.html.erb. 的畫面</p>\n<hr>\n<h2>同時使用 layout</h2>\n<p>我們在渲染 partial 的時候還能同時渲染 layout 喔!<br>\n但這時候需要把 partial 跟 layout 分別是哪份文件都標明清楚，可以看看下面的例子</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># index.gtml.erb</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">render</span> <span class=\"attr\">partial:</span> \"<span class=\"attr\">form</span>\" , <span class=\"attr\">layout:</span> \"<span class=\"attr\">super</span>\" %&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># _form.html.erb</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>這是 form 的畫面喔！<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># _super.html.erb</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>這是 super 的畫面喔<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">yield</span> %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>產生的畫面如下<br>\n<img src=\"https://i.imgur.com/GL8hf5F.png\" alt=\"\"><br>\n這邊要特別注意注意兩點：</p>\n<ol>\n<li>這邊的 layout 也是要在同一個資料夾，檔案名稱有底線的檔案喔，而不是在 layout 資料夾中的檔案！</li>\n<li>別忘記 application 的 layout 還是會渲染出來，畫面中 application layout 那一行就是寫在 layouts/application.html.erb 的內容</li>\n</ol>\n<p>接下來會介紹如果 partial 中需要變數的話要怎麼傳給他，敬請期待!</p>\n"},{"title":"教你怎麼傳變數給 partial","catalog":true,"toc_nav_num":true,"date":"2019-09-12T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1566917336284-f4e134c5012e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=976&q=80","catagories":["Rails"],"updateDate":"2019-09-12T14:26:24.000Z","_content":"\n## Layouts and Rendering in Rails Part4\n首先來聽首歌吧\n[![Yes](https://img.youtube.com/vi/PPLgXcxMEQc/0.jpg)](https://www.youtube.com/watch?v=PPLgXcxMEQc)\n這是一個主要都用木吉他伴奏的外國素人歌手，在這裡也推薦大家聽聽看囉!\n***\n\n## 傳變數給 partial\n今天的文章從[這裡](https://guides.rubyonrails.org/layouts_and_rendering.html)的 3.4.4 段落開始\n\n假設 _qoo.html.erb 裡面有使用 qoo1 這個變數，我們要怎麼傳給他呢？\nRails Guide 中提到了滿多方法，這邊一一來說明：\n#### 1. 使用 locals \n``` html\n<%= render partial: \"form\" , locals: {qoo1: @qoo1} %>\n```\n但文章中沒提到的是，如果你今天把前面的 partial 給省略掉，後面使用 locals 是會發生錯誤的，這時候需要把 locals 也省略掉變成下面這樣\n``` html\n<%= render \"form\" , qoo1: @qoo1 %>\n```\n\n***\n#### 2. 使用 obeject\n當我們使用一個 partial 的時候，他其實會內建一個跟這個 partial 名字相同的區域變數，我們可以使用 `object` 這個屬性，把值傳給他\n``` html\n<!-- index.html.erb -->\n<%= render partial: \"form\" , object: @qoo1 %>\n```\n_form.html.erb 裡面只要用 form 這個變數就可以拿到了！\n``` html\n<h1>這是 form 的畫面喔！</h1>\n<%= form %>\n```\n***\n#### 3. 使用 collection\n除此之外，還可以傳一整組的變數進去\n一般來說，我們如果要在首頁印出一大堆資料庫裡面的資料，會使用 each 來印，但 collection 這個屬性，讓我們可以讓程式碼更簡潔\n```html\n<!-- index.html.erb -->\n<%= render partial: \"form\", collection: @forms %>\n```\n```html\n<!-- _form.html.erb -->\n<p>form 名字 <%= form.name %></p>  \n```\n如此一來，看你的資料有幾組，就會幫你印幾組的資料，這時候你的頁面應該長得像下面這樣\n\n![](https://i.imgur.com/BjpaGKV.png)\n\n甚至你可以再更進一步簡化變成下面這樣\n```html\n<%= render @customers %>\n```\n不過必須提醒一下，像這種魔術的用法， partial 的檔案必須放在對的資料夾中才會起作用，在這個例子中是放在 views/forms 這個資料夾，除此之外還需要有 Form 這個 model，還有什麼時候用複數什麼時候用單數也都完全不能錯，眾多條件缺一不可，因此也不是很實用的一個技能 XD\n\n當你在使用 collection 傳變數時，如果 partial 裡面的區域變數名字不同的話你可以使用 as 這個屬性修改\n\n```html\n<!-- index.html.erb -->\n<%= render partial: \"form\", collection: @forms, as: :qoo%>\n```\n在上面這個例子中，就可以使用從 controller 那邊接收到的 @forms 這個實體變數，傳到 partial 中的 qoo 區域變數使用\n\n***\n## Local assigns\n除此之外，文章中還提到 `local_assigns` 這個方法，**它可以用來判斷是否這個 partial 頁面有被給予變數**，不過我覺得 Rails Guide 裡面提到的範例實在讓人太難懂，所以只好自己做個簡單的範例:\n\n下面是 partial 的檔案，我們直接把條件判斷利用 local_assigns 寫在裡面，如果有給 qoo1 的話會看到一種畫面，如果沒給則會看到另一種\n``` html\n<!-- _form.html.erb -->\n<h1>這是 form 的畫面喔！</h1>\n<% if local_assigns[:qoo1] %>\n有給 qoo1 的才看得到這句 \n<%= qoo1 %>\n\n<% else %>\n沒給 qoo1 的才看得到這句\n<% end %>\n```\n今天我的 index 頁面如果有給 qoo1 這個變數的話\n``` html\n<!-- index.html.erb -->\n<%= render \"form\" , qoo1: @qoo1 %>\n```\n看到的畫面如下\n![](https://i.imgur.com/s9jzuWx.png)\n\n反之，如果沒有給 qoo1 的話\n```html\n<!-- index.html.erb -->\n<%= render \"form\" %>\n```\n看到的畫面如下\n![](https://i.imgur.com/LgwKbBa.png)\n\n***\n剩下 Rails Guide 還有介紹一些上面這些方法的組合技，再麻煩大家自己看一下了~\n\n希望這次介紹傳變數給 partial 的方法有幫助到大家，畢竟測試哪些方法需要符合哪些慣例也是花了我不少時間，希望這時間花得很值得！\n\n\n參考資料\n[Rails Guide](https://guides.rubyonrails.org/layouts_and_rendering.html)\n\n[Extending Rails partials using local_assigns](https://blog.evalcode.com/extending-rails-partials-using-local_assigns/)\n\n[Layout, Render 與 View Helper](https://railsbook.tw/chapters/15-layout-render-and-view-helper.html)\n","source":"_posts/2019-09-12-day11.md","raw":"---\ntitle: \"教你怎麼傳變數給 partial\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-12 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1566917336284-f4e134c5012e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=976&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-12 22:26:24\n# top: 1\n\n---\n\n## Layouts and Rendering in Rails Part4\n首先來聽首歌吧\n[![Yes](https://img.youtube.com/vi/PPLgXcxMEQc/0.jpg)](https://www.youtube.com/watch?v=PPLgXcxMEQc)\n這是一個主要都用木吉他伴奏的外國素人歌手，在這裡也推薦大家聽聽看囉!\n***\n\n## 傳變數給 partial\n今天的文章從[這裡](https://guides.rubyonrails.org/layouts_and_rendering.html)的 3.4.4 段落開始\n\n假設 _qoo.html.erb 裡面有使用 qoo1 這個變數，我們要怎麼傳給他呢？\nRails Guide 中提到了滿多方法，這邊一一來說明：\n#### 1. 使用 locals \n``` html\n<%= render partial: \"form\" , locals: {qoo1: @qoo1} %>\n```\n但文章中沒提到的是，如果你今天把前面的 partial 給省略掉，後面使用 locals 是會發生錯誤的，這時候需要把 locals 也省略掉變成下面這樣\n``` html\n<%= render \"form\" , qoo1: @qoo1 %>\n```\n\n***\n#### 2. 使用 obeject\n當我們使用一個 partial 的時候，他其實會內建一個跟這個 partial 名字相同的區域變數，我們可以使用 `object` 這個屬性，把值傳給他\n``` html\n<!-- index.html.erb -->\n<%= render partial: \"form\" , object: @qoo1 %>\n```\n_form.html.erb 裡面只要用 form 這個變數就可以拿到了！\n``` html\n<h1>這是 form 的畫面喔！</h1>\n<%= form %>\n```\n***\n#### 3. 使用 collection\n除此之外，還可以傳一整組的變數進去\n一般來說，我們如果要在首頁印出一大堆資料庫裡面的資料，會使用 each 來印，但 collection 這個屬性，讓我們可以讓程式碼更簡潔\n```html\n<!-- index.html.erb -->\n<%= render partial: \"form\", collection: @forms %>\n```\n```html\n<!-- _form.html.erb -->\n<p>form 名字 <%= form.name %></p>  \n```\n如此一來，看你的資料有幾組，就會幫你印幾組的資料，這時候你的頁面應該長得像下面這樣\n\n![](https://i.imgur.com/BjpaGKV.png)\n\n甚至你可以再更進一步簡化變成下面這樣\n```html\n<%= render @customers %>\n```\n不過必須提醒一下，像這種魔術的用法， partial 的檔案必須放在對的資料夾中才會起作用，在這個例子中是放在 views/forms 這個資料夾，除此之外還需要有 Form 這個 model，還有什麼時候用複數什麼時候用單數也都完全不能錯，眾多條件缺一不可，因此也不是很實用的一個技能 XD\n\n當你在使用 collection 傳變數時，如果 partial 裡面的區域變數名字不同的話你可以使用 as 這個屬性修改\n\n```html\n<!-- index.html.erb -->\n<%= render partial: \"form\", collection: @forms, as: :qoo%>\n```\n在上面這個例子中，就可以使用從 controller 那邊接收到的 @forms 這個實體變數，傳到 partial 中的 qoo 區域變數使用\n\n***\n## Local assigns\n除此之外，文章中還提到 `local_assigns` 這個方法，**它可以用來判斷是否這個 partial 頁面有被給予變數**，不過我覺得 Rails Guide 裡面提到的範例實在讓人太難懂，所以只好自己做個簡單的範例:\n\n下面是 partial 的檔案，我們直接把條件判斷利用 local_assigns 寫在裡面，如果有給 qoo1 的話會看到一種畫面，如果沒給則會看到另一種\n``` html\n<!-- _form.html.erb -->\n<h1>這是 form 的畫面喔！</h1>\n<% if local_assigns[:qoo1] %>\n有給 qoo1 的才看得到這句 \n<%= qoo1 %>\n\n<% else %>\n沒給 qoo1 的才看得到這句\n<% end %>\n```\n今天我的 index 頁面如果有給 qoo1 這個變數的話\n``` html\n<!-- index.html.erb -->\n<%= render \"form\" , qoo1: @qoo1 %>\n```\n看到的畫面如下\n![](https://i.imgur.com/s9jzuWx.png)\n\n反之，如果沒有給 qoo1 的話\n```html\n<!-- index.html.erb -->\n<%= render \"form\" %>\n```\n看到的畫面如下\n![](https://i.imgur.com/LgwKbBa.png)\n\n***\n剩下 Rails Guide 還有介紹一些上面這些方法的組合技，再麻煩大家自己看一下了~\n\n希望這次介紹傳變數給 partial 的方法有幫助到大家，畢竟測試哪些方法需要符合哪些慣例也是花了我不少時間，希望這時間花得很值得！\n\n\n參考資料\n[Rails Guide](https://guides.rubyonrails.org/layouts_and_rendering.html)\n\n[Extending Rails partials using local_assigns](https://blog.evalcode.com/extending-rails-partials-using-local_assigns/)\n\n[Layout, Render 與 View Helper](https://railsbook.tw/chapters/15-layout-render-and-view-helper.html)\n","slug":"2019-09-12-day11","published":1,"updated":"2019-11-22T06:40:38.340Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0etz000n2ob1nl78m08a","content":"<h2 id=\"layouts-and-rendering-in-rails-part4\">Layouts and Rendering in Rails Part4</h2>\n<p>首先來聽首歌吧<br>\n<a href=\"https://www.youtube.com/watch?v=PPLgXcxMEQc\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.youtube.com/vi/PPLgXcxMEQc/0.jpg\" alt=\"Yes\"></a><br>\n這是一個主要都用木吉他伴奏的外國素人歌手，在這裡也推薦大家聽聽看囉!</p>\n<hr>\n<h2 id=\"傳變數給-partial\">傳變數給 partial</h2>\n<p>今天的文章從<a href=\"https://guides.rubyonrails.org/layouts_and_rendering.html\" target=\"_blank\" rel=\"noopener\">這裡</a>的 3.4.4 段落開始</p>\n<p>假設 _qoo.html.erb 裡面有使用 qoo1 這個變數，我們要怎麼傳給他呢？<br>\nRails Guide 中提到了滿多方法，這邊一一來說明：</p>\n<h4 id=\"1-使用-locals\">1. 使用 locals</h4>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">render</span> <span class=\"attr\">partial:</span> \"<span class=\"attr\">form</span>\" , <span class=\"attr\">locals:</span> &#123;<span class=\"attr\">qoo1:</span> @<span class=\"attr\">qoo1</span>&#125; %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>但文章中沒提到的是，如果你今天把前面的 partial 給省略掉，後面使用 locals 是會發生錯誤的，這時候需要把 locals 也省略掉變成下面這樣</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">render</span> \"<span class=\"attr\">form</span>\" , <span class=\"attr\">qoo1:</span> @<span class=\"attr\">qoo1</span> %&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h4 id=\"2-使用-obeject\">2. 使用 obeject</h4>\n<p>當我們使用一個 partial 的時候，他其實會內建一個跟這個 partial 名字相同的區域變數，我們可以使用 <code>object</code> 這個屬性，把值傳給他</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- index.html.erb --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">render</span> <span class=\"attr\">partial:</span> \"<span class=\"attr\">form</span>\" , <span class=\"attr\">object:</span> @<span class=\"attr\">qoo1</span> %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>_form.html.erb 裡面只要用 form 這個變數就可以拿到了！</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>這是 form 的畫面喔！<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">form</span> %&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h4 id=\"3-使用-collection\">3. 使用 collection</h4>\n<p>除此之外，還可以傳一整組的變數進去<br>\n一般來說，我們如果要在首頁印出一大堆資料庫裡面的資料，會使用 each 來印，但 collection 這個屬性，讓我們可以讓程式碼更簡潔</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- index.html.erb --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">render</span> <span class=\"attr\">partial:</span> \"<span class=\"attr\">form</span>\", <span class=\"attr\">collection:</span> @<span class=\"attr\">forms</span> %&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- _form.html.erb --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>form 名字 <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">form.name</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>如此一來，看你的資料有幾組，就會幫你印幾組的資料，這時候你的頁面應該長得像下面這樣</p>\n<p><img src=\"https://i.imgur.com/BjpaGKV.png\" alt=\"\"></p>\n<p>甚至你可以再更進一步簡化變成下面這樣</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">render</span> @<span class=\"attr\">customers</span> %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>不過必須提醒一下，像這種魔術的用法， partial 的檔案必須放在對的資料夾中才會起作用，在這個例子中是放在 views/forms 這個資料夾，除此之外還需要有 Form 這個 model，還有什麼時候用複數什麼時候用單數也都完全不能錯，眾多條件缺一不可，因此也不是很實用的一個技能 XD</p>\n<p>當你在使用 collection 傳變數時，如果 partial 裡面的區域變數名字不同的話你可以使用 as 這個屬性修改</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- index.html.erb --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">render</span> <span class=\"attr\">partial:</span> \"<span class=\"attr\">form</span>\", <span class=\"attr\">collection:</span> @<span class=\"attr\">forms</span>, <span class=\"attr\">as:</span> <span class=\"attr\">:qoo</span>%&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在上面這個例子中，就可以使用從 controller 那邊接收到的 @forms 這個實體變數，傳到 partial 中的 qoo 區域變數使用</p>\n<hr>\n<h2 id=\"local-assigns\">Local assigns</h2>\n<p>除此之外，文章中還提到 <code>local_assigns</code> 這個方法，<strong>它可以用來判斷是否這個 partial 頁面有被給予變數</strong>，不過我覺得 Rails Guide 裡面提到的範例實在讓人太難懂，所以只好自己做個簡單的範例:</p>\n<p>下面是 partial 的檔案，我們直接把條件判斷利用 local_assigns 寫在裡面，如果有給 qoo1 的話會看到一種畫面，如果沒給則會看到另一種</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- _form.html.erb --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>這是 form 的畫面喔！<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> <span class=\"attr\">local_assigns</span>[<span class=\"attr\">:qoo1</span>] %&gt;</span></span><br><span class=\"line\">有給 qoo1 的才看得到這句 </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">qoo1</span> %&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">else</span> %&gt;</span></span><br><span class=\"line\">沒給 qoo1 的才看得到這句</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">end</span> %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>今天我的 index 頁面如果有給 qoo1 這個變數的話</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- index.html.erb --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">render</span> \"<span class=\"attr\">form</span>\" , <span class=\"attr\">qoo1:</span> @<span class=\"attr\">qoo1</span> %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>看到的畫面如下<br>\n<img src=\"https://i.imgur.com/s9jzuWx.png\" alt=\"\"></p>\n<p>反之，如果沒有給 qoo1 的話</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- index.html.erb --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">render</span> \"<span class=\"attr\">form</span>\" %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>看到的畫面如下<br>\n<img src=\"https://i.imgur.com/LgwKbBa.png\" alt=\"\"></p>\n<hr>\n<p>剩下 Rails Guide 還有介紹一些上面這些方法的組合技，再麻煩大家自己看一下了~</p>\n<p>希望這次介紹傳變數給 partial 的方法有幫助到大家，畢竟測試哪些方法需要符合哪些慣例也是花了我不少時間，希望這時間花得很值得！</p>\n<p>參考資料<br>\n<a href=\"https://guides.rubyonrails.org/layouts_and_rendering.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n<p><a href=\"https://blog.evalcode.com/extending-rails-partials-using-local_assigns/\" target=\"_blank\" rel=\"noopener\">Extending Rails partials using local_assigns</a></p>\n<p><a href=\"https://railsbook.tw/chapters/15-layout-render-and-view-helper.html\" target=\"_blank\" rel=\"noopener\">Layout, Render 與 View Helper</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2>Layouts and Rendering in Rails Part4</h2>\n<p>首先來聽首歌吧<br>\n<a href=\"https://www.youtube.com/watch?v=PPLgXcxMEQc\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.youtube.com/vi/PPLgXcxMEQc/0.jpg\" alt=\"Yes\"></a><br>\n這是一個主要都用木吉他伴奏的外國素人歌手，在這裡也推薦大家聽聽看囉!</p>\n<hr>\n<h2>傳變數給 partial</h2>\n<p>今天的文章從<a href=\"https://guides.rubyonrails.org/layouts_and_rendering.html\" target=\"_blank\" rel=\"noopener\">這裡</a>的 3.4.4 段落開始</p>\n<p>假設 _qoo.html.erb 裡面有使用 qoo1 這個變數，我們要怎麼傳給他呢？<br>\nRails Guide 中提到了滿多方法，這邊一一來說明：</p>\n<h4>1. 使用 locals</h4>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">render</span> <span class=\"attr\">partial:</span> \"<span class=\"attr\">form</span>\" , <span class=\"attr\">locals:</span> &#123;<span class=\"attr\">qoo1:</span> @<span class=\"attr\">qoo1</span>&#125; %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>但文章中沒提到的是，如果你今天把前面的 partial 給省略掉，後面使用 locals 是會發生錯誤的，這時候需要把 locals 也省略掉變成下面這樣</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">render</span> \"<span class=\"attr\">form</span>\" , <span class=\"attr\">qoo1:</span> @<span class=\"attr\">qoo1</span> %&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h4>2. 使用 obeject</h4>\n<p>當我們使用一個 partial 的時候，他其實會內建一個跟這個 partial 名字相同的區域變數，我們可以使用 <code>object</code> 這個屬性，把值傳給他</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- index.html.erb --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">render</span> <span class=\"attr\">partial:</span> \"<span class=\"attr\">form</span>\" , <span class=\"attr\">object:</span> @<span class=\"attr\">qoo1</span> %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>_form.html.erb 裡面只要用 form 這個變數就可以拿到了！</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>這是 form 的畫面喔！<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">form</span> %&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h4>3. 使用 collection</h4>\n<p>除此之外，還可以傳一整組的變數進去<br>\n一般來說，我們如果要在首頁印出一大堆資料庫裡面的資料，會使用 each 來印，但 collection 這個屬性，讓我們可以讓程式碼更簡潔</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- index.html.erb --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">render</span> <span class=\"attr\">partial:</span> \"<span class=\"attr\">form</span>\", <span class=\"attr\">collection:</span> @<span class=\"attr\">forms</span> %&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- _form.html.erb --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>form 名字 <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">form.name</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>如此一來，看你的資料有幾組，就會幫你印幾組的資料，這時候你的頁面應該長得像下面這樣</p>\n<p><img src=\"https://i.imgur.com/BjpaGKV.png\" alt=\"\"></p>\n<p>甚至你可以再更進一步簡化變成下面這樣</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">render</span> @<span class=\"attr\">customers</span> %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>不過必須提醒一下，像這種魔術的用法， partial 的檔案必須放在對的資料夾中才會起作用，在這個例子中是放在 views/forms 這個資料夾，除此之外還需要有 Form 這個 model，還有什麼時候用複數什麼時候用單數也都完全不能錯，眾多條件缺一不可，因此也不是很實用的一個技能 XD</p>\n<p>當你在使用 collection 傳變數時，如果 partial 裡面的區域變數名字不同的話你可以使用 as 這個屬性修改</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- index.html.erb --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">render</span> <span class=\"attr\">partial:</span> \"<span class=\"attr\">form</span>\", <span class=\"attr\">collection:</span> @<span class=\"attr\">forms</span>, <span class=\"attr\">as:</span> <span class=\"attr\">:qoo</span>%&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在上面這個例子中，就可以使用從 controller 那邊接收到的 @forms 這個實體變數，傳到 partial 中的 qoo 區域變數使用</p>\n<hr>\n<h2>Local assigns</h2>\n<p>除此之外，文章中還提到 <code>local_assigns</code> 這個方法，<strong>它可以用來判斷是否這個 partial 頁面有被給予變數</strong>，不過我覺得 Rails Guide 裡面提到的範例實在讓人太難懂，所以只好自己做個簡單的範例:</p>\n<p>下面是 partial 的檔案，我們直接把條件判斷利用 local_assigns 寫在裡面，如果有給 qoo1 的話會看到一種畫面，如果沒給則會看到另一種</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- _form.html.erb --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>這是 form 的畫面喔！<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> <span class=\"attr\">local_assigns</span>[<span class=\"attr\">:qoo1</span>] %&gt;</span></span><br><span class=\"line\">有給 qoo1 的才看得到這句 </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">qoo1</span> %&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">else</span> %&gt;</span></span><br><span class=\"line\">沒給 qoo1 的才看得到這句</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">end</span> %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>今天我的 index 頁面如果有給 qoo1 這個變數的話</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- index.html.erb --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">render</span> \"<span class=\"attr\">form</span>\" , <span class=\"attr\">qoo1:</span> @<span class=\"attr\">qoo1</span> %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>看到的畫面如下<br>\n<img src=\"https://i.imgur.com/s9jzuWx.png\" alt=\"\"></p>\n<p>反之，如果沒有給 qoo1 的話</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- index.html.erb --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">render</span> \"<span class=\"attr\">form</span>\" %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>看到的畫面如下<br>\n<img src=\"https://i.imgur.com/LgwKbBa.png\" alt=\"\"></p>\n<hr>\n<p>剩下 Rails Guide 還有介紹一些上面這些方法的組合技，再麻煩大家自己看一下了~</p>\n<p>希望這次介紹傳變數給 partial 的方法有幫助到大家，畢竟測試哪些方法需要符合哪些慣例也是花了我不少時間，希望這時間花得很值得！</p>\n<p>參考資料<br>\n<a href=\"https://guides.rubyonrails.org/layouts_and_rendering.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n<p><a href=\"https://blog.evalcode.com/extending-rails-partials-using-local_assigns/\" target=\"_blank\" rel=\"noopener\">Extending Rails partials using local_assigns</a></p>\n<p><a href=\"https://railsbook.tw/chapters/15-layout-render-and-view-helper.html\" target=\"_blank\" rel=\"noopener\">Layout, Render 與 View Helper</a></p>\n"},{"title":"REST & Controller 命名慣例","catalog":true,"toc_nav_num":true,"date":"2019-09-13T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1564053489865-3f7ddbf8551b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1093&q=80","catagories":["Rails"],"updateDate":"2019-09-13T14:26:24.000Z","_content":"\n首先來聽首歌吧！\n[![Yes](https://img.youtube.com/vi/bmtbg5b7_Aw/0.jpg)](https://www.youtube.com/watch?v=bmtbg5b7_Aw)\n雖然我知道聽搖滾的人不多，但還是想介紹個覺得不錯的好歌給大家聽聽 ~ 如果不喜歡搖滾的就慎入喔 XD\n***\n\n## REST\n今天終於來到 Rails Guide 的[另一篇文章](https://guides.rubyonrails.org/action_controller_overview.html)了\n\n在最一開始，文章中就提到了 REST 這個奇怪的字，他是什麼呢？\n\n他的全名是 Resource Representational State Transfer，它的概念是把網址都當作一種資源，而對這些資源使用不同的動作會有不同的結果\n\n沒有使用 REST 設計概念的網頁，其實網址命名就是隨人所好，像是下面這樣 \n```\n商品列表資訊  GET  /getAllItems\n新增商品     GET  /addItem\n看第一號商品  GET  /getItem/1\n```\n那如果使用 REST 方式設計的網站呢，通常會長得像這樣\n```\n商品列表資訊  GET  /items\n新增商品     POST /items\n看第一號商品  GET  /items/1\n```\n至於這些動作分別該對這個網址做什麼，RFC有大致規範，因此其實是可以預期的到會得到怎樣的結果\n***\n## Controller 命名慣例\n在 Rails 中 Controller 的命名也有慣例存在：==最後一個單字要是複數==\n比方說，想要做一個叫做 qoo 的 controller，他的 class 應該叫做 `QoosController`，如果是兩個以上的單字組成的，就是最後一個單字要是複數，ex. `SiteAdminsController`\n\n當然也是可以不甩他的命名慣例，但最後要找地方改成你自己的設定就很麻煩~\n\n在 Rails 中的每個 controller 都繼承自 `ApplicationController` 那他又繼承自 `ActionController::Base`，在這裡面已經內建很多預設給 controller 使用的方法\n\n接下來稍微講一下 controller 的運作．如果今天我的 controller 長這樣：\n```ruby\n\nclass QoosController < ApplicationController\n  def new\n  end\nend\n```\n那今天有個人進到 qoos/new 的頁面時，Rails 就會做出一個 `QoosController` 的實體並呼叫這個實體的 new 方法，那這個網頁會正常運作嗎？ 這要取決於你的 app/views/qoos 資料夾有沒有一個 new.html 開頭的檔案，還記得這裡有個慣例是他會去找 views 裡面跟 controller 同名的資料夾嗎？忘記的人請去看一下前幾天的文章 ~\n\n今天就先寫到這裡囉！明天見~\n\n## 參考資料\n\n[Rails Guide](https://guides.rubyonrails.org/action_controller_overview.html)\n\n[休息(REST)式架構?](https://progressbar.tw/posts/53)\n","source":"_posts/2019-09-13-day12.md","raw":"---\ntitle: \"REST & Controller 命名慣例\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-13 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1564053489865-3f7ddbf8551b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1093&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-13 22:26:24\n# top: 1\n\n---\n\n首先來聽首歌吧！\n[![Yes](https://img.youtube.com/vi/bmtbg5b7_Aw/0.jpg)](https://www.youtube.com/watch?v=bmtbg5b7_Aw)\n雖然我知道聽搖滾的人不多，但還是想介紹個覺得不錯的好歌給大家聽聽 ~ 如果不喜歡搖滾的就慎入喔 XD\n***\n\n## REST\n今天終於來到 Rails Guide 的[另一篇文章](https://guides.rubyonrails.org/action_controller_overview.html)了\n\n在最一開始，文章中就提到了 REST 這個奇怪的字，他是什麼呢？\n\n他的全名是 Resource Representational State Transfer，它的概念是把網址都當作一種資源，而對這些資源使用不同的動作會有不同的結果\n\n沒有使用 REST 設計概念的網頁，其實網址命名就是隨人所好，像是下面這樣 \n```\n商品列表資訊  GET  /getAllItems\n新增商品     GET  /addItem\n看第一號商品  GET  /getItem/1\n```\n那如果使用 REST 方式設計的網站呢，通常會長得像這樣\n```\n商品列表資訊  GET  /items\n新增商品     POST /items\n看第一號商品  GET  /items/1\n```\n至於這些動作分別該對這個網址做什麼，RFC有大致規範，因此其實是可以預期的到會得到怎樣的結果\n***\n## Controller 命名慣例\n在 Rails 中 Controller 的命名也有慣例存在：==最後一個單字要是複數==\n比方說，想要做一個叫做 qoo 的 controller，他的 class 應該叫做 `QoosController`，如果是兩個以上的單字組成的，就是最後一個單字要是複數，ex. `SiteAdminsController`\n\n當然也是可以不甩他的命名慣例，但最後要找地方改成你自己的設定就很麻煩~\n\n在 Rails 中的每個 controller 都繼承自 `ApplicationController` 那他又繼承自 `ActionController::Base`，在這裡面已經內建很多預設給 controller 使用的方法\n\n接下來稍微講一下 controller 的運作．如果今天我的 controller 長這樣：\n```ruby\n\nclass QoosController < ApplicationController\n  def new\n  end\nend\n```\n那今天有個人進到 qoos/new 的頁面時，Rails 就會做出一個 `QoosController` 的實體並呼叫這個實體的 new 方法，那這個網頁會正常運作嗎？ 這要取決於你的 app/views/qoos 資料夾有沒有一個 new.html 開頭的檔案，還記得這裡有個慣例是他會去找 views 裡面跟 controller 同名的資料夾嗎？忘記的人請去看一下前幾天的文章 ~\n\n今天就先寫到這裡囉！明天見~\n\n## 參考資料\n\n[Rails Guide](https://guides.rubyonrails.org/action_controller_overview.html)\n\n[休息(REST)式架構?](https://progressbar.tw/posts/53)\n","slug":"2019-09-13-day12","published":1,"updated":"2019-11-22T06:41:02.894Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0eu5000p2ob1idvgv3cs","content":"<p>首先來聽首歌吧！<br>\n<a href=\"https://www.youtube.com/watch?v=bmtbg5b7_Aw\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.youtube.com/vi/bmtbg5b7_Aw/0.jpg\" alt=\"Yes\"></a><br>\n雖然我知道聽搖滾的人不多，但還是想介紹個覺得不錯的好歌給大家聽聽 ~ 如果不喜歡搖滾的就慎入喔 XD</p>\n<hr>\n<h2 id=\"rest\">REST</h2>\n<p>今天終於來到 Rails Guide 的<a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">另一篇文章</a>了</p>\n<p>在最一開始，文章中就提到了 REST 這個奇怪的字，他是什麼呢？</p>\n<p>他的全名是 Resource Representational State Transfer，它的概念是把網址都當作一種資源，而對這些資源使用不同的動作會有不同的結果</p>\n<p>沒有使用 REST 設計概念的網頁，其實網址命名就是隨人所好，像是下面這樣</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">商品列表資訊  GET  /getAllItems</span><br><span class=\"line\">新增商品     GET  /addItem</span><br><span class=\"line\">看第一號商品  GET  /getItem/1</span><br></pre></td></tr></table></figure>\n<p>那如果使用 REST 方式設計的網站呢，通常會長得像這樣</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">商品列表資訊  GET  /items</span><br><span class=\"line\">新增商品     POST /items</span><br><span class=\"line\">看第一號商品  GET  /items/1</span><br></pre></td></tr></table></figure>\n<p>至於這些動作分別該對這個網址做什麼，RFC有大致規範，因此其實是可以預期的到會得到怎樣的結果</p>\n<hr>\n<h2 id=\"controller-命名慣例\">Controller 命名慣例</h2>\n<p>在 Rails 中 Controller 的命名也有慣例存在：==最後一個單字要是複數==<br>\n比方說，想要做一個叫做 qoo 的 controller，他的 class 應該叫做 <code>QoosController</code>，如果是兩個以上的單字組成的，就是最後一個單字要是複數，ex. <code>SiteAdminsController</code></p>\n<p>當然也是可以不甩他的命名慣例，但最後要找地方改成你自己的設定就很麻煩~</p>\n<p>在 Rails 中的每個 controller 都繼承自 <code>ApplicationController</code> 那他又繼承自 <code>ActionController::Base</code>，在這裡面已經內建很多預設給 controller 使用的方法</p>\n<p>接下來稍微講一下 controller 的運作．如果今天我的 controller 長這樣：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">QoosController</span> &lt; ApplicationController</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">new</span></span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>那今天有個人進到 qoos/new 的頁面時，Rails 就會做出一個 <code>QoosController</code> 的實體並呼叫這個實體的 new 方法，那這個網頁會正常運作嗎？ 這要取決於你的 app/views/qoos 資料夾有沒有一個 new.html 開頭的檔案，還記得這裡有個慣例是他會去找 views 裡面跟 controller 同名的資料夾嗎？忘記的人請去看一下前幾天的文章 ~</p>\n<p>今天就先寫到這裡囉！明天見~</p>\n<h2 id=\"參考資料\">參考資料</h2>\n<p><a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n<p><a href=\"https://progressbar.tw/posts/53\" target=\"_blank\" rel=\"noopener\">休息(REST)式架構?</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>首先來聽首歌吧！<br>\n<a href=\"https://www.youtube.com/watch?v=bmtbg5b7_Aw\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.youtube.com/vi/bmtbg5b7_Aw/0.jpg\" alt=\"Yes\"></a><br>\n雖然我知道聽搖滾的人不多，但還是想介紹個覺得不錯的好歌給大家聽聽 ~ 如果不喜歡搖滾的就慎入喔 XD</p>\n<hr>\n<h2>REST</h2>\n<p>今天終於來到 Rails Guide 的<a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">另一篇文章</a>了</p>\n<p>在最一開始，文章中就提到了 REST 這個奇怪的字，他是什麼呢？</p>\n<p>他的全名是 Resource Representational State Transfer，它的概念是把網址都當作一種資源，而對這些資源使用不同的動作會有不同的結果</p>\n<p>沒有使用 REST 設計概念的網頁，其實網址命名就是隨人所好，像是下面這樣</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">商品列表資訊  GET  /getAllItems</span><br><span class=\"line\">新增商品     GET  /addItem</span><br><span class=\"line\">看第一號商品  GET  /getItem/1</span><br></pre></td></tr></table></figure>\n<p>那如果使用 REST 方式設計的網站呢，通常會長得像這樣</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">商品列表資訊  GET  /items</span><br><span class=\"line\">新增商品     POST /items</span><br><span class=\"line\">看第一號商品  GET  /items/1</span><br></pre></td></tr></table></figure>\n<p>至於這些動作分別該對這個網址做什麼，RFC有大致規範，因此其實是可以預期的到會得到怎樣的結果</p>\n<hr>\n<h2>Controller 命名慣例</h2>\n<p>在 Rails 中 Controller 的命名也有慣例存在：==最後一個單字要是複數==<br>\n比方說，想要做一個叫做 qoo 的 controller，他的 class 應該叫做 <code>QoosController</code>，如果是兩個以上的單字組成的，就是最後一個單字要是複數，ex. <code>SiteAdminsController</code></p>\n<p>當然也是可以不甩他的命名慣例，但最後要找地方改成你自己的設定就很麻煩~</p>\n<p>在 Rails 中的每個 controller 都繼承自 <code>ApplicationController</code> 那他又繼承自 <code>ActionController::Base</code>，在這裡面已經內建很多預設給 controller 使用的方法</p>\n<p>接下來稍微講一下 controller 的運作．如果今天我的 controller 長這樣：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">QoosController</span> &lt; ApplicationController</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">new</span></span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>那今天有個人進到 qoos/new 的頁面時，Rails 就會做出一個 <code>QoosController</code> 的實體並呼叫這個實體的 new 方法，那這個網頁會正常運作嗎？ 這要取決於你的 app/views/qoos 資料夾有沒有一個 new.html 開頭的檔案，還記得這裡有個慣例是他會去找 views 裡面跟 controller 同名的資料夾嗎？忘記的人請去看一下前幾天的文章 ~</p>\n<p>今天就先寫到這裡囉！明天見~</p>\n<h2>參考資料</h2>\n<p><a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n<p><a href=\"https://progressbar.tw/posts/53\" target=\"_blank\" rel=\"noopener\">休息(REST)式架構?</a></p>\n"},{"title":"Parameters","catalog":true,"toc_nav_num":true,"date":"2019-09-14T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1561553543-e4c7b608b98d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Rails"],"updateDate":"2019-09-14T14:26:24.000Z","_content":"\n\n## Action Controller Overview part2\n首先，來聽首歌吧！\nhttps://www.youtube.com/watch?v=qLMChuIJz2o&list=RDMMqLMChuIJz2o&start_radio=1\n這是最近幾年來聽到最愛的女歌手！聲音超級獨特有辨識性，希望各位也會喜歡嚕~\n***\n## parameters 的兩種形式\n今天看到第 4 段這邊的 Parameters\nparameters 主要分成兩種\n\n第一種會直接寫在網址中，比方說網址是`/clients?status=activated` ， 在這頁面中我去拿 `params[:status]` 就會拿到 `activated` 這個資料\n\n第二種是透過 post 方法傳遞，這種通常是透過表單傳遞出來的資訊\n\n不管是以上哪一種方法，在 Rails 中拿資訊的方法都沒有差異\n***\n## 其他拿到 parameters 的方法\n在路徑的設計上我們也可以先加上想拿到的 parameters\n``` ruby\nget '/qoos/:status', to: 'qoos#index', qoo: 'good_drink'\n```\n在這例子中，如果有人進去 /qoos/happy 這個 url，那我們在這個頁面中就可以用 `params[:status]` 拿到 happy ，然後我們在最後有指定 qoo 的值是 good_drink，所以也可以使用 `params[:qoo]` 拿到 good_drink\n\n除此之外在每個頁面中，都可以使用 `params[:controller]` 跟 `params[:action]` 拿到當前是在哪個 controller 還有哪個 action 中！\n\n參考資料 \nRails Guide\nhttps://guides.rubyonrails.org/action_controller_overview.html","source":"_posts/2019-09-14-day13.md","raw":"---\ntitle: \"Parameters\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-14 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1561553543-e4c7b608b98d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-14 22:26:24\n# top: 1\n\n---\n\n\n## Action Controller Overview part2\n首先，來聽首歌吧！\nhttps://www.youtube.com/watch?v=qLMChuIJz2o&list=RDMMqLMChuIJz2o&start_radio=1\n這是最近幾年來聽到最愛的女歌手！聲音超級獨特有辨識性，希望各位也會喜歡嚕~\n***\n## parameters 的兩種形式\n今天看到第 4 段這邊的 Parameters\nparameters 主要分成兩種\n\n第一種會直接寫在網址中，比方說網址是`/clients?status=activated` ， 在這頁面中我去拿 `params[:status]` 就會拿到 `activated` 這個資料\n\n第二種是透過 post 方法傳遞，這種通常是透過表單傳遞出來的資訊\n\n不管是以上哪一種方法，在 Rails 中拿資訊的方法都沒有差異\n***\n## 其他拿到 parameters 的方法\n在路徑的設計上我們也可以先加上想拿到的 parameters\n``` ruby\nget '/qoos/:status', to: 'qoos#index', qoo: 'good_drink'\n```\n在這例子中，如果有人進去 /qoos/happy 這個 url，那我們在這個頁面中就可以用 `params[:status]` 拿到 happy ，然後我們在最後有指定 qoo 的值是 good_drink，所以也可以使用 `params[:qoo]` 拿到 good_drink\n\n除此之外在每個頁面中，都可以使用 `params[:controller]` 跟 `params[:action]` 拿到當前是在哪個 controller 還有哪個 action 中！\n\n參考資料 \nRails Guide\nhttps://guides.rubyonrails.org/action_controller_overview.html","slug":"2019-09-14-day13","published":1,"updated":"2019-11-22T06:41:23.550Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0eu6000r2ob1ge7rhz5z","content":"<h2 id=\"action-controller-overview-part2\">Action Controller Overview part2</h2>\n<p>首先，來聽首歌吧！<br>\n<a href=\"https://www.youtube.com/watch?v=qLMChuIJz2o&amp;list=RDMMqLMChuIJz2o&amp;start_radio=1\" target=\"_blank\" rel=\"noopener\">https://www.youtube.com/watch?v=qLMChuIJz2o&amp;list=RDMMqLMChuIJz2o&amp;start_radio=1</a><br>\n這是最近幾年來聽到最愛的女歌手！聲音超級獨特有辨識性，希望各位也會喜歡嚕~</p>\n<hr>\n<h2 id=\"parameters-的兩種形式\">parameters 的兩種形式</h2>\n<p>今天看到第 4 段這邊的 Parameters<br>\nparameters 主要分成兩種</p>\n<p>第一種會直接寫在網址中，比方說網址是<code>/clients?status=activated</code> ， 在這頁面中我去拿 <code>params[:status]</code> 就會拿到 <code>activated</code> 這個資料</p>\n<p>第二種是透過 post 方法傳遞，這種通常是透過表單傳遞出來的資訊</p>\n<p>不管是以上哪一種方法，在 Rails 中拿資訊的方法都沒有差異</p>\n<hr>\n<h2 id=\"其他拿到-parameters-的方法\">其他拿到 parameters 的方法</h2>\n<p>在路徑的設計上我們也可以先加上想拿到的 parameters</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">get <span class=\"string\">'/qoos/:status'</span>, <span class=\"symbol\">to:</span> <span class=\"string\">'qoos#index'</span>, <span class=\"symbol\">qoo:</span> <span class=\"string\">'good_drink'</span></span><br></pre></td></tr></table></figure>\n<p>在這例子中，如果有人進去 /qoos/happy 這個 url，那我們在這個頁面中就可以用 <code>params[:status]</code> 拿到 happy ，然後我們在最後有指定 qoo 的值是 good_drink，所以也可以使用 <code>params[:qoo]</code> 拿到 good_drink</p>\n<p>除此之外在每個頁面中，都可以使用 <code>params[:controller]</code> 跟 <code>params[:action]</code> 拿到當前是在哪個 controller 還有哪個 action 中！</p>\n<p>參考資料<br>\nRails Guide<br>\n<a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">https://guides.rubyonrails.org/action_controller_overview.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2>Action Controller Overview part2</h2>\n<p>首先，來聽首歌吧！<br>\n<a href=\"https://www.youtube.com/watch?v=qLMChuIJz2o&amp;list=RDMMqLMChuIJz2o&amp;start_radio=1\" target=\"_blank\" rel=\"noopener\">https://www.youtube.com/watch?v=qLMChuIJz2o&amp;list=RDMMqLMChuIJz2o&amp;start_radio=1</a><br>\n這是最近幾年來聽到最愛的女歌手！聲音超級獨特有辨識性，希望各位也會喜歡嚕~</p>\n<hr>\n<h2>parameters 的兩種形式</h2>\n<p>今天看到第 4 段這邊的 Parameters<br>\nparameters 主要分成兩種</p>\n<p>第一種會直接寫在網址中，比方說網址是<code>/clients?status=activated</code> ， 在這頁面中我去拿 <code>params[:status]</code> 就會拿到 <code>activated</code> 這個資料</p>\n<p>第二種是透過 post 方法傳遞，這種通常是透過表單傳遞出來的資訊</p>\n<p>不管是以上哪一種方法，在 Rails 中拿資訊的方法都沒有差異</p>\n<hr>\n<h2>其他拿到 parameters 的方法</h2>\n<p>在路徑的設計上我們也可以先加上想拿到的 parameters</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">get <span class=\"string\">'/qoos/:status'</span>, <span class=\"symbol\">to:</span> <span class=\"string\">'qoos#index'</span>, <span class=\"symbol\">qoo:</span> <span class=\"string\">'good_drink'</span></span><br></pre></td></tr></table></figure>\n<p>在這例子中，如果有人進去 /qoos/happy 這個 url，那我們在這個頁面中就可以用 <code>params[:status]</code> 拿到 happy ，然後我們在最後有指定 qoo 的值是 good_drink，所以也可以使用 <code>params[:qoo]</code> 拿到 good_drink</p>\n<p>除此之外在每個頁面中，都可以使用 <code>params[:controller]</code> 跟 <code>params[:action]</code> 拿到當前是在哪個 controller 還有哪個 action 中！</p>\n<p>參考資料<br>\nRails Guide<br>\n<a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">https://guides.rubyonrails.org/action_controller_overview.html</a></p>\n"},{"title":"Flash","catalog":true,"toc_nav_num":true,"date":"2019-09-15T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1439853949127-fa647821eba0?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=934&q=80","catagories":["Rails"],"updateDate":"2019-09-15T14:26:24.000Z","_content":"\n\n## Flash\n\nFlash 的值只會被存到下一個 request 中，如果我再次轉到另一個網頁， flash 就會被清空，所以常常被拿來用在表示錯誤訊息或者提示訊息\n\nflash 的資料結構是 hash，只要記住這點就很容易理解怎麼使用，請看下面範例\n\n```ruby\n#下面三種結果相同\nredirect_to root_path, flash[:notice] = \"Welcome Home!\"\nredirect_to root_path, flash: { notice: \"Welcome Home!\"}\n#因為太常使用，所以Rails又提供下面這種簡寫\nredirect_to root_path, notice: \"Welcome Home!\"\n```\n\n當然 falsh 能使用的 key 不只有 notice，你也可以存其他的 key，比方說 `flash[:qoo]` 或者 `flash[:signed_status]` 等等\n\nFlash 只能存活在經過一個 request 之後，但如果想要讓他存活久一點可以使用 `keep` 這個方法\n\n```ruby\nclass QoosController < ApplicationController\n  def index\n    flash.keep\n    #也可以只讓其中一個 key-value pair 存久一點\n    flash.keep(:notice)\n    \n    redirect_to qoo2s_path\n  end\nend\n```\n另外，在某些情況下不會 trigger 新的 request，但還是想使用 flash就可以使用 `now` 這個方法\n\n```ruby\n\nclass QoosController < ApplicationController\n  def create\n    @user = User.new(params[clean_params])\n    if @user.save\n      # ...\n    else\n      flash.now[:notice] = \"No new user created\"\n      render action: \"new\"\n    end\n  end\nend\n```\n在上面的例子中，儲存失敗的情況下借用 new.html.erb 的畫面，但這並不會有新的 request，這時候就要用 `now` 的方法才能即時存到 flash\n\n參考資料 \n[Rails Guide](https://guides.rubyonrails.org/action_controller_overview.html)","source":"_posts/2019-09-15-day14.md","raw":"---\ntitle: \"Flash\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-15 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1439853949127-fa647821eba0?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=934&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-15 22:26:24\n# top: 1\n\n---\n\n\n## Flash\n\nFlash 的值只會被存到下一個 request 中，如果我再次轉到另一個網頁， flash 就會被清空，所以常常被拿來用在表示錯誤訊息或者提示訊息\n\nflash 的資料結構是 hash，只要記住這點就很容易理解怎麼使用，請看下面範例\n\n```ruby\n#下面三種結果相同\nredirect_to root_path, flash[:notice] = \"Welcome Home!\"\nredirect_to root_path, flash: { notice: \"Welcome Home!\"}\n#因為太常使用，所以Rails又提供下面這種簡寫\nredirect_to root_path, notice: \"Welcome Home!\"\n```\n\n當然 falsh 能使用的 key 不只有 notice，你也可以存其他的 key，比方說 `flash[:qoo]` 或者 `flash[:signed_status]` 等等\n\nFlash 只能存活在經過一個 request 之後，但如果想要讓他存活久一點可以使用 `keep` 這個方法\n\n```ruby\nclass QoosController < ApplicationController\n  def index\n    flash.keep\n    #也可以只讓其中一個 key-value pair 存久一點\n    flash.keep(:notice)\n    \n    redirect_to qoo2s_path\n  end\nend\n```\n另外，在某些情況下不會 trigger 新的 request，但還是想使用 flash就可以使用 `now` 這個方法\n\n```ruby\n\nclass QoosController < ApplicationController\n  def create\n    @user = User.new(params[clean_params])\n    if @user.save\n      # ...\n    else\n      flash.now[:notice] = \"No new user created\"\n      render action: \"new\"\n    end\n  end\nend\n```\n在上面的例子中，儲存失敗的情況下借用 new.html.erb 的畫面，但這並不會有新的 request，這時候就要用 `now` 的方法才能即時存到 flash\n\n參考資料 \n[Rails Guide](https://guides.rubyonrails.org/action_controller_overview.html)","slug":"2019-09-15-day14","published":1,"updated":"2019-11-22T06:44:06.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0eu7000t2ob1srq2yaq1","content":"<h2 id=\"flash\">Flash</h2>\n<p>Flash 的值只會被存到下一個 request 中，如果我再次轉到另一個網頁， flash 就會被清空，所以常常被拿來用在表示錯誤訊息或者提示訊息</p>\n<p>flash 的資料結構是 hash，只要記住這點就很容易理解怎麼使用，請看下面範例</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#下面三種結果相同</span></span><br><span class=\"line\">redirect_to root_path, flash[<span class=\"symbol\">:notice</span>] = <span class=\"string\">\"Welcome Home!\"</span></span><br><span class=\"line\">redirect_to root_path, <span class=\"symbol\">flash:</span> &#123; <span class=\"symbol\">notice:</span> <span class=\"string\">\"Welcome Home!\"</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">#因為太常使用，所以Rails又提供下面這種簡寫</span></span><br><span class=\"line\">redirect_to root_path, <span class=\"symbol\">notice:</span> <span class=\"string\">\"Welcome Home!\"</span></span><br></pre></td></tr></table></figure>\n<p>當然 falsh 能使用的 key 不只有 notice，你也可以存其他的 key，比方說 <code>flash[:qoo]</code> 或者 <code>flash[:signed_status]</code> 等等</p>\n<p>Flash 只能存活在經過一個 request 之後，但如果想要讓他存活久一點可以使用 <code>keep</code> 這個方法</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">QoosController</span> &lt; ApplicationController</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span></span></span><br><span class=\"line\">    flash.keep</span><br><span class=\"line\">    <span class=\"comment\">#也可以只讓其中一個 key-value pair 存久一點</span></span><br><span class=\"line\">    flash.keep(<span class=\"symbol\">:notice</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    redirect_to qoo2s_path</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>另外，在某些情況下不會 trigger 新的 request，但還是想使用 flash就可以使用 <code>now</code> 這個方法</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">QoosController</span> &lt; ApplicationController</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">create</span></span></span><br><span class=\"line\">    @user = User.new(params[clean_params])</span><br><span class=\"line\">    <span class=\"keyword\">if</span> @user.save</span><br><span class=\"line\">      <span class=\"comment\"># ...</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">      flash.now[<span class=\"symbol\">:notice</span>] = <span class=\"string\">\"No new user created\"</span></span><br><span class=\"line\">      render <span class=\"symbol\">action:</span> <span class=\"string\">\"new\"</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>在上面的例子中，儲存失敗的情況下借用 new.html.erb 的畫面，但這並不會有新的 request，這時候就要用 <code>now</code> 的方法才能即時存到 flash</p>\n<p>參考資料<br>\n<a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2>Flash</h2>\n<p>Flash 的值只會被存到下一個 request 中，如果我再次轉到另一個網頁， flash 就會被清空，所以常常被拿來用在表示錯誤訊息或者提示訊息</p>\n<p>flash 的資料結構是 hash，只要記住這點就很容易理解怎麼使用，請看下面範例</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#下面三種結果相同</span></span><br><span class=\"line\">redirect_to root_path, flash[<span class=\"symbol\">:notice</span>] = <span class=\"string\">\"Welcome Home!\"</span></span><br><span class=\"line\">redirect_to root_path, <span class=\"symbol\">flash:</span> &#123; <span class=\"symbol\">notice:</span> <span class=\"string\">\"Welcome Home!\"</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">#因為太常使用，所以Rails又提供下面這種簡寫</span></span><br><span class=\"line\">redirect_to root_path, <span class=\"symbol\">notice:</span> <span class=\"string\">\"Welcome Home!\"</span></span><br></pre></td></tr></table></figure>\n<p>當然 falsh 能使用的 key 不只有 notice，你也可以存其他的 key，比方說 <code>flash[:qoo]</code> 或者 <code>flash[:signed_status]</code> 等等</p>\n<p>Flash 只能存活在經過一個 request 之後，但如果想要讓他存活久一點可以使用 <code>keep</code> 這個方法</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">QoosController</span> &lt; ApplicationController</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span></span></span><br><span class=\"line\">    flash.keep</span><br><span class=\"line\">    <span class=\"comment\">#也可以只讓其中一個 key-value pair 存久一點</span></span><br><span class=\"line\">    flash.keep(<span class=\"symbol\">:notice</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    redirect_to qoo2s_path</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>另外，在某些情況下不會 trigger 新的 request，但還是想使用 flash就可以使用 <code>now</code> 這個方法</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">QoosController</span> &lt; ApplicationController</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">create</span></span></span><br><span class=\"line\">    @user = User.new(params[clean_params])</span><br><span class=\"line\">    <span class=\"keyword\">if</span> @user.save</span><br><span class=\"line\">      <span class=\"comment\"># ...</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">      flash.now[<span class=\"symbol\">:notice</span>] = <span class=\"string\">\"No new user created\"</span></span><br><span class=\"line\">      render <span class=\"symbol\">action:</span> <span class=\"string\">\"new\"</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>在上面的例子中，儲存失敗的情況下借用 new.html.erb 的畫面，但這並不會有新的 request，這時候就要用 <code>now</code> 的方法才能即時存到 flash</p>\n<p>參考資料<br>\n<a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n"},{"title":"Filters","catalog":true,"toc_nav_num":true,"date":"2019-09-21T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1568021735466-efd8a4c435af?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2089&q=80","catagories":["Rails"],"updateDate":"2019-09-21T14:26:24.000Z","_content":"\n\n***\n## Filters\n今天要來看的是[這篇](https://guides.rubyonrails.org/action_controller_overview.html)第八章的部分\n\n\nRails 中 filter 可以有 \"before\", \"after\" 跟 \"around\" 這三個階段，表示這個東西要使用在每個 action 前 / 後 ／ 還是中間\n\n很抽象嗎？來看看例子就懂囉！\n\n因為 Rails Guide 的例子還滿清楚的，我就直接使用他們的例子講解了(絕對不是懶得自己打)\n\n```ruby\nclass ApplicationController < ActionController::Base\n  before_action :require_login\n \n  private\n  def require_login\n    unless logged_in?\n      flash[:error] = \"You must be logged in to access this section\"\n      redirect_to new_login_url # halts request cycle\n    end\n  end\nend\n```\n在上面的例子中，定義了一個 private method `require_login` 並把它放在 filter `before_action` 中，所以在執行每個動作之前，都會先確認這個使用者的狀態是不是已經登入了\n\n但這樣是有盲點的，你不可能到了一個新的頁面就已經是登入的狀態了(除非 cookie 已經儲存了)，這時候可以用 `skip_before_action` 這個方法來設定例外\n\n``` ruby\nclass LoginsController < ApplicationController\n  skip_before_action :require_login, only: [:new, :create]\nend\n```\n`around_action`的使用比較複雜，在定義方法的時候一定要搭配 `yield` 來使用\n```ruby\nclass UsersController < ApplicationController\n  around_action :hoge\n\n  ...\n  private\n    def hoge\n      logger.debug \"執行前處理\"\n      yield  # 執行 action 裡面的內容\n      logger.debug \"執行後處理\"\n    end\nend\n```\n***\n## Filter 其他用法\n除了在 filter 後面接方法之外，還可以接 Block 或者 Class\n\n```ruby\nclass ApplicationController < ActionController::Base\n  before_action do |controller|\n    unless controller.send(:logged_in?)\n      flash[:error] = \"You must be logged in to access this section\"\n      redirect_to new_login_url\n    end\n  end\nend\n```\n上面這邊要注意，因為 logged_in 是一個 private 方法，對於 private 方法是不能有對象的，因此要用 send 這個方法\n```ruby\n\nclass ApplicationController < ActionController::Base\n  before_action LoginFilter\nend\n \nclass LoginFilter\n  def self.before(controller)\n    unless controller.send(:logged_in?)\n      controller.flash[:error] = \"You must be logged in to access this section\"\n      controller.redirect_to controller.new_login_url\n    end\n  end\nend\n```\n在使用 class 的時候也要注意，這個 class 裡面的方法一定要呼應 filter 的種類，在這個例子中使用 `before_action`，所以裡面要有`before` 這個類別方法\n\n\n參考資料 \n[Rails Guide](https://guides.rubyonrails.org/action_controller_overview.html)\n\n[Rails4でアクションの前後にフィルタ/処理を挟み込む](https://ruby-rails.hatenadiary.com/entry/20141129/1417223453)\n","source":"_posts/2019-09-21-day15.md","raw":"---\ntitle: \"Filters\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-21 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1568021735466-efd8a4c435af?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2089&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-21 22:26:24\n# top: 1\n\n---\n\n\n***\n## Filters\n今天要來看的是[這篇](https://guides.rubyonrails.org/action_controller_overview.html)第八章的部分\n\n\nRails 中 filter 可以有 \"before\", \"after\" 跟 \"around\" 這三個階段，表示這個東西要使用在每個 action 前 / 後 ／ 還是中間\n\n很抽象嗎？來看看例子就懂囉！\n\n因為 Rails Guide 的例子還滿清楚的，我就直接使用他們的例子講解了(絕對不是懶得自己打)\n\n```ruby\nclass ApplicationController < ActionController::Base\n  before_action :require_login\n \n  private\n  def require_login\n    unless logged_in?\n      flash[:error] = \"You must be logged in to access this section\"\n      redirect_to new_login_url # halts request cycle\n    end\n  end\nend\n```\n在上面的例子中，定義了一個 private method `require_login` 並把它放在 filter `before_action` 中，所以在執行每個動作之前，都會先確認這個使用者的狀態是不是已經登入了\n\n但這樣是有盲點的，你不可能到了一個新的頁面就已經是登入的狀態了(除非 cookie 已經儲存了)，這時候可以用 `skip_before_action` 這個方法來設定例外\n\n``` ruby\nclass LoginsController < ApplicationController\n  skip_before_action :require_login, only: [:new, :create]\nend\n```\n`around_action`的使用比較複雜，在定義方法的時候一定要搭配 `yield` 來使用\n```ruby\nclass UsersController < ApplicationController\n  around_action :hoge\n\n  ...\n  private\n    def hoge\n      logger.debug \"執行前處理\"\n      yield  # 執行 action 裡面的內容\n      logger.debug \"執行後處理\"\n    end\nend\n```\n***\n## Filter 其他用法\n除了在 filter 後面接方法之外，還可以接 Block 或者 Class\n\n```ruby\nclass ApplicationController < ActionController::Base\n  before_action do |controller|\n    unless controller.send(:logged_in?)\n      flash[:error] = \"You must be logged in to access this section\"\n      redirect_to new_login_url\n    end\n  end\nend\n```\n上面這邊要注意，因為 logged_in 是一個 private 方法，對於 private 方法是不能有對象的，因此要用 send 這個方法\n```ruby\n\nclass ApplicationController < ActionController::Base\n  before_action LoginFilter\nend\n \nclass LoginFilter\n  def self.before(controller)\n    unless controller.send(:logged_in?)\n      controller.flash[:error] = \"You must be logged in to access this section\"\n      controller.redirect_to controller.new_login_url\n    end\n  end\nend\n```\n在使用 class 的時候也要注意，這個 class 裡面的方法一定要呼應 filter 的種類，在這個例子中使用 `before_action`，所以裡面要有`before` 這個類別方法\n\n\n參考資料 \n[Rails Guide](https://guides.rubyonrails.org/action_controller_overview.html)\n\n[Rails4でアクションの前後にフィルタ/処理を挟み込む](https://ruby-rails.hatenadiary.com/entry/20141129/1417223453)\n","slug":"2019-09-21-day15","published":1,"updated":"2019-11-22T06:47:32.704Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0eu8000v2ob1ua00qvqf","content":"<hr>\n<h2 id=\"filters\">Filters</h2>\n<p>今天要來看的是<a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">這篇</a>第八章的部分</p>\n<p>Rails 中 filter 可以有 “before”, “after” 跟 “around” 這三個階段，表示這個東西要使用在每個 action 前 / 後 ／ 還是中間</p>\n<p>很抽象嗎？來看看例子就懂囉！</p>\n<p>因為 Rails Guide 的例子還滿清楚的，我就直接使用他們的例子講解了(絕對不是懶得自己打)</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationController</span> &lt; ActionController::Base</span></span><br><span class=\"line\">  before_action <span class=\"symbol\">:require_login</span></span><br><span class=\"line\"> </span><br><span class=\"line\">  private</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">require_login</span></span></span><br><span class=\"line\">    <span class=\"keyword\">unless</span> logged_in?</span><br><span class=\"line\">      flash[<span class=\"symbol\">:error</span>] = <span class=\"string\">\"You must be logged in to access this section\"</span></span><br><span class=\"line\">      redirect_to new_login_url <span class=\"comment\"># halts request cycle</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>在上面的例子中，定義了一個 private method <code>require_login</code> 並把它放在 filter <code>before_action</code> 中，所以在執行每個動作之前，都會先確認這個使用者的狀態是不是已經登入了</p>\n<p>但這樣是有盲點的，你不可能到了一個新的頁面就已經是登入的狀態了(除非 cookie 已經儲存了)，這時候可以用 <code>skip_before_action</code> 這個方法來設定例外</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LoginsController</span> &lt; ApplicationController</span></span><br><span class=\"line\">  skip_before_action <span class=\"symbol\">:require_login</span>, <span class=\"symbol\">only:</span> [<span class=\"symbol\">:new</span>, <span class=\"symbol\">:create</span>]</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p><code>around_action</code>的使用比較複雜，在定義方法的時候一定要搭配 <code>yield</code> 來使用</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UsersController</span> &lt; ApplicationController</span></span><br><span class=\"line\">  around_action <span class=\"symbol\">:hoge</span></span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  private</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hoge</span></span></span><br><span class=\"line\">      logger.debug <span class=\"string\">\"執行前處理\"</span></span><br><span class=\"line\">      <span class=\"keyword\">yield</span>  <span class=\"comment\"># 執行 action 裡面的內容</span></span><br><span class=\"line\">      logger.debug <span class=\"string\">\"執行後處理\"</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"filter-其他用法\">Filter 其他用法</h2>\n<p>除了在 filter 後面接方法之外，還可以接 Block 或者 Class</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationController</span> &lt; ActionController::Base</span></span><br><span class=\"line\">  before_action <span class=\"keyword\">do</span> <span class=\"params\">|controller|</span></span><br><span class=\"line\">    <span class=\"keyword\">unless</span> controller.send(<span class=\"symbol\">:logged_in?</span>)</span><br><span class=\"line\">      flash[<span class=\"symbol\">:error</span>] = <span class=\"string\">\"You must be logged in to access this section\"</span></span><br><span class=\"line\">      redirect_to new_login_url</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>上面這邊要注意，因為 logged_in 是一個 private 方法，對於 private 方法是不能有對象的，因此要用 send 這個方法</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationController</span> &lt; ActionController::Base</span></span><br><span class=\"line\">  before_action LoginFilter</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LoginFilter</span></span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">self</span>.<span class=\"title\">before</span><span class=\"params\">(controller)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">unless</span> controller.send(<span class=\"symbol\">:logged_in?</span>)</span><br><span class=\"line\">      controller.flash[<span class=\"symbol\">:error</span>] = <span class=\"string\">\"You must be logged in to access this section\"</span></span><br><span class=\"line\">      controller.redirect_to controller.new_login_url</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>在使用 class 的時候也要注意，這個 class 裡面的方法一定要呼應 filter 的種類，在這個例子中使用 <code>before_action</code>，所以裡面要有<code>before</code> 這個類別方法</p>\n<p>參考資料<br>\n<a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n<p><a href=\"https://ruby-rails.hatenadiary.com/entry/20141129/1417223453\" target=\"_blank\" rel=\"noopener\">Rails4でアクションの前後にフィルタ/処理を挟み込む</a></p>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<h2>Filters</h2>\n<p>今天要來看的是<a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">這篇</a>第八章的部分</p>\n<p>Rails 中 filter 可以有 “before”, “after” 跟 “around” 這三個階段，表示這個東西要使用在每個 action 前 / 後 ／ 還是中間</p>\n<p>很抽象嗎？來看看例子就懂囉！</p>\n<p>因為 Rails Guide 的例子還滿清楚的，我就直接使用他們的例子講解了(絕對不是懶得自己打)</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationController</span> &lt; ActionController::Base</span></span><br><span class=\"line\">  before_action <span class=\"symbol\">:require_login</span></span><br><span class=\"line\"> </span><br><span class=\"line\">  private</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">require_login</span></span></span><br><span class=\"line\">    <span class=\"keyword\">unless</span> logged_in?</span><br><span class=\"line\">      flash[<span class=\"symbol\">:error</span>] = <span class=\"string\">\"You must be logged in to access this section\"</span></span><br><span class=\"line\">      redirect_to new_login_url <span class=\"comment\"># halts request cycle</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>在上面的例子中，定義了一個 private method <code>require_login</code> 並把它放在 filter <code>before_action</code> 中，所以在執行每個動作之前，都會先確認這個使用者的狀態是不是已經登入了</p>\n<p>但這樣是有盲點的，你不可能到了一個新的頁面就已經是登入的狀態了(除非 cookie 已經儲存了)，這時候可以用 <code>skip_before_action</code> 這個方法來設定例外</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LoginsController</span> &lt; ApplicationController</span></span><br><span class=\"line\">  skip_before_action <span class=\"symbol\">:require_login</span>, <span class=\"symbol\">only:</span> [<span class=\"symbol\">:new</span>, <span class=\"symbol\">:create</span>]</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p><code>around_action</code>的使用比較複雜，在定義方法的時候一定要搭配 <code>yield</code> 來使用</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UsersController</span> &lt; ApplicationController</span></span><br><span class=\"line\">  around_action <span class=\"symbol\">:hoge</span></span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  private</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hoge</span></span></span><br><span class=\"line\">      logger.debug <span class=\"string\">\"執行前處理\"</span></span><br><span class=\"line\">      <span class=\"keyword\">yield</span>  <span class=\"comment\"># 執行 action 裡面的內容</span></span><br><span class=\"line\">      logger.debug <span class=\"string\">\"執行後處理\"</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2>Filter 其他用法</h2>\n<p>除了在 filter 後面接方法之外，還可以接 Block 或者 Class</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationController</span> &lt; ActionController::Base</span></span><br><span class=\"line\">  before_action <span class=\"keyword\">do</span> <span class=\"params\">|controller|</span></span><br><span class=\"line\">    <span class=\"keyword\">unless</span> controller.send(<span class=\"symbol\">:logged_in?</span>)</span><br><span class=\"line\">      flash[<span class=\"symbol\">:error</span>] = <span class=\"string\">\"You must be logged in to access this section\"</span></span><br><span class=\"line\">      redirect_to new_login_url</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>上面這邊要注意，因為 logged_in 是一個 private 方法，對於 private 方法是不能有對象的，因此要用 send 這個方法</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationController</span> &lt; ActionController::Base</span></span><br><span class=\"line\">  before_action LoginFilter</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LoginFilter</span></span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">self</span>.<span class=\"title\">before</span><span class=\"params\">(controller)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">unless</span> controller.send(<span class=\"symbol\">:logged_in?</span>)</span><br><span class=\"line\">      controller.flash[<span class=\"symbol\">:error</span>] = <span class=\"string\">\"You must be logged in to access this section\"</span></span><br><span class=\"line\">      controller.redirect_to controller.new_login_url</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>在使用 class 的時候也要注意，這個 class 裡面的方法一定要呼應 filter 的種類，在這個例子中使用 <code>before_action</code>，所以裡面要有<code>before</code> 這個類別方法</p>\n<p>參考資料<br>\n<a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n<p><a href=\"https://ruby-rails.hatenadiary.com/entry/20141129/1417223453\" target=\"_blank\" rel=\"noopener\">Rails4でアクションの前後にフィルタ/処理を挟み込む</a></p>\n"},{"title":"Request Forgery Protection","catalog":true,"toc_nav_num":true,"date":"2019-09-22T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1568438350562-2cae6d394ad0?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Rails"],"updateDate":"2019-09-22T14:26:24.000Z","_content":"\n\n## Request Forgery Protection\n\n今天來到[這篇](https://guides.rubyonrails.org/action_controller_overview.html)的第 9 章，剛好之前聽到 Request Forgery 這個名詞覺得困惑，但沒有深入研究，今天來粗淺的探討一下\n\n網路上有種攻擊方式叫做 CSRF (Cross Site Request Forgery)，翻成中文的話是跨站請求偽造\n\n這種攻擊方法的概念是**讓使用者無意間做了某件事，通常是點了一個連結，或者按了一個按鈕，讓有心人士偽造出使用者本人發出的 request**\n\n這邊也來簡單舉個例吧\n\n比方說今天有個惡意人士做了一個下載的連結 `www.qoo.com/123456`，裡面放的都是一些壞壞的東西\n\n為了讓大家進去下載他們不想下載的東西，就做一個很吸引人的連結，像是恭喜你中大獎或者你是第 100 萬個用戶要送你哀鳳之類的，連結可能長這樣\n\n```html\n<a href='www.qoo.com/123456' >請點這裡拿取你的哀鳳！</a>\n```\n一點擊，真的會下載這些惡意程式到電腦裡面因此就中招了\n\n這只是個簡單的例子，當然真正要騙人的還會做得更精美，讓你完全不知道自己中招，接下來介紹 Rails 的防禦機制\n\n***\n## Rails 的防禦機制\nRails 的防禦機制是加上 CSRF token，在你送出表單的時候，會隨機產生一組 token，要進入這個連結，Rails 會跟自己的 session 內容比對，確認這組 token 是不是由他產生的，如果不是就會擋掉，防止有心人士蓄意更改網站內容\n\n如果有使用 form builder 的話，應該可以在那個頁面看到像是以下的程式碼：\n\n```ruby\n<input type=\"hidden\"\n       value=\"...\"\n       name=\"authenticity_token\"/>\n```\n上面這段就是提到的 CSRF token 囉！\n其中的 value 看起來像是很長的一串亂數，這就是 Rails 生出來的，而且每次重新整理都會更新\n\n如果想更了解 CSRF 可以參考[這篇文章](https://blog.techbridge.cc/2017/02/25/csrf-introduction/)，裡面寫得非常詳細，還有提供更多的保護機制~\n\n\n\n參考資料\n[Rails Guide](https://guides.rubyonrails.org/action_controller_overview.html)\n\n[讓我們來談談 CSRF](https://blog.techbridge.cc/2017/02/25/csrf-introduction/)\n","source":"_posts/2019-09-22-day16.md","raw":"---\ntitle: \"Request Forgery Protection\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-22 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1568438350562-2cae6d394ad0?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-22 22:26:24\n# top: 1\n\n---\n\n\n## Request Forgery Protection\n\n今天來到[這篇](https://guides.rubyonrails.org/action_controller_overview.html)的第 9 章，剛好之前聽到 Request Forgery 這個名詞覺得困惑，但沒有深入研究，今天來粗淺的探討一下\n\n網路上有種攻擊方式叫做 CSRF (Cross Site Request Forgery)，翻成中文的話是跨站請求偽造\n\n這種攻擊方法的概念是**讓使用者無意間做了某件事，通常是點了一個連結，或者按了一個按鈕，讓有心人士偽造出使用者本人發出的 request**\n\n這邊也來簡單舉個例吧\n\n比方說今天有個惡意人士做了一個下載的連結 `www.qoo.com/123456`，裡面放的都是一些壞壞的東西\n\n為了讓大家進去下載他們不想下載的東西，就做一個很吸引人的連結，像是恭喜你中大獎或者你是第 100 萬個用戶要送你哀鳳之類的，連結可能長這樣\n\n```html\n<a href='www.qoo.com/123456' >請點這裡拿取你的哀鳳！</a>\n```\n一點擊，真的會下載這些惡意程式到電腦裡面因此就中招了\n\n這只是個簡單的例子，當然真正要騙人的還會做得更精美，讓你完全不知道自己中招，接下來介紹 Rails 的防禦機制\n\n***\n## Rails 的防禦機制\nRails 的防禦機制是加上 CSRF token，在你送出表單的時候，會隨機產生一組 token，要進入這個連結，Rails 會跟自己的 session 內容比對，確認這組 token 是不是由他產生的，如果不是就會擋掉，防止有心人士蓄意更改網站內容\n\n如果有使用 form builder 的話，應該可以在那個頁面看到像是以下的程式碼：\n\n```ruby\n<input type=\"hidden\"\n       value=\"...\"\n       name=\"authenticity_token\"/>\n```\n上面這段就是提到的 CSRF token 囉！\n其中的 value 看起來像是很長的一串亂數，這就是 Rails 生出來的，而且每次重新整理都會更新\n\n如果想更了解 CSRF 可以參考[這篇文章](https://blog.techbridge.cc/2017/02/25/csrf-introduction/)，裡面寫得非常詳細，還有提供更多的保護機制~\n\n\n\n參考資料\n[Rails Guide](https://guides.rubyonrails.org/action_controller_overview.html)\n\n[讓我們來談談 CSRF](https://blog.techbridge.cc/2017/02/25/csrf-introduction/)\n","slug":"2019-09-22-day16","published":1,"updated":"2019-11-22T06:48:00.206Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0eu9000x2ob17pd29xm2","content":"<h2 id=\"request-forgery-protection\">Request Forgery Protection</h2>\n<p>今天來到<a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">這篇</a>的第 9 章，剛好之前聽到 Request Forgery 這個名詞覺得困惑，但沒有深入研究，今天來粗淺的探討一下</p>\n<p>網路上有種攻擊方式叫做 CSRF (Cross Site Request Forgery)，翻成中文的話是跨站請求偽造</p>\n<p>這種攻擊方法的概念是<strong>讓使用者無意間做了某件事，通常是點了一個連結，或者按了一個按鈕，讓有心人士偽造出使用者本人發出的 request</strong></p>\n<p>這邊也來簡單舉個例吧</p>\n<p>比方說今天有個惡意人士做了一個下載的連結 <code>www.qoo.com/123456</code>，裡面放的都是一些壞壞的東西</p>\n<p>為了讓大家進去下載他們不想下載的東西，就做一個很吸引人的連結，像是恭喜你中大獎或者你是第 100 萬個用戶要送你哀鳳之類的，連結可能長這樣</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">'www.qoo.com/123456'</span> &gt;</span>請點這裡拿取你的哀鳳！<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>一點擊，真的會下載這些惡意程式到電腦裡面因此就中招了</p>\n<p>這只是個簡單的例子，當然真正要騙人的還會做得更精美，讓你完全不知道自己中招，接下來介紹 Rails 的防禦機制</p>\n<hr>\n<h2 id=\"rails-的防禦機制\">Rails 的防禦機制</h2>\n<p>Rails 的防禦機制是加上 CSRF token，在你送出表單的時候，會隨機產生一組 token，要進入這個連結，Rails 會跟自己的 session 內容比對，確認這組 token 是不是由他產生的，如果不是就會擋掉，防止有心人士蓄意更改網站內容</p>\n<p>如果有使用 form builder 的話，應該可以在那個頁面看到像是以下的程式碼：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input type=<span class=\"string\">\"hidden\"</span></span><br><span class=\"line\">       value=<span class=\"string\">\"...\"</span></span><br><span class=\"line\">       name=<span class=\"string\">\"authenticity_token\"</span>/&gt;</span><br></pre></td></tr></table></figure>\n<p>上面這段就是提到的 CSRF token 囉！<br>\n其中的 value 看起來像是很長的一串亂數，這就是 Rails 生出來的，而且每次重新整理都會更新</p>\n<p>如果想更了解 CSRF 可以參考<a href=\"https://blog.techbridge.cc/2017/02/25/csrf-introduction/\" target=\"_blank\" rel=\"noopener\">這篇文章</a>，裡面寫得非常詳細，還有提供更多的保護機制~</p>\n<p>參考資料<br>\n<a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n<p><a href=\"https://blog.techbridge.cc/2017/02/25/csrf-introduction/\" target=\"_blank\" rel=\"noopener\">讓我們來談談 CSRF</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2>Request Forgery Protection</h2>\n<p>今天來到<a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">這篇</a>的第 9 章，剛好之前聽到 Request Forgery 這個名詞覺得困惑，但沒有深入研究，今天來粗淺的探討一下</p>\n<p>網路上有種攻擊方式叫做 CSRF (Cross Site Request Forgery)，翻成中文的話是跨站請求偽造</p>\n<p>這種攻擊方法的概念是<strong>讓使用者無意間做了某件事，通常是點了一個連結，或者按了一個按鈕，讓有心人士偽造出使用者本人發出的 request</strong></p>\n<p>這邊也來簡單舉個例吧</p>\n<p>比方說今天有個惡意人士做了一個下載的連結 <code>www.qoo.com/123456</code>，裡面放的都是一些壞壞的東西</p>\n<p>為了讓大家進去下載他們不想下載的東西，就做一個很吸引人的連結，像是恭喜你中大獎或者你是第 100 萬個用戶要送你哀鳳之類的，連結可能長這樣</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">'www.qoo.com/123456'</span> &gt;</span>請點這裡拿取你的哀鳳！<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>一點擊，真的會下載這些惡意程式到電腦裡面因此就中招了</p>\n<p>這只是個簡單的例子，當然真正要騙人的還會做得更精美，讓你完全不知道自己中招，接下來介紹 Rails 的防禦機制</p>\n<hr>\n<h2>Rails 的防禦機制</h2>\n<p>Rails 的防禦機制是加上 CSRF token，在你送出表單的時候，會隨機產生一組 token，要進入這個連結，Rails 會跟自己的 session 內容比對，確認這組 token 是不是由他產生的，如果不是就會擋掉，防止有心人士蓄意更改網站內容</p>\n<p>如果有使用 form builder 的話，應該可以在那個頁面看到像是以下的程式碼：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input type=<span class=\"string\">\"hidden\"</span></span><br><span class=\"line\">       value=<span class=\"string\">\"...\"</span></span><br><span class=\"line\">       name=<span class=\"string\">\"authenticity_token\"</span>/&gt;</span><br></pre></td></tr></table></figure>\n<p>上面這段就是提到的 CSRF token 囉！<br>\n其中的 value 看起來像是很長的一串亂數，這就是 Rails 生出來的，而且每次重新整理都會更新</p>\n<p>如果想更了解 CSRF 可以參考<a href=\"https://blog.techbridge.cc/2017/02/25/csrf-introduction/\" target=\"_blank\" rel=\"noopener\">這篇文章</a>，裡面寫得非常詳細，還有提供更多的保護機制~</p>\n<p>參考資料<br>\n<a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n<p><a href=\"https://blog.techbridge.cc/2017/02/25/csrf-introduction/\" target=\"_blank\" rel=\"noopener\">讓我們來談談 CSRF</a></p>\n"},{"title":"Basic / Digest HTTP Authentication","catalog":true,"toc_nav_num":true,"date":"2019-09-23T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1564218842758-cefd16bae41e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1954&q=80","catagories":["Rails"],"updateDate":"2019-09-23T14:26:24.000Z","_content":"\n** Http 認證 Basic / Digest\n今天來到[這篇](https://guides.rubyonrails.org/action_controller_overview.html)的第11章\n\n基礎的 http 認證有 Basic 跟 Digest 兩種\n\n- **Basic HTTP Authentication 的步驟：**\n1. 使用者發出 request ，送出使用者帳號跟密碼到伺服器\n2. 使用者判斷使用者帳號跟密碼是否正確來給予需要的資訊或者錯誤訊息\n\n- **Digest HTTP Authentication 的步驟：**\n1. 使用者先發送請求給伺服器\n2. 伺服器回應一串亂碼(以下稱為 nonce, number used only once)以及一串代表網域(會是 hash 的格式)的字串，並要求使用者驗證\n3. 使用者回應加密過的帳號 / 密碼 / 網域資訊並且附帶著剛剛伺服器給的 nonce 回去給伺服器\n4. 伺服器根據剛剛的那些資訊是否正確給予需要的資訊或者錯誤訊息\n\n***\n## 兩個方法的比較\nBasic HTTP Authentication 使用 base64 編碼，這並不是加密，因此如果不搭配 SSL 使用的話，等於把你個人資訊暴露在網路世界中，這是非常不安全的做法\n\n至於 Digest HTTP Authentication 的缺點可以從上面步驟看到，每次的 request 都要兩次來回才能得到資訊，因此速度較慢，但當然也相對安全\n\n在 Rails 中要使用這兩種認證方法分別使用的是 `http_basic_authenticate_with` 跟 `authenticate_or_request_with_http_digest` 這兩種方法\n\n雖然看到網路上很多資訊，但以目前的能力並不能分辨到底哪些是對哪些是錯，因此只能先做很粗淺的介紹，如果有錯的話也歡迎大家指正喔！\n\n\n\n\n參考資料\n[Rails Guide](https://guides.rubyonrails.org/action_controller_overview.html)\n\n[開發者必備知識 - HTTP認證（HTTP Authentication）](https://carsonwah.github.io/http-authentication.html)\n\n[StackOverflow](https://stackoverflow.com/questions/9534602/what-is-the-difference-between-digest-and-basic-authentication)","source":"_posts/2019-09-23-day17.md","raw":"---\ntitle: \"Basic / Digest HTTP Authentication\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-23 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1564218842758-cefd16bae41e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1954&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-23 22:26:24\n# top: 1\n\n---\n\n** Http 認證 Basic / Digest\n今天來到[這篇](https://guides.rubyonrails.org/action_controller_overview.html)的第11章\n\n基礎的 http 認證有 Basic 跟 Digest 兩種\n\n- **Basic HTTP Authentication 的步驟：**\n1. 使用者發出 request ，送出使用者帳號跟密碼到伺服器\n2. 使用者判斷使用者帳號跟密碼是否正確來給予需要的資訊或者錯誤訊息\n\n- **Digest HTTP Authentication 的步驟：**\n1. 使用者先發送請求給伺服器\n2. 伺服器回應一串亂碼(以下稱為 nonce, number used only once)以及一串代表網域(會是 hash 的格式)的字串，並要求使用者驗證\n3. 使用者回應加密過的帳號 / 密碼 / 網域資訊並且附帶著剛剛伺服器給的 nonce 回去給伺服器\n4. 伺服器根據剛剛的那些資訊是否正確給予需要的資訊或者錯誤訊息\n\n***\n## 兩個方法的比較\nBasic HTTP Authentication 使用 base64 編碼，這並不是加密，因此如果不搭配 SSL 使用的話，等於把你個人資訊暴露在網路世界中，這是非常不安全的做法\n\n至於 Digest HTTP Authentication 的缺點可以從上面步驟看到，每次的 request 都要兩次來回才能得到資訊，因此速度較慢，但當然也相對安全\n\n在 Rails 中要使用這兩種認證方法分別使用的是 `http_basic_authenticate_with` 跟 `authenticate_or_request_with_http_digest` 這兩種方法\n\n雖然看到網路上很多資訊，但以目前的能力並不能分辨到底哪些是對哪些是錯，因此只能先做很粗淺的介紹，如果有錯的話也歡迎大家指正喔！\n\n\n\n\n參考資料\n[Rails Guide](https://guides.rubyonrails.org/action_controller_overview.html)\n\n[開發者必備知識 - HTTP認證（HTTP Authentication）](https://carsonwah.github.io/http-authentication.html)\n\n[StackOverflow](https://stackoverflow.com/questions/9534602/what-is-the-difference-between-digest-and-basic-authentication)","slug":"2019-09-23-day17","published":1,"updated":"2019-11-22T06:48:37.413Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0eua000z2ob1muh2wqci","content":"<p>** Http 認證 Basic / Digest<br>\n今天來到<a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">這篇</a>的第11章</p>\n<p>基礎的 http 認證有 Basic 跟 Digest 兩種</p>\n<ul>\n<li><strong>Basic HTTP Authentication 的步驟：</strong></li>\n</ul>\n<ol>\n<li>使用者發出 request ，送出使用者帳號跟密碼到伺服器</li>\n<li>使用者判斷使用者帳號跟密碼是否正確來給予需要的資訊或者錯誤訊息</li>\n</ol>\n<ul>\n<li><strong>Digest HTTP Authentication 的步驟：</strong></li>\n</ul>\n<ol>\n<li>使用者先發送請求給伺服器</li>\n<li>伺服器回應一串亂碼(以下稱為 nonce, number used only once)以及一串代表網域(會是 hash 的格式)的字串，並要求使用者驗證</li>\n<li>使用者回應加密過的帳號 / 密碼 / 網域資訊並且附帶著剛剛伺服器給的 nonce 回去給伺服器</li>\n<li>伺服器根據剛剛的那些資訊是否正確給予需要的資訊或者錯誤訊息</li>\n</ol>\n<hr>\n<h2 id=\"兩個方法的比較\">兩個方法的比較</h2>\n<p>Basic HTTP Authentication 使用 base64 編碼，這並不是加密，因此如果不搭配 SSL 使用的話，等於把你個人資訊暴露在網路世界中，這是非常不安全的做法</p>\n<p>至於 Digest HTTP Authentication 的缺點可以從上面步驟看到，每次的 request 都要兩次來回才能得到資訊，因此速度較慢，但當然也相對安全</p>\n<p>在 Rails 中要使用這兩種認證方法分別使用的是 <code>http_basic_authenticate_with</code> 跟 <code>authenticate_or_request_with_http_digest</code> 這兩種方法</p>\n<p>雖然看到網路上很多資訊，但以目前的能力並不能分辨到底哪些是對哪些是錯，因此只能先做很粗淺的介紹，如果有錯的話也歡迎大家指正喔！</p>\n<p>參考資料<br>\n<a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n<p><a href=\"https://carsonwah.github.io/http-authentication.html\" target=\"_blank\" rel=\"noopener\">開發者必備知識 - HTTP認證（HTTP Authentication）</a></p>\n<p><a href=\"https://stackoverflow.com/questions/9534602/what-is-the-difference-between-digest-and-basic-authentication\" target=\"_blank\" rel=\"noopener\">StackOverflow</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>** Http 認證 Basic / Digest<br>\n今天來到<a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">這篇</a>的第11章</p>\n<p>基礎的 http 認證有 Basic 跟 Digest 兩種</p>\n<ul>\n<li><strong>Basic HTTP Authentication 的步驟：</strong></li>\n</ul>\n<ol>\n<li>使用者發出 request ，送出使用者帳號跟密碼到伺服器</li>\n<li>使用者判斷使用者帳號跟密碼是否正確來給予需要的資訊或者錯誤訊息</li>\n</ol>\n<ul>\n<li><strong>Digest HTTP Authentication 的步驟：</strong></li>\n</ul>\n<ol>\n<li>使用者先發送請求給伺服器</li>\n<li>伺服器回應一串亂碼(以下稱為 nonce, number used only once)以及一串代表網域(會是 hash 的格式)的字串，並要求使用者驗證</li>\n<li>使用者回應加密過的帳號 / 密碼 / 網域資訊並且附帶著剛剛伺服器給的 nonce 回去給伺服器</li>\n<li>伺服器根據剛剛的那些資訊是否正確給予需要的資訊或者錯誤訊息</li>\n</ol>\n<hr>\n<h2>兩個方法的比較</h2>\n<p>Basic HTTP Authentication 使用 base64 編碼，這並不是加密，因此如果不搭配 SSL 使用的話，等於把你個人資訊暴露在網路世界中，這是非常不安全的做法</p>\n<p>至於 Digest HTTP Authentication 的缺點可以從上面步驟看到，每次的 request 都要兩次來回才能得到資訊，因此速度較慢，但當然也相對安全</p>\n<p>在 Rails 中要使用這兩種認證方法分別使用的是 <code>http_basic_authenticate_with</code> 跟 <code>authenticate_or_request_with_http_digest</code> 這兩種方法</p>\n<p>雖然看到網路上很多資訊，但以目前的能力並不能分辨到底哪些是對哪些是錯，因此只能先做很粗淺的介紹，如果有錯的話也歡迎大家指正喔！</p>\n<p>參考資料<br>\n<a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n<p><a href=\"https://carsonwah.github.io/http-authentication.html\" target=\"_blank\" rel=\"noopener\">開發者必備知識 - HTTP認證（HTTP Authentication）</a></p>\n<p><a href=\"https://stackoverflow.com/questions/9534602/what-is-the-difference-between-digest-and-basic-authentication\" target=\"_blank\" rel=\"noopener\">StackOverflow</a></p>\n"},{"title":"什麼是 migration 檔案?","catalog":true,"toc_nav_num":true,"date":"2019-09-25T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1569269845885-bbf0cdbbc9b1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Rails"],"updateDate":"2019-09-25T14:26:24.000Z","_content":"\n\n## 為什麼需要 migration?\n今天又來到一篇新的[文章](https://guides.rubyonrails.org/active_record_migrations.html)囉!\n這篇的主題叫做 Active Record Migrations\n那這是什麼呢？\n\n簡單來說就是資料庫改變的歷史紀錄\n\n在過去，資料庫的改變是無跡可循的，今天要更改資料庫結構就是直接進去 SQL 介面操作，之後的人完全不知道這個表以前曾經有過什麼欄位被移除，或者什麼欄位是後來新增的\n\n有了這個 migration 檔案之後，我們就可以根據這些檔案知道從以前到現在，資料庫結構做了怎樣的變動\n***\n## 如何新增 migration 檔案\n首先要知道怎麼新增一個 migration 檔案，我們幾乎都會用指令來新增：\n```bash\nrails g migration create_candidates_table\n```\n上面的指令會生出下面的檔案內容\n```ruby\nclass CreateCandidatesTable < ActiveRecord::Migration[5.0]\n  def change\n  end\nend\n```\n為什麼我們幾乎都用指令來新增呢？主要是因為 migration 的檔名長得像這樣：\n```\n20190819031945_create_candidates\n```\n前面的時間會是生出這個檔案當下的時間，Rails 會根據這個時間判斷 migration 的順序，每次要自己做這個時間戳記實在有點麻煩而且自己手動寫還很有可能打錯，不覺得嗎？\n\n除了這個最基本的新增，我們可以使用有點魔法的用法：\n\n```\nrails generate migration AddVotesToCandidates votes:integer\n```\n這個指令可以生出以下檔案內容\n```ruby\nclass AddVotesToProducts < ActiveRecord::Migration[5.0]\n  def change\n    add_column :candidates, :votes, :integer\n  end\nend\n```\n可以看到，竟然裡面內容會自己跑出 `add_column` 的完整指令，這是因為 rails 會去看指令的關鍵字： Add 跟 To 跟 Candidates，靠這些猜出我們想做的事情\n\n類似的指令也可以用在去除欄位 / 新增表格 / 新增 reference 欄位 / 新增 join table 等等，再請去翻閱文件內容了~\n\n\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/active_record_migrations.html)\n\n[談Migration概念與用法](https://medium.com/@weilihmen/ruby-on-rails-%E8%AB%87migration%E6%A6%82%E5%BF%B5%E8%88%87%E7%94%A8%E6%B3%95-22a52714f51f)\n\n\n\n\n","source":"_posts/2019-09-25-day19.md","raw":"---\ntitle: \"什麼是 migration 檔案?\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-25 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1569269845885-bbf0cdbbc9b1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-25 22:26:24\n# top: 1\n\n---\n\n\n## 為什麼需要 migration?\n今天又來到一篇新的[文章](https://guides.rubyonrails.org/active_record_migrations.html)囉!\n這篇的主題叫做 Active Record Migrations\n那這是什麼呢？\n\n簡單來說就是資料庫改變的歷史紀錄\n\n在過去，資料庫的改變是無跡可循的，今天要更改資料庫結構就是直接進去 SQL 介面操作，之後的人完全不知道這個表以前曾經有過什麼欄位被移除，或者什麼欄位是後來新增的\n\n有了這個 migration 檔案之後，我們就可以根據這些檔案知道從以前到現在，資料庫結構做了怎樣的變動\n***\n## 如何新增 migration 檔案\n首先要知道怎麼新增一個 migration 檔案，我們幾乎都會用指令來新增：\n```bash\nrails g migration create_candidates_table\n```\n上面的指令會生出下面的檔案內容\n```ruby\nclass CreateCandidatesTable < ActiveRecord::Migration[5.0]\n  def change\n  end\nend\n```\n為什麼我們幾乎都用指令來新增呢？主要是因為 migration 的檔名長得像這樣：\n```\n20190819031945_create_candidates\n```\n前面的時間會是生出這個檔案當下的時間，Rails 會根據這個時間判斷 migration 的順序，每次要自己做這個時間戳記實在有點麻煩而且自己手動寫還很有可能打錯，不覺得嗎？\n\n除了這個最基本的新增，我們可以使用有點魔法的用法：\n\n```\nrails generate migration AddVotesToCandidates votes:integer\n```\n這個指令可以生出以下檔案內容\n```ruby\nclass AddVotesToProducts < ActiveRecord::Migration[5.0]\n  def change\n    add_column :candidates, :votes, :integer\n  end\nend\n```\n可以看到，竟然裡面內容會自己跑出 `add_column` 的完整指令，這是因為 rails 會去看指令的關鍵字： Add 跟 To 跟 Candidates，靠這些猜出我們想做的事情\n\n類似的指令也可以用在去除欄位 / 新增表格 / 新增 reference 欄位 / 新增 join table 等等，再請去翻閱文件內容了~\n\n\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/active_record_migrations.html)\n\n[談Migration概念與用法](https://medium.com/@weilihmen/ruby-on-rails-%E8%AB%87migration%E6%A6%82%E5%BF%B5%E8%88%87%E7%94%A8%E6%B3%95-22a52714f51f)\n\n\n\n\n","slug":"2019-09-25-day19","published":1,"updated":"2019-11-22T06:49:28.518Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0eub00112ob1ygqscbrd","content":"<h2 id=\"為什麼需要-migration\">為什麼需要 migration?</h2>\n<p>今天又來到一篇新的<a href=\"https://guides.rubyonrails.org/active_record_migrations.html\" target=\"_blank\" rel=\"noopener\">文章</a>囉!<br>\n這篇的主題叫做 Active Record Migrations<br>\n那這是什麼呢？</p>\n<p>簡單來說就是資料庫改變的歷史紀錄</p>\n<p>在過去，資料庫的改變是無跡可循的，今天要更改資料庫結構就是直接進去 SQL 介面操作，之後的人完全不知道這個表以前曾經有過什麼欄位被移除，或者什麼欄位是後來新增的</p>\n<p>有了這個 migration 檔案之後，我們就可以根據這些檔案知道從以前到現在，資料庫結構做了怎樣的變動</p>\n<hr>\n<h2 id=\"如何新增-migration-檔案\">如何新增 migration 檔案</h2>\n<p>首先要知道怎麼新增一個 migration 檔案，我們幾乎都會用指令來新增：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails g migration create_candidates_table</span><br></pre></td></tr></table></figure>\n<p>上面的指令會生出下面的檔案內容</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CreateCandidatesTable</span> &lt; ActiveRecord::Migration[5.0]</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">change</span></span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>為什麼我們幾乎都用指令來新增呢？主要是因為 migration 的檔名長得像這樣：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">20190819031945_create_candidates</span><br></pre></td></tr></table></figure>\n<p>前面的時間會是生出這個檔案當下的時間，Rails 會根據這個時間判斷 migration 的順序，每次要自己做這個時間戳記實在有點麻煩而且自己手動寫還很有可能打錯，不覺得嗎？</p>\n<p>除了這個最基本的新增，我們可以使用有點魔法的用法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails generate migration AddVotesToCandidates votes:integer</span><br></pre></td></tr></table></figure>\n<p>這個指令可以生出以下檔案內容</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AddVotesToProducts</span> &lt; ActiveRecord::Migration[5.0]</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">change</span></span></span><br><span class=\"line\">    add_column <span class=\"symbol\">:candidates</span>, <span class=\"symbol\">:votes</span>, <span class=\"symbol\">:integer</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>可以看到，竟然裡面內容會自己跑出 <code>add_column</code> 的完整指令，這是因為 rails 會去看指令的關鍵字： Add 跟 To 跟 Candidates，靠這些猜出我們想做的事情</p>\n<p>類似的指令也可以用在去除欄位 / 新增表格 / 新增 reference 欄位 / 新增 join table 等等，再請去翻閱文件內容了~</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/active_record_migrations.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n<p><a href=\"https://medium.com/@weilihmen/ruby-on-rails-%E8%AB%87migration%E6%A6%82%E5%BF%B5%E8%88%87%E7%94%A8%E6%B3%95-22a52714f51f\" target=\"_blank\" rel=\"noopener\">談Migration概念與用法</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2>為什麼需要 migration?</h2>\n<p>今天又來到一篇新的<a href=\"https://guides.rubyonrails.org/active_record_migrations.html\" target=\"_blank\" rel=\"noopener\">文章</a>囉!<br>\n這篇的主題叫做 Active Record Migrations<br>\n那這是什麼呢？</p>\n<p>簡單來說就是資料庫改變的歷史紀錄</p>\n<p>在過去，資料庫的改變是無跡可循的，今天要更改資料庫結構就是直接進去 SQL 介面操作，之後的人完全不知道這個表以前曾經有過什麼欄位被移除，或者什麼欄位是後來新增的</p>\n<p>有了這個 migration 檔案之後，我們就可以根據這些檔案知道從以前到現在，資料庫結構做了怎樣的變動</p>\n<hr>\n<h2>如何新增 migration 檔案</h2>\n<p>首先要知道怎麼新增一個 migration 檔案，我們幾乎都會用指令來新增：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails g migration create_candidates_table</span><br></pre></td></tr></table></figure>\n<p>上面的指令會生出下面的檔案內容</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CreateCandidatesTable</span> &lt; ActiveRecord::Migration[5.0]</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">change</span></span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>為什麼我們幾乎都用指令來新增呢？主要是因為 migration 的檔名長得像這樣：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">20190819031945_create_candidates</span><br></pre></td></tr></table></figure>\n<p>前面的時間會是生出這個檔案當下的時間，Rails 會根據這個時間判斷 migration 的順序，每次要自己做這個時間戳記實在有點麻煩而且自己手動寫還很有可能打錯，不覺得嗎？</p>\n<p>除了這個最基本的新增，我們可以使用有點魔法的用法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails generate migration AddVotesToCandidates votes:integer</span><br></pre></td></tr></table></figure>\n<p>這個指令可以生出以下檔案內容</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AddVotesToProducts</span> &lt; ActiveRecord::Migration[5.0]</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">change</span></span></span><br><span class=\"line\">    add_column <span class=\"symbol\">:candidates</span>, <span class=\"symbol\">:votes</span>, <span class=\"symbol\">:integer</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>可以看到，竟然裡面內容會自己跑出 <code>add_column</code> 的完整指令，這是因為 rails 會去看指令的關鍵字： Add 跟 To 跟 Candidates，靠這些猜出我們想做的事情</p>\n<p>類似的指令也可以用在去除欄位 / 新增表格 / 新增 reference 欄位 / 新增 join table 等等，再請去翻閱文件內容了~</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/active_record_migrations.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n<p><a href=\"https://medium.com/@weilihmen/ruby-on-rails-%E8%AB%87migration%E6%A6%82%E5%BF%B5%E8%88%87%E7%94%A8%E6%B3%95-22a52714f51f\" target=\"_blank\" rel=\"noopener\">談Migration概念與用法</a></p>\n"},{"title":"Rails 中的 public 檔案與捕捉例外","catalog":true,"toc_nav_num":true,"date":"2019-09-24T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1562499332-64827643864f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Rails"],"updateDate":"2019-09-24T14:26:24.000Z","_content":"\n## public 檔案 (ex. 404 / 500 )\n今天講到[這篇](https://guides.rubyonrails.org/action_controller_overview.html)的第 14 章\n\n大家一定有經驗看到 404 Not Found 這幾個大字在你的螢幕上出現吧，我們今天要講的就跟這有關！\n\n在 Rails 的系統中預設，如果有個遠端的 request 過來，但依循路徑找不到指定的網頁，會出現 \"404 Not Found\" 的頁面，如果是其他錯誤則會出現 \"500 Server Error\" 的頁面\n\n那麼這些頁面藏在哪裡呢？請看下圖～\n![](https://i.imgur.com/weNYSIl.png)\n燈燈！答案揭曉！他們就藏在專案的  public 資料夾裡面\n\n既然他們本身是檔案，表示你也可以客製化這些頁面的內容，讓別人進來你頁面找不到內容時不再是醜醜的 404 not found 幾個字而已了！\n\n![](https://i.imgur.com/cxhGV5D.png)\n直接在網址加上 404 檔案的路徑可以直接連到頁面，不用更改 routes 檔案喔！也可以更改檔案裡面的內容\n\n另外，在 public 資料夾的檔案有個特性是，不需要路徑設定就可以顯示出內容，為什麼要這樣設計呢？\n\n想想以下情境：如果今天有個人要找頁面找不到，伺服器請他去找 404 頁面，結果又因為沒有設定 404 的路徑，又再次找不到頁面，伺服器又再請他去找 404 頁面... 這樣不就陷入了無窮迴圈了！？因此在 public 資料夾內的檔案才會設計成不需要路徑設定也能顯示內容!\n***\n## Rescue\n我們也可以盡量不讓這種伺服器錯誤發生，對可以預期到的錯誤或例外先捕捉做處理\n\n使用的方式是把出現的錯誤訊息放在 `rescue_from` 後面，然後把要做的事情放在 `with` 這個 option 後面\n\n```ruby\n#application_controller.rb\nclass ApplicationController < ActionController::Base\n  rescue_from ActiveRecord::RecordNotFound, with: :not_found_site\n\n  private\n  def not_found_site\n    render plain: \"404 Not Found\",\n           status: :not_found\n  end\nend\n```\n在這例子中，使用一個方法接在 with 後面，除了方法外也是可以使用 Proc 喔！\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/action_controller_overview.html)\n\n\n","source":"_posts/2019-09-24-day18.md","raw":"---\ntitle: \"Rails 中的 public 檔案與捕捉例外\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-24 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1562499332-64827643864f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-24 22:26:24\n# top: 1\n\n---\n\n## public 檔案 (ex. 404 / 500 )\n今天講到[這篇](https://guides.rubyonrails.org/action_controller_overview.html)的第 14 章\n\n大家一定有經驗看到 404 Not Found 這幾個大字在你的螢幕上出現吧，我們今天要講的就跟這有關！\n\n在 Rails 的系統中預設，如果有個遠端的 request 過來，但依循路徑找不到指定的網頁，會出現 \"404 Not Found\" 的頁面，如果是其他錯誤則會出現 \"500 Server Error\" 的頁面\n\n那麼這些頁面藏在哪裡呢？請看下圖～\n![](https://i.imgur.com/weNYSIl.png)\n燈燈！答案揭曉！他們就藏在專案的  public 資料夾裡面\n\n既然他們本身是檔案，表示你也可以客製化這些頁面的內容，讓別人進來你頁面找不到內容時不再是醜醜的 404 not found 幾個字而已了！\n\n![](https://i.imgur.com/cxhGV5D.png)\n直接在網址加上 404 檔案的路徑可以直接連到頁面，不用更改 routes 檔案喔！也可以更改檔案裡面的內容\n\n另外，在 public 資料夾的檔案有個特性是，不需要路徑設定就可以顯示出內容，為什麼要這樣設計呢？\n\n想想以下情境：如果今天有個人要找頁面找不到，伺服器請他去找 404 頁面，結果又因為沒有設定 404 的路徑，又再次找不到頁面，伺服器又再請他去找 404 頁面... 這樣不就陷入了無窮迴圈了！？因此在 public 資料夾內的檔案才會設計成不需要路徑設定也能顯示內容!\n***\n## Rescue\n我們也可以盡量不讓這種伺服器錯誤發生，對可以預期到的錯誤或例外先捕捉做處理\n\n使用的方式是把出現的錯誤訊息放在 `rescue_from` 後面，然後把要做的事情放在 `with` 這個 option 後面\n\n```ruby\n#application_controller.rb\nclass ApplicationController < ActionController::Base\n  rescue_from ActiveRecord::RecordNotFound, with: :not_found_site\n\n  private\n  def not_found_site\n    render plain: \"404 Not Found\",\n           status: :not_found\n  end\nend\n```\n在這例子中，使用一個方法接在 with 後面，除了方法外也是可以使用 Proc 喔！\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/action_controller_overview.html)\n\n\n","slug":"2019-09-24-day18","published":1,"updated":"2019-11-22T06:48:59.751Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0euc00132ob10ng37w16","content":"<h2 id=\"public-檔案-ex-404-500\">public 檔案 (ex. 404 / 500 )</h2>\n<p>今天講到<a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">這篇</a>的第 14 章</p>\n<p>大家一定有經驗看到 404 Not Found 這幾個大字在你的螢幕上出現吧，我們今天要講的就跟這有關！</p>\n<p>在 Rails 的系統中預設，如果有個遠端的 request 過來，但依循路徑找不到指定的網頁，會出現 “404 Not Found” 的頁面，如果是其他錯誤則會出現 “500 Server Error” 的頁面</p>\n<p>那麼這些頁面藏在哪裡呢？請看下圖～<br>\n<img src=\"https://i.imgur.com/weNYSIl.png\" alt=\"\"><br>\n燈燈！答案揭曉！他們就藏在專案的  public 資料夾裡面</p>\n<p>既然他們本身是檔案，表示你也可以客製化這些頁面的內容，讓別人進來你頁面找不到內容時不再是醜醜的 404 not found 幾個字而已了！</p>\n<p><img src=\"https://i.imgur.com/cxhGV5D.png\" alt=\"\"><br>\n直接在網址加上 404 檔案的路徑可以直接連到頁面，不用更改 routes 檔案喔！也可以更改檔案裡面的內容</p>\n<p>另外，在 public 資料夾的檔案有個特性是，不需要路徑設定就可以顯示出內容，為什麼要這樣設計呢？</p>\n<p>想想以下情境：如果今天有個人要找頁面找不到，伺服器請他去找 404 頁面，結果又因為沒有設定 404 的路徑，又再次找不到頁面，伺服器又再請他去找 404 頁面… 這樣不就陷入了無窮迴圈了！？因此在 public 資料夾內的檔案才會設計成不需要路徑設定也能顯示內容!</p>\n<hr>\n<h2 id=\"rescue\">Rescue</h2>\n<p>我們也可以盡量不讓這種伺服器錯誤發生，對可以預期到的錯誤或例外先捕捉做處理</p>\n<p>使用的方式是把出現的錯誤訊息放在 <code>rescue_from</code> 後面，然後把要做的事情放在 <code>with</code> 這個 option 後面</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#application_controller.rb</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationController</span> &lt; ActionController::Base</span></span><br><span class=\"line\">  rescue_from ActiveRecord::RecordNotFound, <span class=\"symbol\">with:</span> <span class=\"symbol\">:not_found_site</span></span><br><span class=\"line\"></span><br><span class=\"line\">  private</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">not_found_site</span></span></span><br><span class=\"line\">    render <span class=\"symbol\">plain:</span> <span class=\"string\">\"404 Not Found\"</span>,</span><br><span class=\"line\">           <span class=\"symbol\">status:</span> <span class=\"symbol\">:not_found</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>在這例子中，使用一個方法接在 with 後面，除了方法外也是可以使用 Proc 喔！</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2>public 檔案 (ex. 404 / 500 )</h2>\n<p>今天講到<a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">這篇</a>的第 14 章</p>\n<p>大家一定有經驗看到 404 Not Found 這幾個大字在你的螢幕上出現吧，我們今天要講的就跟這有關！</p>\n<p>在 Rails 的系統中預設，如果有個遠端的 request 過來，但依循路徑找不到指定的網頁，會出現 “404 Not Found” 的頁面，如果是其他錯誤則會出現 “500 Server Error” 的頁面</p>\n<p>那麼這些頁面藏在哪裡呢？請看下圖～<br>\n<img src=\"https://i.imgur.com/weNYSIl.png\" alt=\"\"><br>\n燈燈！答案揭曉！他們就藏在專案的  public 資料夾裡面</p>\n<p>既然他們本身是檔案，表示你也可以客製化這些頁面的內容，讓別人進來你頁面找不到內容時不再是醜醜的 404 not found 幾個字而已了！</p>\n<p><img src=\"https://i.imgur.com/cxhGV5D.png\" alt=\"\"><br>\n直接在網址加上 404 檔案的路徑可以直接連到頁面，不用更改 routes 檔案喔！也可以更改檔案裡面的內容</p>\n<p>另外，在 public 資料夾的檔案有個特性是，不需要路徑設定就可以顯示出內容，為什麼要這樣設計呢？</p>\n<p>想想以下情境：如果今天有個人要找頁面找不到，伺服器請他去找 404 頁面，結果又因為沒有設定 404 的路徑，又再次找不到頁面，伺服器又再請他去找 404 頁面… 這樣不就陷入了無窮迴圈了！？因此在 public 資料夾內的檔案才會設計成不需要路徑設定也能顯示內容!</p>\n<hr>\n<h2>Rescue</h2>\n<p>我們也可以盡量不讓這種伺服器錯誤發生，對可以預期到的錯誤或例外先捕捉做處理</p>\n<p>使用的方式是把出現的錯誤訊息放在 <code>rescue_from</code> 後面，然後把要做的事情放在 <code>with</code> 這個 option 後面</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#application_controller.rb</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationController</span> &lt; ActionController::Base</span></span><br><span class=\"line\">  rescue_from ActiveRecord::RecordNotFound, <span class=\"symbol\">with:</span> <span class=\"symbol\">:not_found_site</span></span><br><span class=\"line\"></span><br><span class=\"line\">  private</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">not_found_site</span></span></span><br><span class=\"line\">    render <span class=\"symbol\">plain:</span> <span class=\"string\">\"404 Not Found\"</span>,</span><br><span class=\"line\">           <span class=\"symbol\">status:</span> <span class=\"symbol\">:not_found</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>在這例子中，使用一個方法接在 with 後面，除了方法外也是可以使用 Proc 喔！</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/action_controller_overview.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n"},{"title":"寫 migration 檔內容","catalog":true,"toc_nav_num":true,"date":"2019-09-26T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1569191086551-b3606745884f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Rails"],"updateDate":"2019-09-26T14:26:24.000Z","_content":"\n## Writing migrations\n\n上一篇文章講的是如何製作 migration 檔案，這次要來講的是如何寫裡面的內容， Rails guide 裡面提到很多方法，我會把比較常使用的寫下來，詳細內容請看[這裡](https://guides.rubyonrails.org/active_record_migrations.html)，另外下面的範例也是來自 Rails Guide\n\n1. **Create table**\n\n如果是要製作一個表格，我們可以直接在下面放欄位的名字\n``` ruby\ncreate_table :users do |t|\n  t.string :name\nend\n```\n這個檔案只要執行 `rails db:migrate` 就會幫我們做出一個 users 的 table，然後裡面有一個名字的欄位，格式是 string\n\n要注意的是每一次生出一個 table 他都會自動幫我們生出一個叫做 id 的欄位，預設為這個表格的 primary key，如果想要自己指定 primary key 可以用 `:primary_key` 這個選項，或者你不想要 primary key 也可以用 `id:false` 來處理\n\n2. **Change table**\n\n更改表格內容也是一個常見動作\n```ruby\nchange_table :products do |t|\n  t.remove :description, :name\n  t.string :part_number\n  t.index :part_number\n  t.rename :upccode, :upc_code\nend\n```\n上面這個 migration 檔會對 products 表格做幾件事情\n\n1.把 description 跟 name 的欄位拿掉\n2.新增一個 part_name 欄位並加上 index\n3.把 upcode 欄位改成 upc_code 欄位\n\n3. **Change colun**\n\n更改表格欄位也是一個常見動作\n``` ruby\nchange_column :products, :part_number, :text\n```\n上面這個例子是把 products 表格中的 part_name 欄位資料改成使用 text 這個格式儲存\n\n另外 change column 是一個不可逆的指令，主要是因為他並沒有紀錄一開始你的資料格式\n\n如果要可逆的話建議可改成使用 `up` 跟 `down` 的方法，而不是用 `change`，這兩種方法分別寫明當你今天 migrate 的時候執行的是 up 裡面的內容，而如果是 rollback 就是使用 down 裡面的內容\n\n```ruby\nchange_column_null :products, :name, false\nchange_column_default :products, :approved, from: true, to: false\n```\n上面的例子是把 products 表格中的 name 指定為不能是 null 的欄位，下一行是把 approve 這個欄位的初始值設為 false\n\n今天的介紹就先到這邊了，希望可以對英文苦手的初學者有點幫助，但如果要做更複雜的操作還是要去看 Rails Guide 本身的說明或者翻 API 喔～\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/active_record_migrations.html)\n\n\n\n\n","source":"_posts/2019-09-26-day20.md","raw":"---\ntitle: \"寫 migration 檔內容\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-26 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1569191086551-b3606745884f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-26 22:26:24\n# top: 1\n\n---\n\n## Writing migrations\n\n上一篇文章講的是如何製作 migration 檔案，這次要來講的是如何寫裡面的內容， Rails guide 裡面提到很多方法，我會把比較常使用的寫下來，詳細內容請看[這裡](https://guides.rubyonrails.org/active_record_migrations.html)，另外下面的範例也是來自 Rails Guide\n\n1. **Create table**\n\n如果是要製作一個表格，我們可以直接在下面放欄位的名字\n``` ruby\ncreate_table :users do |t|\n  t.string :name\nend\n```\n這個檔案只要執行 `rails db:migrate` 就會幫我們做出一個 users 的 table，然後裡面有一個名字的欄位，格式是 string\n\n要注意的是每一次生出一個 table 他都會自動幫我們生出一個叫做 id 的欄位，預設為這個表格的 primary key，如果想要自己指定 primary key 可以用 `:primary_key` 這個選項，或者你不想要 primary key 也可以用 `id:false` 來處理\n\n2. **Change table**\n\n更改表格內容也是一個常見動作\n```ruby\nchange_table :products do |t|\n  t.remove :description, :name\n  t.string :part_number\n  t.index :part_number\n  t.rename :upccode, :upc_code\nend\n```\n上面這個 migration 檔會對 products 表格做幾件事情\n\n1.把 description 跟 name 的欄位拿掉\n2.新增一個 part_name 欄位並加上 index\n3.把 upcode 欄位改成 upc_code 欄位\n\n3. **Change colun**\n\n更改表格欄位也是一個常見動作\n``` ruby\nchange_column :products, :part_number, :text\n```\n上面這個例子是把 products 表格中的 part_name 欄位資料改成使用 text 這個格式儲存\n\n另外 change column 是一個不可逆的指令，主要是因為他並沒有紀錄一開始你的資料格式\n\n如果要可逆的話建議可改成使用 `up` 跟 `down` 的方法，而不是用 `change`，這兩種方法分別寫明當你今天 migrate 的時候執行的是 up 裡面的內容，而如果是 rollback 就是使用 down 裡面的內容\n\n```ruby\nchange_column_null :products, :name, false\nchange_column_default :products, :approved, from: true, to: false\n```\n上面的例子是把 products 表格中的 name 指定為不能是 null 的欄位，下一行是把 approve 這個欄位的初始值設為 false\n\n今天的介紹就先到這邊了，希望可以對英文苦手的初學者有點幫助，但如果要做更複雜的操作還是要去看 Rails Guide 本身的說明或者翻 API 喔～\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/active_record_migrations.html)\n\n\n\n\n","slug":"2019-09-26-day20","published":1,"updated":"2019-11-22T06:49:51.801Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0eud00152ob1q6f72z7x","content":"<h2 id=\"writing-migrations\">Writing migrations</h2>\n<p>上一篇文章講的是如何製作 migration 檔案，這次要來講的是如何寫裡面的內容， Rails guide 裡面提到很多方法，我會把比較常使用的寫下來，詳細內容請看<a href=\"https://guides.rubyonrails.org/active_record_migrations.html\" target=\"_blank\" rel=\"noopener\">這裡</a>，另外下面的範例也是來自 Rails Guide</p>\n<ol>\n<li><strong>Create table</strong></li>\n</ol>\n<p>如果是要製作一個表格，我們可以直接在下面放欄位的名字</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create_table <span class=\"symbol\">:users</span> <span class=\"keyword\">do</span> <span class=\"params\">|t|</span></span><br><span class=\"line\">  t.string <span class=\"symbol\">:name</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>這個檔案只要執行 <code>rails db:migrate</code> 就會幫我們做出一個 users 的 table，然後裡面有一個名字的欄位，格式是 string</p>\n<p>要注意的是每一次生出一個 table 他都會自動幫我們生出一個叫做 id 的欄位，預設為這個表格的 primary key，如果想要自己指定 primary key 可以用 <code>:primary_key</code> 這個選項，或者你不想要 primary key 也可以用 <code>id:false</code> 來處理</p>\n<ol start=\"2\">\n<li><strong>Change table</strong></li>\n</ol>\n<p>更改表格內容也是一個常見動作</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">change_table <span class=\"symbol\">:products</span> <span class=\"keyword\">do</span> <span class=\"params\">|t|</span></span><br><span class=\"line\">  t.remove <span class=\"symbol\">:description</span>, <span class=\"symbol\">:name</span></span><br><span class=\"line\">  t.string <span class=\"symbol\">:part_number</span></span><br><span class=\"line\">  t.index <span class=\"symbol\">:part_number</span></span><br><span class=\"line\">  t.rename <span class=\"symbol\">:upccode</span>, <span class=\"symbol\">:upc_code</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>上面這個 migration 檔會對 products 表格做幾件事情</p>\n<p>1.把 description 跟 name 的欄位拿掉<br>\n2.新增一個 part_name 欄位並加上 index<br>\n3.把 upcode 欄位改成 upc_code 欄位</p>\n<ol start=\"3\">\n<li><strong>Change colun</strong></li>\n</ol>\n<p>更改表格欄位也是一個常見動作</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">change_column <span class=\"symbol\">:products</span>, <span class=\"symbol\">:part_number</span>, <span class=\"symbol\">:text</span></span><br></pre></td></tr></table></figure>\n<p>上面這個例子是把 products 表格中的 part_name 欄位資料改成使用 text 這個格式儲存</p>\n<p>另外 change column 是一個不可逆的指令，主要是因為他並沒有紀錄一開始你的資料格式</p>\n<p>如果要可逆的話建議可改成使用 <code>up</code> 跟 <code>down</code> 的方法，而不是用 <code>change</code>，這兩種方法分別寫明當你今天 migrate 的時候執行的是 up 裡面的內容，而如果是 rollback 就是使用 down 裡面的內容</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">change_column_null <span class=\"symbol\">:products</span>, <span class=\"symbol\">:name</span>, <span class=\"literal\">false</span></span><br><span class=\"line\">change_column_default <span class=\"symbol\">:products</span>, <span class=\"symbol\">:approved</span>, <span class=\"symbol\">from:</span> <span class=\"literal\">true</span>, <span class=\"symbol\">to:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<p>上面的例子是把 products 表格中的 name 指定為不能是 null 的欄位，下一行是把 approve 這個欄位的初始值設為 false</p>\n<p>今天的介紹就先到這邊了，希望可以對英文苦手的初學者有點幫助，但如果要做更複雜的操作還是要去看 Rails Guide 本身的說明或者翻 API 喔～</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/active_record_migrations.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2>Writing migrations</h2>\n<p>上一篇文章講的是如何製作 migration 檔案，這次要來講的是如何寫裡面的內容， Rails guide 裡面提到很多方法，我會把比較常使用的寫下來，詳細內容請看<a href=\"https://guides.rubyonrails.org/active_record_migrations.html\" target=\"_blank\" rel=\"noopener\">這裡</a>，另外下面的範例也是來自 Rails Guide</p>\n<ol>\n<li><strong>Create table</strong></li>\n</ol>\n<p>如果是要製作一個表格，我們可以直接在下面放欄位的名字</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create_table <span class=\"symbol\">:users</span> <span class=\"keyword\">do</span> <span class=\"params\">|t|</span></span><br><span class=\"line\">  t.string <span class=\"symbol\">:name</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>這個檔案只要執行 <code>rails db:migrate</code> 就會幫我們做出一個 users 的 table，然後裡面有一個名字的欄位，格式是 string</p>\n<p>要注意的是每一次生出一個 table 他都會自動幫我們生出一個叫做 id 的欄位，預設為這個表格的 primary key，如果想要自己指定 primary key 可以用 <code>:primary_key</code> 這個選項，或者你不想要 primary key 也可以用 <code>id:false</code> 來處理</p>\n<ol start=\"2\">\n<li><strong>Change table</strong></li>\n</ol>\n<p>更改表格內容也是一個常見動作</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">change_table <span class=\"symbol\">:products</span> <span class=\"keyword\">do</span> <span class=\"params\">|t|</span></span><br><span class=\"line\">  t.remove <span class=\"symbol\">:description</span>, <span class=\"symbol\">:name</span></span><br><span class=\"line\">  t.string <span class=\"symbol\">:part_number</span></span><br><span class=\"line\">  t.index <span class=\"symbol\">:part_number</span></span><br><span class=\"line\">  t.rename <span class=\"symbol\">:upccode</span>, <span class=\"symbol\">:upc_code</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>上面這個 migration 檔會對 products 表格做幾件事情</p>\n<p>1.把 description 跟 name 的欄位拿掉<br>\n2.新增一個 part_name 欄位並加上 index<br>\n3.把 upcode 欄位改成 upc_code 欄位</p>\n<ol start=\"3\">\n<li><strong>Change colun</strong></li>\n</ol>\n<p>更改表格欄位也是一個常見動作</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">change_column <span class=\"symbol\">:products</span>, <span class=\"symbol\">:part_number</span>, <span class=\"symbol\">:text</span></span><br></pre></td></tr></table></figure>\n<p>上面這個例子是把 products 表格中的 part_name 欄位資料改成使用 text 這個格式儲存</p>\n<p>另外 change column 是一個不可逆的指令，主要是因為他並沒有紀錄一開始你的資料格式</p>\n<p>如果要可逆的話建議可改成使用 <code>up</code> 跟 <code>down</code> 的方法，而不是用 <code>change</code>，這兩種方法分別寫明當你今天 migrate 的時候執行的是 up 裡面的內容，而如果是 rollback 就是使用 down 裡面的內容</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">change_column_null <span class=\"symbol\">:products</span>, <span class=\"symbol\">:name</span>, <span class=\"literal\">false</span></span><br><span class=\"line\">change_column_default <span class=\"symbol\">:products</span>, <span class=\"symbol\">:approved</span>, <span class=\"symbol\">from:</span> <span class=\"literal\">true</span>, <span class=\"symbol\">to:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<p>上面的例子是把 products 表格中的 name 指定為不能是 null 的欄位，下一行是把 approve 這個欄位的初始值設為 false</p>\n<p>今天的介紹就先到這邊了，希望可以對英文苦手的初學者有點幫助，但如果要做更複雜的操作還是要去看 Rails Guide 本身的說明或者翻 API 喔～</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/active_record_migrations.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n"},{"title":"migration 檔的執行 / rollback / 其他動作","catalog":true,"toc_nav_num":true,"date":"2019-09-27T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1569519405700-a44e863bdce4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2090&q=80","catagories":["Rails"],"updateDate":"2019-09-27T14:26:24.000Z","_content":"\n## 執行 migration\n\n當建好 migration 檔案之後，接著還需要執行才會把檔案中的改變做出來喔！\n\n一般來說我們都單純的使用下面這指令來執行\n```bash\nrails db:migrate\n```\n這指令會把所有還沒執行過的 migration 檔案執行一次，另外同時隱藏著更新 db/schema.rb 這個檔案的指令\n\n除此之外，我們還可以指定要更新到哪個版號\n\n```bash\nrails db:migrate VERSION=20190921120000\n```\n如果這個版本比我們目前的版號更後面，他會執行還沒執行過的檔案中的 change 跟 up 內容直到執行完這個 migration 檔為止，在這之後的檔案不執行\n\n如果這個版本比較前面，會執行我們這版本跟這個檔案之間所有 down 的內容，但不包括這個檔案本身\n\n***\n## Rollback migraion\n\n有種狀況也非常常見，那就是我們執行完 migration 檔之後才發現內容有錯，這種情況該怎麼辦？\n\n如果在你還沒推上去 github 之前，這個改變只存在你的本機端，這時候可以用下面這指令\n```bash\nrails db:rollback\n```\n他會回復上一個 migration 的內容(如果是 reversible 的話)，這時候你就可以再去修改 migration 的內容然後再 migrate 一次，但如果你已經推上去 github 則最好不要輕易改 migration 的內容，很可能造成大家的困擾\n\n除此之外我們還可以指定要 rollback 幾步\n\n```bash\nrails db:rollback STEP=3\n```\n***\n## Redo\n另外，還可以用 redo 確認剛剛執行的 migration 檔案是否 reversible\n``` bash\nrails db:migrate:redo\n```\n他會執行一次 rollback 之後再執行一次 migration\n***\n## 執行 migration 的環境\n在某些特定情況下，我們會需要單純執行某個環境的 migration\n``` bash\nrails db:migrate RAILS_ENV=test\n```\n上面這個例子會在測試環境下執行 rails db:migrate\n\n以上這些就是常見的如何操作跟 migration 相關的動作喔！希望對某些初學者有幫助～\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/active_record_migrations.html)\n\n\n\n\n","source":"_posts/2019-09-27-day21.md","raw":"---\ntitle: \"migration 檔的執行 / rollback / 其他動作\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-27 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1569519405700-a44e863bdce4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2090&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-27 22:26:24\n# top: 1\n\n---\n\n## 執行 migration\n\n當建好 migration 檔案之後，接著還需要執行才會把檔案中的改變做出來喔！\n\n一般來說我們都單純的使用下面這指令來執行\n```bash\nrails db:migrate\n```\n這指令會把所有還沒執行過的 migration 檔案執行一次，另外同時隱藏著更新 db/schema.rb 這個檔案的指令\n\n除此之外，我們還可以指定要更新到哪個版號\n\n```bash\nrails db:migrate VERSION=20190921120000\n```\n如果這個版本比我們目前的版號更後面，他會執行還沒執行過的檔案中的 change 跟 up 內容直到執行完這個 migration 檔為止，在這之後的檔案不執行\n\n如果這個版本比較前面，會執行我們這版本跟這個檔案之間所有 down 的內容，但不包括這個檔案本身\n\n***\n## Rollback migraion\n\n有種狀況也非常常見，那就是我們執行完 migration 檔之後才發現內容有錯，這種情況該怎麼辦？\n\n如果在你還沒推上去 github 之前，這個改變只存在你的本機端，這時候可以用下面這指令\n```bash\nrails db:rollback\n```\n他會回復上一個 migration 的內容(如果是 reversible 的話)，這時候你就可以再去修改 migration 的內容然後再 migrate 一次，但如果你已經推上去 github 則最好不要輕易改 migration 的內容，很可能造成大家的困擾\n\n除此之外我們還可以指定要 rollback 幾步\n\n```bash\nrails db:rollback STEP=3\n```\n***\n## Redo\n另外，還可以用 redo 確認剛剛執行的 migration 檔案是否 reversible\n``` bash\nrails db:migrate:redo\n```\n他會執行一次 rollback 之後再執行一次 migration\n***\n## 執行 migration 的環境\n在某些特定情況下，我們會需要單純執行某個環境的 migration\n``` bash\nrails db:migrate RAILS_ENV=test\n```\n上面這個例子會在測試環境下執行 rails db:migrate\n\n以上這些就是常見的如何操作跟 migration 相關的動作喔！希望對某些初學者有幫助～\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/active_record_migrations.html)\n\n\n\n\n","slug":"2019-09-27-day21","published":1,"updated":"2019-11-22T06:50:14.168Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0eue00172ob1yqnetb96","content":"<h2 id=\"執行-migration\">執行 migration</h2>\n<p>當建好 migration 檔案之後，接著還需要執行才會把檔案中的改變做出來喔！</p>\n<p>一般來說我們都單純的使用下面這指令來執行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails db:migrate</span><br></pre></td></tr></table></figure>\n<p>這指令會把所有還沒執行過的 migration 檔案執行一次，另外同時隱藏著更新 db/schema.rb 這個檔案的指令</p>\n<p>除此之外，我們還可以指定要更新到哪個版號</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails db:migrate VERSION=20190921120000</span><br></pre></td></tr></table></figure>\n<p>如果這個版本比我們目前的版號更後面，他會執行還沒執行過的檔案中的 change 跟 up 內容直到執行完這個 migration 檔為止，在這之後的檔案不執行</p>\n<p>如果這個版本比較前面，會執行我們這版本跟這個檔案之間所有 down 的內容，但不包括這個檔案本身</p>\n<hr>\n<h2 id=\"rollback-migraion\">Rollback migraion</h2>\n<p>有種狀況也非常常見，那就是我們執行完 migration 檔之後才發現內容有錯，這種情況該怎麼辦？</p>\n<p>如果在你還沒推上去 github 之前，這個改變只存在你的本機端，這時候可以用下面這指令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails db:rollback</span><br></pre></td></tr></table></figure>\n<p>他會回復上一個 migration 的內容(如果是 reversible 的話)，這時候你就可以再去修改 migration 的內容然後再 migrate 一次，但如果你已經推上去 github 則最好不要輕易改 migration 的內容，很可能造成大家的困擾</p>\n<p>除此之外我們還可以指定要 rollback 幾步</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails db:rollback STEP=3</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"redo\">Redo</h2>\n<p>另外，還可以用 redo 確認剛剛執行的 migration 檔案是否 reversible</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails db:migrate:redo</span><br></pre></td></tr></table></figure>\n<p>他會執行一次 rollback 之後再執行一次 migration</p>\n<hr>\n<h2 id=\"執行-migration-的環境\">執行 migration 的環境</h2>\n<p>在某些特定情況下，我們會需要單純執行某個環境的 migration</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails db:migrate RAILS_ENV=<span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n<p>上面這個例子會在測試環境下執行 rails db:migrate</p>\n<p>以上這些就是常見的如何操作跟 migration 相關的動作喔！希望對某些初學者有幫助～</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/active_record_migrations.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2>執行 migration</h2>\n<p>當建好 migration 檔案之後，接著還需要執行才會把檔案中的改變做出來喔！</p>\n<p>一般來說我們都單純的使用下面這指令來執行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails db:migrate</span><br></pre></td></tr></table></figure>\n<p>這指令會把所有還沒執行過的 migration 檔案執行一次，另外同時隱藏著更新 db/schema.rb 這個檔案的指令</p>\n<p>除此之外，我們還可以指定要更新到哪個版號</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails db:migrate VERSION=20190921120000</span><br></pre></td></tr></table></figure>\n<p>如果這個版本比我們目前的版號更後面，他會執行還沒執行過的檔案中的 change 跟 up 內容直到執行完這個 migration 檔為止，在這之後的檔案不執行</p>\n<p>如果這個版本比較前面，會執行我們這版本跟這個檔案之間所有 down 的內容，但不包括這個檔案本身</p>\n<hr>\n<h2>Rollback migraion</h2>\n<p>有種狀況也非常常見，那就是我們執行完 migration 檔之後才發現內容有錯，這種情況該怎麼辦？</p>\n<p>如果在你還沒推上去 github 之前，這個改變只存在你的本機端，這時候可以用下面這指令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails db:rollback</span><br></pre></td></tr></table></figure>\n<p>他會回復上一個 migration 的內容(如果是 reversible 的話)，這時候你就可以再去修改 migration 的內容然後再 migrate 一次，但如果你已經推上去 github 則最好不要輕易改 migration 的內容，很可能造成大家的困擾</p>\n<p>除此之外我們還可以指定要 rollback 幾步</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails db:rollback STEP=3</span><br></pre></td></tr></table></figure>\n<hr>\n<h2>Redo</h2>\n<p>另外，還可以用 redo 確認剛剛執行的 migration 檔案是否 reversible</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails db:migrate:redo</span><br></pre></td></tr></table></figure>\n<p>他會執行一次 rollback 之後再執行一次 migration</p>\n<hr>\n<h2>執行 migration 的環境</h2>\n<p>在某些特定情況下，我們會需要單純執行某個環境的 migration</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails db:migrate RAILS_ENV=<span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n<p>上面這個例子會在測試環境下執行 rails db:migrate</p>\n<p>以上這些就是常見的如何操作跟 migration 相關的動作喔！希望對某些初學者有幫助～</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/active_record_migrations.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n"},{"title":"Active Storage 使用","catalog":true,"toc_nav_num":true,"date":"2019-09-28T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1569521579231-9d110a30a023?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1951&q=80","catagories":["Rails"],"updateDate":"2019-09-28T14:26:24.000Z","_content":"\n## Active Storage\n這是一個 Rails 5.2 版本之後才推出的新功能，而且在製作專案的時候也會用到，因此這次才來看看這個功能如何使用\nRails Guide 的內容請看[這邊](https://guides.rubyonrails.org/active_storage_overview.html) \n\n要使用這個功能，一開始就要先執行兩個指令\n```bash\nrails active_storage:install\nrails db:migrate\n```\n這個動作會產生兩個 table ： `active_storage_blobs` 跟 `active_storage_attachments`，其中 `active_storage_attachments` 會儲存相對應 class name，所以如果有修改的話，也記得額外做一個 migration 檔改變這表格的相對應內容\n\n```ruby\n# config/environments/development.rb\n# config/environments/production.rb\nconfig.active_storage.service = :local\n\n# config/storage.yml\n\nlocal:\n  service: Disk\n  root: <%= Rails.root.join(\"storage\") %>\n```\n做完這些前置作業後差不多可以來動工了\n\n附加檔案又分成一個 model 有多個檔案跟一個 model 有一個檔案，以下一一來介紹\n\n## 一個 model 附加單一檔案\n\n如果你想要在 User model 可以新增圖片的話，只需要加上這一行\n```ruby\nhas_one_attached :avatar\n```\n其中這個 avatar 可以把它想像成是 User 有個照片的虛擬欄位叫做 avatar\n\n在表單需要上傳的時候這樣表示：\n```html\n<%= form.file_field :avatar %>\n```\n然後 Strong parameter 的部分不要忘記修改，記得加上這個虛擬欄位\n```ruby\nparams.require(:user).permit(:email_address, :password, :avatar)\n```\n用 attach 這個方法把檔案或照片加到 User 身上\n```ruby\nuser.avatar.attach(params[:avatar])\n```\n另外還可以用 `attached?` 這個方法判斷是不是有附加檔案\n\n## 一個 model 附加多檔案\n\n如果是多個檔案或照片的話，用法大同小異，在 model 檔案加上這行：\n```ruby\nhas_many_attached :avatars\n```\n然後在 Strong parameter 的使用上改成陣列形式\n```ruby\nparams.require(:message).permit(:title, :content, avatars: [])\n```\n***\n## 圖片顯示及變形\n\n如果附加的是圖片，然後需要顯示出來\n在目前的版本，需要搭配 MiniMagick 這套件來使用\n```ruby\n#gemfile\ngem 'mini_magick', '~> 4.5', '>= 4.5.1'\n```\n然後在顯示的頁面使用 `variant` 方法來改變尺寸\n```html\n<%= image_tag user.avatar.variant(resize_to_limit: [100, 100]) %>\n```\n***\n## 刪除 / 連結到上傳檔案\n要刪除檔案的話，使用 `purge` 這個方法\n```ruby\nuser.avatar.purge\n```\n有幾個方式可以連結到這個檔案本身:\n\n```ruby\n#直接把連結指向這檔案\nurl_for(user.avatar)\n#下載檔案的連結\nrails_blob_path(user.avatar, disposition: \"attachment\")\n#如果要在 controller 跟 view 以外的部分連結，需使用絕對路徑\nRails.application.routes.url_helpers.rails_blob_path(user.avatar, only_path: true)\n```\n\n以上是 Active Storage 的介紹～ 今天的內容就先到這邊囉！\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/active_storage_overview.html)\n\n[Active Storage 開箱文](https://5xruby.tw/posts/active-storage-review/)\n\n\n\n","source":"_posts/2019-09-28-day22.md","raw":"---\ntitle: \"Active Storage 使用\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-28 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1569521579231-9d110a30a023?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1951&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-28 22:26:24\n# top: 1\n\n---\n\n## Active Storage\n這是一個 Rails 5.2 版本之後才推出的新功能，而且在製作專案的時候也會用到，因此這次才來看看這個功能如何使用\nRails Guide 的內容請看[這邊](https://guides.rubyonrails.org/active_storage_overview.html) \n\n要使用這個功能，一開始就要先執行兩個指令\n```bash\nrails active_storage:install\nrails db:migrate\n```\n這個動作會產生兩個 table ： `active_storage_blobs` 跟 `active_storage_attachments`，其中 `active_storage_attachments` 會儲存相對應 class name，所以如果有修改的話，也記得額外做一個 migration 檔改變這表格的相對應內容\n\n```ruby\n# config/environments/development.rb\n# config/environments/production.rb\nconfig.active_storage.service = :local\n\n# config/storage.yml\n\nlocal:\n  service: Disk\n  root: <%= Rails.root.join(\"storage\") %>\n```\n做完這些前置作業後差不多可以來動工了\n\n附加檔案又分成一個 model 有多個檔案跟一個 model 有一個檔案，以下一一來介紹\n\n## 一個 model 附加單一檔案\n\n如果你想要在 User model 可以新增圖片的話，只需要加上這一行\n```ruby\nhas_one_attached :avatar\n```\n其中這個 avatar 可以把它想像成是 User 有個照片的虛擬欄位叫做 avatar\n\n在表單需要上傳的時候這樣表示：\n```html\n<%= form.file_field :avatar %>\n```\n然後 Strong parameter 的部分不要忘記修改，記得加上這個虛擬欄位\n```ruby\nparams.require(:user).permit(:email_address, :password, :avatar)\n```\n用 attach 這個方法把檔案或照片加到 User 身上\n```ruby\nuser.avatar.attach(params[:avatar])\n```\n另外還可以用 `attached?` 這個方法判斷是不是有附加檔案\n\n## 一個 model 附加多檔案\n\n如果是多個檔案或照片的話，用法大同小異，在 model 檔案加上這行：\n```ruby\nhas_many_attached :avatars\n```\n然後在 Strong parameter 的使用上改成陣列形式\n```ruby\nparams.require(:message).permit(:title, :content, avatars: [])\n```\n***\n## 圖片顯示及變形\n\n如果附加的是圖片，然後需要顯示出來\n在目前的版本，需要搭配 MiniMagick 這套件來使用\n```ruby\n#gemfile\ngem 'mini_magick', '~> 4.5', '>= 4.5.1'\n```\n然後在顯示的頁面使用 `variant` 方法來改變尺寸\n```html\n<%= image_tag user.avatar.variant(resize_to_limit: [100, 100]) %>\n```\n***\n## 刪除 / 連結到上傳檔案\n要刪除檔案的話，使用 `purge` 這個方法\n```ruby\nuser.avatar.purge\n```\n有幾個方式可以連結到這個檔案本身:\n\n```ruby\n#直接把連結指向這檔案\nurl_for(user.avatar)\n#下載檔案的連結\nrails_blob_path(user.avatar, disposition: \"attachment\")\n#如果要在 controller 跟 view 以外的部分連結，需使用絕對路徑\nRails.application.routes.url_helpers.rails_blob_path(user.avatar, only_path: true)\n```\n\n以上是 Active Storage 的介紹～ 今天的內容就先到這邊囉！\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/active_storage_overview.html)\n\n[Active Storage 開箱文](https://5xruby.tw/posts/active-storage-review/)\n\n\n\n","slug":"2019-09-28-day22","published":1,"updated":"2019-11-22T06:50:37.718Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0eug00192ob1vhxf9nyx","content":"<h2 id=\"active-storage\">Active Storage</h2>\n<p>這是一個 Rails 5.2 版本之後才推出的新功能，而且在製作專案的時候也會用到，因此這次才來看看這個功能如何使用<br>\nRails Guide 的內容請看<a href=\"https://guides.rubyonrails.org/active_storage_overview.html\" target=\"_blank\" rel=\"noopener\">這邊</a></p>\n<p>要使用這個功能，一開始就要先執行兩個指令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails active_storage:install</span><br><span class=\"line\">rails db:migrate</span><br></pre></td></tr></table></figure>\n<p>這個動作會產生兩個 table ： <code>active_storage_blobs</code> 跟 <code>active_storage_attachments</code>，其中 <code>active_storage_attachments</code> 會儲存相對應 class name，所以如果有修改的話，也記得額外做一個 migration 檔改變這表格的相對應內容</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># config/environments/development.rb</span></span><br><span class=\"line\"><span class=\"comment\"># config/environments/production.rb</span></span><br><span class=\"line\">config.active_storage.service = <span class=\"symbol\">:local</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># config/storage.yml</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">local:</span></span><br><span class=\"line\">  <span class=\"symbol\">service:</span> Disk</span><br><span class=\"line\">  <span class=\"symbol\">root:</span> &lt;%= Rails.root.join(<span class=\"string\">\"storage\"</span>) %&gt;</span><br></pre></td></tr></table></figure>\n<p>做完這些前置作業後差不多可以來動工了</p>\n<p>附加檔案又分成一個 model 有多個檔案跟一個 model 有一個檔案，以下一一來介紹</p>\n<h2 id=\"一個-model-附加單一檔案\">一個 model 附加單一檔案</h2>\n<p>如果你想要在 User model 可以新增圖片的話，只需要加上這一行</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">has_one_attached <span class=\"symbol\">:avatar</span></span><br></pre></td></tr></table></figure>\n<p>其中這個 avatar 可以把它想像成是 User 有個照片的虛擬欄位叫做 avatar</p>\n<p>在表單需要上傳的時候這樣表示：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">form.file_field</span> <span class=\"attr\">:avatar</span> %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>然後 Strong parameter 的部分不要忘記修改，記得加上這個虛擬欄位</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">params.<span class=\"keyword\">require</span>(<span class=\"symbol\">:user</span>).permit(<span class=\"symbol\">:email_address</span>, <span class=\"symbol\">:password</span>, <span class=\"symbol\">:avatar</span>)</span><br></pre></td></tr></table></figure>\n<p>用 attach 這個方法把檔案或照片加到 User 身上</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user.avatar.attach(params[<span class=\"symbol\">:avatar</span>])</span><br></pre></td></tr></table></figure>\n<p>另外還可以用 <code>attached?</code> 這個方法判斷是不是有附加檔案</p>\n<h2 id=\"一個-model-附加多檔案\">一個 model 附加多檔案</h2>\n<p>如果是多個檔案或照片的話，用法大同小異，在 model 檔案加上這行：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">has_many_attached <span class=\"symbol\">:avatars</span></span><br></pre></td></tr></table></figure>\n<p>然後在 Strong parameter 的使用上改成陣列形式</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">params.<span class=\"keyword\">require</span>(<span class=\"symbol\">:message</span>).permit(<span class=\"symbol\">:title</span>, <span class=\"symbol\">:content</span>, <span class=\"symbol\">avatars:</span> [])</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"圖片顯示及變形\">圖片顯示及變形</h2>\n<p>如果附加的是圖片，然後需要顯示出來<br>\n在目前的版本，需要搭配 MiniMagick 這套件來使用</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#gemfile</span></span><br><span class=\"line\">gem <span class=\"string\">'mini_magick'</span>, <span class=\"string\">'~&gt; 4.5'</span>, <span class=\"string\">'&gt;= 4.5.1'</span></span><br></pre></td></tr></table></figure>\n<p>然後在顯示的頁面使用 <code>variant</code> 方法來改變尺寸</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">image_tag</span> <span class=\"attr\">user.avatar.variant</span>(<span class=\"attr\">resize_to_limit:</span> [<span class=\"attr\">100</span>, <span class=\"attr\">100</span>]) %&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"刪除-連結到上傳檔案\">刪除 / 連結到上傳檔案</h2>\n<p>要刪除檔案的話，使用 <code>purge</code> 這個方法</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user.avatar.purge</span><br></pre></td></tr></table></figure>\n<p>有幾個方式可以連結到這個檔案本身:</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#直接把連結指向這檔案</span></span><br><span class=\"line\">url_for(user.avatar)</span><br><span class=\"line\"><span class=\"comment\">#下載檔案的連結</span></span><br><span class=\"line\">rails_blob_path(user.avatar, <span class=\"symbol\">disposition:</span> <span class=\"string\">\"attachment\"</span>)</span><br><span class=\"line\"><span class=\"comment\">#如果要在 controller 跟 view 以外的部分連結，需使用絕對路徑</span></span><br><span class=\"line\">Rails.application.routes.url_helpers.rails_blob_path(user.avatar, <span class=\"symbol\">only_path:</span> <span class=\"literal\">true</span>)</span><br></pre></td></tr></table></figure>\n<p>以上是 Active Storage 的介紹～ 今天的內容就先到這邊囉！</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/active_storage_overview.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n<p><a href=\"https://5xruby.tw/posts/active-storage-review/\" target=\"_blank\" rel=\"noopener\">Active Storage 開箱文</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2>Active Storage</h2>\n<p>這是一個 Rails 5.2 版本之後才推出的新功能，而且在製作專案的時候也會用到，因此這次才來看看這個功能如何使用<br>\nRails Guide 的內容請看<a href=\"https://guides.rubyonrails.org/active_storage_overview.html\" target=\"_blank\" rel=\"noopener\">這邊</a></p>\n<p>要使用這個功能，一開始就要先執行兩個指令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rails active_storage:install</span><br><span class=\"line\">rails db:migrate</span><br></pre></td></tr></table></figure>\n<p>這個動作會產生兩個 table ： <code>active_storage_blobs</code> 跟 <code>active_storage_attachments</code>，其中 <code>active_storage_attachments</code> 會儲存相對應 class name，所以如果有修改的話，也記得額外做一個 migration 檔改變這表格的相對應內容</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># config/environments/development.rb</span></span><br><span class=\"line\"><span class=\"comment\"># config/environments/production.rb</span></span><br><span class=\"line\">config.active_storage.service = <span class=\"symbol\">:local</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># config/storage.yml</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">local:</span></span><br><span class=\"line\">  <span class=\"symbol\">service:</span> Disk</span><br><span class=\"line\">  <span class=\"symbol\">root:</span> &lt;%= Rails.root.join(<span class=\"string\">\"storage\"</span>) %&gt;</span><br></pre></td></tr></table></figure>\n<p>做完這些前置作業後差不多可以來動工了</p>\n<p>附加檔案又分成一個 model 有多個檔案跟一個 model 有一個檔案，以下一一來介紹</p>\n<h2>一個 model 附加單一檔案</h2>\n<p>如果你想要在 User model 可以新增圖片的話，只需要加上這一行</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">has_one_attached <span class=\"symbol\">:avatar</span></span><br></pre></td></tr></table></figure>\n<p>其中這個 avatar 可以把它想像成是 User 有個照片的虛擬欄位叫做 avatar</p>\n<p>在表單需要上傳的時候這樣表示：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">form.file_field</span> <span class=\"attr\">:avatar</span> %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>然後 Strong parameter 的部分不要忘記修改，記得加上這個虛擬欄位</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">params.<span class=\"keyword\">require</span>(<span class=\"symbol\">:user</span>).permit(<span class=\"symbol\">:email_address</span>, <span class=\"symbol\">:password</span>, <span class=\"symbol\">:avatar</span>)</span><br></pre></td></tr></table></figure>\n<p>用 attach 這個方法把檔案或照片加到 User 身上</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user.avatar.attach(params[<span class=\"symbol\">:avatar</span>])</span><br></pre></td></tr></table></figure>\n<p>另外還可以用 <code>attached?</code> 這個方法判斷是不是有附加檔案</p>\n<h2>一個 model 附加多檔案</h2>\n<p>如果是多個檔案或照片的話，用法大同小異，在 model 檔案加上這行：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">has_many_attached <span class=\"symbol\">:avatars</span></span><br></pre></td></tr></table></figure>\n<p>然後在 Strong parameter 的使用上改成陣列形式</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">params.<span class=\"keyword\">require</span>(<span class=\"symbol\">:message</span>).permit(<span class=\"symbol\">:title</span>, <span class=\"symbol\">:content</span>, <span class=\"symbol\">avatars:</span> [])</span><br></pre></td></tr></table></figure>\n<hr>\n<h2>圖片顯示及變形</h2>\n<p>如果附加的是圖片，然後需要顯示出來<br>\n在目前的版本，需要搭配 MiniMagick 這套件來使用</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#gemfile</span></span><br><span class=\"line\">gem <span class=\"string\">'mini_magick'</span>, <span class=\"string\">'~&gt; 4.5'</span>, <span class=\"string\">'&gt;= 4.5.1'</span></span><br></pre></td></tr></table></figure>\n<p>然後在顯示的頁面使用 <code>variant</code> 方法來改變尺寸</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">image_tag</span> <span class=\"attr\">user.avatar.variant</span>(<span class=\"attr\">resize_to_limit:</span> [<span class=\"attr\">100</span>, <span class=\"attr\">100</span>]) %&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2>刪除 / 連結到上傳檔案</h2>\n<p>要刪除檔案的話，使用 <code>purge</code> 這個方法</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user.avatar.purge</span><br></pre></td></tr></table></figure>\n<p>有幾個方式可以連結到這個檔案本身:</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#直接把連結指向這檔案</span></span><br><span class=\"line\">url_for(user.avatar)</span><br><span class=\"line\"><span class=\"comment\">#下載檔案的連結</span></span><br><span class=\"line\">rails_blob_path(user.avatar, <span class=\"symbol\">disposition:</span> <span class=\"string\">\"attachment\"</span>)</span><br><span class=\"line\"><span class=\"comment\">#如果要在 controller 跟 view 以外的部分連結，需使用絕對路徑</span></span><br><span class=\"line\">Rails.application.routes.url_helpers.rails_blob_path(user.avatar, <span class=\"symbol\">only_path:</span> <span class=\"literal\">true</span>)</span><br></pre></td></tr></table></figure>\n<p>以上是 Active Storage 的介紹～ 今天的內容就先到這邊囉！</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/active_storage_overview.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n<p><a href=\"https://5xruby.tw/posts/active-storage-review/\" target=\"_blank\" rel=\"noopener\">Active Storage 開箱文</a></p>\n"},{"title":"Active Record Validations part 1","catalog":true,"toc_nav_num":true,"date":"2019-09-29T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1554177255-61502b352de3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Rails"],"updateDate":"2019-09-29T14:26:24.000Z","_content":"\n本文章範例跟文字許多引述自 Rails Guide，想參觀的可以看[這裡](https://guides.rubyonrails.org/active_record_validations.html)\n\n## 為什麼需要驗證？\n\n先來說說為什麼需要驗證？ \n因為我們並不想要資料庫裡面存一些沒有用的資料，必須要限定這些資料至少符合特定的標準才允許寫進資料庫\n***\n## 寫驗證前需知道的事\n\n- 在 Rails 中驗證是寫在 model level，如果沒有通過驗證就完全不會碰到資料庫\n\n- `new_record?` 用來確定這筆資料是不是已經寫入資料庫\n\n- 我們也可以用 `valid?` `invalid` 這兩種方法看這個實體是否有效 (在未被寫入之前)\n```ruby\np = Person.new\np.valid?\n#=> false\n```\n\n- 如果用的是 create 或者 update 在 SQL 裡使用的是 `INSERT` 方法，如果是用 `update` 則是 `UPDATE` 方法\n\n- 存入資料庫的方法有下面幾種\n\n```ruby\ncreate\ncreate!\nsave\nsave!\nupdate\nupdate!\n```\n這些驚嘆號方法會導致寫入失敗的話跳出 exception，如果不捕捉的話頁面會壞掉，非驚嘆號版本則不會\n\n在這方法後面我們可以用 `validate: false` 使他繞過驗證，這通常是用在開發的時候，使用時須小心\n```ruby\nsave(validate: false)\n```\n***\n## 看錯誤訊息\n我們在資料無法存入的時候，可以使用 `errors.messages` 看無法存入的原因 \n\n```ruby\nclass Person < ApplicationRecord\n  validates :name, presence: true\nend\n\np = Person.create\np.errors.messages\n# => {name:[\"can't be blank\"]}\n```\n\n***\n## Validation Helpers\nRails 已經寫好一些常用的驗證方法給我們使用，在這些 helpers 後面我們都可以再加上 `:on` 跟 `:message` 這兩種屬性，決定他們要用在哪裡，還有存取失敗的時候會存進怎樣的訊息到 errors 中\n\n### Acceptance\n這種驗證最常用在看完條款，要打勾的那種時候，如果不打勾無法繼續往下\n```ruby\nclass Person < ApplicationRecord\n  validates :terms_of_service, acceptance: true\nend\n```\n### Validates_associated\n在 model 之間互有關聯的時候，有時候會需要確定兩邊都有存入資料才算成功，這時候可以使用這個驗證\n```ruby\nclass Library < ApplicationRecord\n  has_many :books\n  validates_associated :books\nend\n```\n要注意不能兩邊的 model 都寫，不然會進入無窮迴圈\n\n### Confirmation\n這個驗證通常用在需要重複輸入信箱或密碼的時候，驗證你第二次輸入的內容是不是符合一開始的內容\n```ruby\nclass Person < ApplicationRecord\n  validates :email, confirmation: true\nend\n```\n接著我們就可以在 view 的頁面這樣寫\n```html\n\n<%= text_field :person, :email %>\n<%= text_field :person, :email_confirmation %>\n```\n\n### Exclusion\nexclusion 用在限制不讓使用者寫進特定資料\n```ruby\nclass Account < ApplicationRecord\n  validates :subdomain, exclusion: { in: %w(www us ca jp)}\nend\n```\n`in` 這個屬性裡面放陣列，陣列裡面的就是不讓使用者寫進去的資料\n### Format\nformat 用在限制資料的格式，這通常會搭配常規表示法使用\n```ruby\nclass Product < ApplicationRecord\n  validates :legacy_code, format: { with: /\\A[a-zA-Z]+\\z/}\nend\n```\n除了 `with` 這個屬性，我們還可以使用 `without`\n\n### Inclusion\ninclusion 是剛剛 exclusion 的相法，如果內容不包含特定的字就無法寫入\n```ruby\nclass Coffee < ApplicationRecord\n  validates :size, inclusion: { in: %w(small medium large)}\nend\n```\n\n相關的 helpers 還很多，明天會陸續介紹喔！今天就先介紹到這邊～\n\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/active_record_validations.html)\n\n\n\n\n","source":"_posts/2019-09-29-day23.md","raw":"---\ntitle: \"Active Record Validations part 1\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-29 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1554177255-61502b352de3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-29 22:26:24\n# top: 1\n\n---\n\n本文章範例跟文字許多引述自 Rails Guide，想參觀的可以看[這裡](https://guides.rubyonrails.org/active_record_validations.html)\n\n## 為什麼需要驗證？\n\n先來說說為什麼需要驗證？ \n因為我們並不想要資料庫裡面存一些沒有用的資料，必須要限定這些資料至少符合特定的標準才允許寫進資料庫\n***\n## 寫驗證前需知道的事\n\n- 在 Rails 中驗證是寫在 model level，如果沒有通過驗證就完全不會碰到資料庫\n\n- `new_record?` 用來確定這筆資料是不是已經寫入資料庫\n\n- 我們也可以用 `valid?` `invalid` 這兩種方法看這個實體是否有效 (在未被寫入之前)\n```ruby\np = Person.new\np.valid?\n#=> false\n```\n\n- 如果用的是 create 或者 update 在 SQL 裡使用的是 `INSERT` 方法，如果是用 `update` 則是 `UPDATE` 方法\n\n- 存入資料庫的方法有下面幾種\n\n```ruby\ncreate\ncreate!\nsave\nsave!\nupdate\nupdate!\n```\n這些驚嘆號方法會導致寫入失敗的話跳出 exception，如果不捕捉的話頁面會壞掉，非驚嘆號版本則不會\n\n在這方法後面我們可以用 `validate: false` 使他繞過驗證，這通常是用在開發的時候，使用時須小心\n```ruby\nsave(validate: false)\n```\n***\n## 看錯誤訊息\n我們在資料無法存入的時候，可以使用 `errors.messages` 看無法存入的原因 \n\n```ruby\nclass Person < ApplicationRecord\n  validates :name, presence: true\nend\n\np = Person.create\np.errors.messages\n# => {name:[\"can't be blank\"]}\n```\n\n***\n## Validation Helpers\nRails 已經寫好一些常用的驗證方法給我們使用，在這些 helpers 後面我們都可以再加上 `:on` 跟 `:message` 這兩種屬性，決定他們要用在哪裡，還有存取失敗的時候會存進怎樣的訊息到 errors 中\n\n### Acceptance\n這種驗證最常用在看完條款，要打勾的那種時候，如果不打勾無法繼續往下\n```ruby\nclass Person < ApplicationRecord\n  validates :terms_of_service, acceptance: true\nend\n```\n### Validates_associated\n在 model 之間互有關聯的時候，有時候會需要確定兩邊都有存入資料才算成功，這時候可以使用這個驗證\n```ruby\nclass Library < ApplicationRecord\n  has_many :books\n  validates_associated :books\nend\n```\n要注意不能兩邊的 model 都寫，不然會進入無窮迴圈\n\n### Confirmation\n這個驗證通常用在需要重複輸入信箱或密碼的時候，驗證你第二次輸入的內容是不是符合一開始的內容\n```ruby\nclass Person < ApplicationRecord\n  validates :email, confirmation: true\nend\n```\n接著我們就可以在 view 的頁面這樣寫\n```html\n\n<%= text_field :person, :email %>\n<%= text_field :person, :email_confirmation %>\n```\n\n### Exclusion\nexclusion 用在限制不讓使用者寫進特定資料\n```ruby\nclass Account < ApplicationRecord\n  validates :subdomain, exclusion: { in: %w(www us ca jp)}\nend\n```\n`in` 這個屬性裡面放陣列，陣列裡面的就是不讓使用者寫進去的資料\n### Format\nformat 用在限制資料的格式，這通常會搭配常規表示法使用\n```ruby\nclass Product < ApplicationRecord\n  validates :legacy_code, format: { with: /\\A[a-zA-Z]+\\z/}\nend\n```\n除了 `with` 這個屬性，我們還可以使用 `without`\n\n### Inclusion\ninclusion 是剛剛 exclusion 的相法，如果內容不包含特定的字就無法寫入\n```ruby\nclass Coffee < ApplicationRecord\n  validates :size, inclusion: { in: %w(small medium large)}\nend\n```\n\n相關的 helpers 還很多，明天會陸續介紹喔！今天就先介紹到這邊～\n\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/active_record_validations.html)\n\n\n\n\n","slug":"2019-09-29-day23","published":1,"updated":"2019-11-22T06:51:08.460Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0euh001b2ob1b3t42sxd","content":"<p>本文章範例跟文字許多引述自 Rails Guide，想參觀的可以看<a href=\"https://guides.rubyonrails.org/active_record_validations.html\" target=\"_blank\" rel=\"noopener\">這裡</a></p>\n<h2 id=\"為什麼需要驗證\">為什麼需要驗證？</h2>\n<p>先來說說為什麼需要驗證？<br>\n因為我們並不想要資料庫裡面存一些沒有用的資料，必須要限定這些資料至少符合特定的標準才允許寫進資料庫</p>\n<hr>\n<h2 id=\"寫驗證前需知道的事\">寫驗證前需知道的事</h2>\n<ul>\n<li>\n<p>在 Rails 中驗證是寫在 model level，如果沒有通過驗證就完全不會碰到資料庫</p>\n</li>\n<li>\n<p><code>new_record?</code> 用來確定這筆資料是不是已經寫入資料庫</p>\n</li>\n<li>\n<p>我們也可以用 <code>valid?</code> <code>invalid</code> 這兩種方法看這個實體是否有效 (在未被寫入之前)</p>\n</li>\n</ul>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p = Person.new</span><br><span class=\"line\">p.valid?</span><br><span class=\"line\"><span class=\"comment\">#=&gt; false</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>如果用的是 create 或者 update 在 SQL 裡使用的是 <code>INSERT</code> 方法，如果是用 <code>update</code> 則是 <code>UPDATE</code> 方法</p>\n</li>\n<li>\n<p>存入資料庫的方法有下面幾種</p>\n</li>\n</ul>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create</span><br><span class=\"line\">create!</span><br><span class=\"line\">save</span><br><span class=\"line\">save!</span><br><span class=\"line\">update</span><br><span class=\"line\">update!</span><br></pre></td></tr></table></figure>\n<p>這些驚嘆號方法會導致寫入失敗的話跳出 exception，如果不捕捉的話頁面會壞掉，非驚嘆號版本則不會</p>\n<p>在這方法後面我們可以用 <code>validate: false</code> 使他繞過驗證，這通常是用在開發的時候，使用時須小心</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">save(<span class=\"symbol\">validate:</span> <span class=\"literal\">false</span>)</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"看錯誤訊息\">看錯誤訊息</h2>\n<p>我們在資料無法存入的時候，可以使用 <code>errors.messages</code> 看無法存入的原因</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:name</span>, <span class=\"symbol\">presence:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">p = Person.create</span><br><span class=\"line\">p.errors.messages</span><br><span class=\"line\"><span class=\"comment\"># =&gt; &#123;name:[\"can't be blank\"]&#125;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"validation-helpers\">Validation Helpers</h2>\n<p>Rails 已經寫好一些常用的驗證方法給我們使用，在這些 helpers 後面我們都可以再加上 <code>:on</code> 跟 <code>:message</code> 這兩種屬性，決定他們要用在哪裡，還有存取失敗的時候會存進怎樣的訊息到 errors 中</p>\n<h3 id=\"acceptance\">Acceptance</h3>\n<p>這種驗證最常用在看完條款，要打勾的那種時候，如果不打勾無法繼續往下</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:terms_of_service</span>, <span class=\"symbol\">acceptance:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"validates_associated\">Validates_associated</h3>\n<p>在 model 之間互有關聯的時候，有時候會需要確定兩邊都有存入資料才算成功，這時候可以使用這個驗證</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Library</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  has_many <span class=\"symbol\">:books</span></span><br><span class=\"line\">  validates_associated <span class=\"symbol\">:books</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>要注意不能兩邊的 model 都寫，不然會進入無窮迴圈</p>\n<h3 id=\"confirmation\">Confirmation</h3>\n<p>這個驗證通常用在需要重複輸入信箱或密碼的時候，驗證你第二次輸入的內容是不是符合一開始的內容</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:email</span>, <span class=\"symbol\">confirmation:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>接著我們就可以在 view 的頁面這樣寫</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">text_field</span> <span class=\"attr\">:person</span>, <span class=\"attr\">:email</span> %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">text_field</span> <span class=\"attr\">:person</span>, <span class=\"attr\">:email_confirmation</span> %&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"exclusion\">Exclusion</h3>\n<p>exclusion 用在限制不讓使用者寫進特定資料</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Account</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:subdomain</span>, <span class=\"symbol\">exclusion:</span> &#123; <span class=\"symbol\">in:</span> <span class=\"string\">%w(www us ca jp)</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p><code>in</code> 這個屬性裡面放陣列，陣列裡面的就是不讓使用者寫進去的資料</p>\n<h3 id=\"format\">Format</h3>\n<p>format 用在限制資料的格式，這通常會搭配常規表示法使用</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Product</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:legacy_code</span>, <span class=\"symbol\">format:</span> &#123; <span class=\"symbol\">with:</span> /\\A[a-zA-Z]+\\z/&#125;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>除了 <code>with</code> 這個屬性，我們還可以使用 <code>without</code></p>\n<h3 id=\"inclusion\">Inclusion</h3>\n<p>inclusion 是剛剛 exclusion 的相法，如果內容不包含特定的字就無法寫入</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Coffee</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:size</span>, <span class=\"symbol\">inclusion:</span> &#123; <span class=\"symbol\">in:</span> <span class=\"string\">%w(small medium large)</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>相關的 helpers 還很多，明天會陸續介紹喔！今天就先介紹到這邊～</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/active_record_validations.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>本文章範例跟文字許多引述自 Rails Guide，想參觀的可以看<a href=\"https://guides.rubyonrails.org/active_record_validations.html\" target=\"_blank\" rel=\"noopener\">這裡</a></p>\n<h2>為什麼需要驗證？</h2>\n<p>先來說說為什麼需要驗證？<br>\n因為我們並不想要資料庫裡面存一些沒有用的資料，必須要限定這些資料至少符合特定的標準才允許寫進資料庫</p>\n<hr>\n<h2>寫驗證前需知道的事</h2>\n<ul>\n<li>\n<p>在 Rails 中驗證是寫在 model level，如果沒有通過驗證就完全不會碰到資料庫</p>\n</li>\n<li>\n<p><code>new_record?</code> 用來確定這筆資料是不是已經寫入資料庫</p>\n</li>\n<li>\n<p>我們也可以用 <code>valid?</code> <code>invalid</code> 這兩種方法看這個實體是否有效 (在未被寫入之前)</p>\n</li>\n</ul>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p = Person.new</span><br><span class=\"line\">p.valid?</span><br><span class=\"line\"><span class=\"comment\">#=&gt; false</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>如果用的是 create 或者 update 在 SQL 裡使用的是 <code>INSERT</code> 方法，如果是用 <code>update</code> 則是 <code>UPDATE</code> 方法</p>\n</li>\n<li>\n<p>存入資料庫的方法有下面幾種</p>\n</li>\n</ul>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create</span><br><span class=\"line\">create!</span><br><span class=\"line\">save</span><br><span class=\"line\">save!</span><br><span class=\"line\">update</span><br><span class=\"line\">update!</span><br></pre></td></tr></table></figure>\n<p>這些驚嘆號方法會導致寫入失敗的話跳出 exception，如果不捕捉的話頁面會壞掉，非驚嘆號版本則不會</p>\n<p>在這方法後面我們可以用 <code>validate: false</code> 使他繞過驗證，這通常是用在開發的時候，使用時須小心</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">save(<span class=\"symbol\">validate:</span> <span class=\"literal\">false</span>)</span><br></pre></td></tr></table></figure>\n<hr>\n<h2>看錯誤訊息</h2>\n<p>我們在資料無法存入的時候，可以使用 <code>errors.messages</code> 看無法存入的原因</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:name</span>, <span class=\"symbol\">presence:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">p = Person.create</span><br><span class=\"line\">p.errors.messages</span><br><span class=\"line\"><span class=\"comment\"># =&gt; &#123;name:[\"can't be blank\"]&#125;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2>Validation Helpers</h2>\n<p>Rails 已經寫好一些常用的驗證方法給我們使用，在這些 helpers 後面我們都可以再加上 <code>:on</code> 跟 <code>:message</code> 這兩種屬性，決定他們要用在哪裡，還有存取失敗的時候會存進怎樣的訊息到 errors 中</p>\n<h3>Acceptance</h3>\n<p>這種驗證最常用在看完條款，要打勾的那種時候，如果不打勾無法繼續往下</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:terms_of_service</span>, <span class=\"symbol\">acceptance:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<h3>Validates_associated</h3>\n<p>在 model 之間互有關聯的時候，有時候會需要確定兩邊都有存入資料才算成功，這時候可以使用這個驗證</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Library</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  has_many <span class=\"symbol\">:books</span></span><br><span class=\"line\">  validates_associated <span class=\"symbol\">:books</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>要注意不能兩邊的 model 都寫，不然會進入無窮迴圈</p>\n<h3>Confirmation</h3>\n<p>這個驗證通常用在需要重複輸入信箱或密碼的時候，驗證你第二次輸入的內容是不是符合一開始的內容</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:email</span>, <span class=\"symbol\">confirmation:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>接著我們就可以在 view 的頁面這樣寫</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">text_field</span> <span class=\"attr\">:person</span>, <span class=\"attr\">:email</span> %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">text_field</span> <span class=\"attr\">:person</span>, <span class=\"attr\">:email_confirmation</span> %&gt;</span></span><br></pre></td></tr></table></figure>\n<h3>Exclusion</h3>\n<p>exclusion 用在限制不讓使用者寫進特定資料</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Account</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:subdomain</span>, <span class=\"symbol\">exclusion:</span> &#123; <span class=\"symbol\">in:</span> <span class=\"string\">%w(www us ca jp)</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p><code>in</code> 這個屬性裡面放陣列，陣列裡面的就是不讓使用者寫進去的資料</p>\n<h3>Format</h3>\n<p>format 用在限制資料的格式，這通常會搭配常規表示法使用</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Product</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:legacy_code</span>, <span class=\"symbol\">format:</span> &#123; <span class=\"symbol\">with:</span> /\\A[a-zA-Z]+\\z/&#125;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>除了 <code>with</code> 這個屬性，我們還可以使用 <code>without</code></p>\n<h3>Inclusion</h3>\n<p>inclusion 是剛剛 exclusion 的相法，如果內容不包含特定的字就無法寫入</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Coffee</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:size</span>, <span class=\"symbol\">inclusion:</span> &#123; <span class=\"symbol\">in:</span> <span class=\"string\">%w(small medium large)</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>相關的 helpers 還很多，明天會陸續介紹喔！今天就先介紹到這邊～</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/active_record_validations.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n"},{"title":"Active Record Validations part 2","catalog":true,"toc_nav_num":true,"date":"2019-09-30T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1569703747050-174f762d406c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1600&q=80","catagories":["Rails"],"updateDate":"2019-09-30T14:26:24.000Z","_content":"\n我們繼續接續昨天 Active Record Validation 的內容\n\n### Length\nlength 是用來限制輸入資料的長度，選項有四種可以使用\n`minimum` 跟 `maximum` 是用來限制最少跟最多的字數， `in` 是用來限制字數範圍，`is`則是限制只能這個數量的字數\n```ruby\nclass Person < ApplicationRecord\n  validates :name, length: { minimum: 2 }\n  validates :bio, length: { maximum: 500 }\n  validates :password, length: { in: 6..20 }\n  validates :registration_number, length: { is: 6 }\nend\n```\n\n### Numericality\n\nnumericality 使用的範圍很大，凡是跟數字有關的幾乎都是用這個驗證，最基本的就是限制輸入值必須為數字，另外還可以使用 `only_integer: true` 限制只能是整數\n```ruby\nclass Player < ApplicationRecord\n  validates :games_played, numericality: { only_integer: true }\nend\n```\n除此之外，還有一連串屬性來限制數字範圍，比方說 `:greater_than_or_equal_to ` 跟 `:odd` 等等，其他還有很多，有需要的可以去翻翻 Rails Guide 喔～\n\n### Presence\n\n這個驗證是最常用的，`presence: true` 用來檢查此欄位是否為空值，這裏的空值是 nil 或者空字串都會被抓出來\n\n```ruby\nclass LineItem < ApplicationRecord\n  belongs_to :order\n  validates :order, presence: true\nend\n```\n如果在關聯性之間更謹慎一點，我們可以在 belongs_to 的那個欄位後面，再寫一次 `presence: true`，如此一來不只檢查 foreign_key 是不是空值，還會檢查這筆資料是否真的存在\n\n### Absence\n就是 presence 的反義，目前還沒用到過\b...\n\n### Uniqueness\n用來驗證是否在此欄位中為唯一值\n\n```ruby\nclass Account < ApplicationRecord\n  validates :email, uniqueness: true\nend\n```\n另外還有兩個選項可以用： `scope` / `case_sensitive`\n其中 `scope` 較值得一提，他用來驗證多重欄位組合是否唯一，比方說\n\n```ruby\nclass Holiday < ApplicationRecord\n  validates :name, uniqueness: { scope: :year}\nend\n```\n這個例子代表名字重複沒關係，但至少你的 year 欄位不能是一樣的年份，反之亦然\n\n### Validates_with\n\n在 `validates_with` 後面接的是類別或者多個類別，這通常用在比較複雜的驗證需要自訂成 class\n\n```ruby\nclass GoodnessValidator < ActiveModel::Validator\n  def validate(record)\n    if record.first_name == \"Evil\"\n      record.errors[:base] << \"This person is evil\"\n    end\n  end\nend\n \nclass Person < ApplicationRecord\n  validates_with GoodnessValidator\nend\n```\n如果再更複雜一些，需要做出實體，那你可能會想做出 PORO (plain old Ruby object) 來輔助\n\n```ruby\n\nclass Person < ApplicationRecord\n  validate do |person|\n    GoodnessValidator.new(person).validate\n  end\nend\n \nclass GoodnessValidator\n  def initialize(person)\n    @person = person\n  end\n \n  def validate\n    if some_complex_condition_involving_ivars_and_private_methods?\n      @person.errors[:base] << \"This person is evil\"\n    end\n  end\n \n  # ...\nend\n```\n### Validates_each\nvalidates_each 後面接的是 block\n```ruby\n\nclass Person < ApplicationRecord\n  validates_each :name, :surname do |record, attr, value|\n    record.errors.add(attr, 'must start with upper case') if value =~ /\\A[[:lower:]]/\n  end\nend\n```\n\n我們在驗證這部分的內容就介紹到這裡～ Rails Guide 在這之後的內容都是一些延伸用法跟組合技，大家有用到的時候再去看看囉！\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/active_record_validations.html)\n\n\n\n","source":"_posts/2019-09-30-day24.md","raw":"---\ntitle: \"Active Record Validations part 2\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-09-30 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1569703747050-174f762d406c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1600&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-09-30 22:26:24\n# top: 1\n\n---\n\n我們繼續接續昨天 Active Record Validation 的內容\n\n### Length\nlength 是用來限制輸入資料的長度，選項有四種可以使用\n`minimum` 跟 `maximum` 是用來限制最少跟最多的字數， `in` 是用來限制字數範圍，`is`則是限制只能這個數量的字數\n```ruby\nclass Person < ApplicationRecord\n  validates :name, length: { minimum: 2 }\n  validates :bio, length: { maximum: 500 }\n  validates :password, length: { in: 6..20 }\n  validates :registration_number, length: { is: 6 }\nend\n```\n\n### Numericality\n\nnumericality 使用的範圍很大，凡是跟數字有關的幾乎都是用這個驗證，最基本的就是限制輸入值必須為數字，另外還可以使用 `only_integer: true` 限制只能是整數\n```ruby\nclass Player < ApplicationRecord\n  validates :games_played, numericality: { only_integer: true }\nend\n```\n除此之外，還有一連串屬性來限制數字範圍，比方說 `:greater_than_or_equal_to ` 跟 `:odd` 等等，其他還有很多，有需要的可以去翻翻 Rails Guide 喔～\n\n### Presence\n\n這個驗證是最常用的，`presence: true` 用來檢查此欄位是否為空值，這裏的空值是 nil 或者空字串都會被抓出來\n\n```ruby\nclass LineItem < ApplicationRecord\n  belongs_to :order\n  validates :order, presence: true\nend\n```\n如果在關聯性之間更謹慎一點，我們可以在 belongs_to 的那個欄位後面，再寫一次 `presence: true`，如此一來不只檢查 foreign_key 是不是空值，還會檢查這筆資料是否真的存在\n\n### Absence\n就是 presence 的反義，目前還沒用到過\b...\n\n### Uniqueness\n用來驗證是否在此欄位中為唯一值\n\n```ruby\nclass Account < ApplicationRecord\n  validates :email, uniqueness: true\nend\n```\n另外還有兩個選項可以用： `scope` / `case_sensitive`\n其中 `scope` 較值得一提，他用來驗證多重欄位組合是否唯一，比方說\n\n```ruby\nclass Holiday < ApplicationRecord\n  validates :name, uniqueness: { scope: :year}\nend\n```\n這個例子代表名字重複沒關係，但至少你的 year 欄位不能是一樣的年份，反之亦然\n\n### Validates_with\n\n在 `validates_with` 後面接的是類別或者多個類別，這通常用在比較複雜的驗證需要自訂成 class\n\n```ruby\nclass GoodnessValidator < ActiveModel::Validator\n  def validate(record)\n    if record.first_name == \"Evil\"\n      record.errors[:base] << \"This person is evil\"\n    end\n  end\nend\n \nclass Person < ApplicationRecord\n  validates_with GoodnessValidator\nend\n```\n如果再更複雜一些，需要做出實體，那你可能會想做出 PORO (plain old Ruby object) 來輔助\n\n```ruby\n\nclass Person < ApplicationRecord\n  validate do |person|\n    GoodnessValidator.new(person).validate\n  end\nend\n \nclass GoodnessValidator\n  def initialize(person)\n    @person = person\n  end\n \n  def validate\n    if some_complex_condition_involving_ivars_and_private_methods?\n      @person.errors[:base] << \"This person is evil\"\n    end\n  end\n \n  # ...\nend\n```\n### Validates_each\nvalidates_each 後面接的是 block\n```ruby\n\nclass Person < ApplicationRecord\n  validates_each :name, :surname do |record, attr, value|\n    record.errors.add(attr, 'must start with upper case') if value =~ /\\A[[:lower:]]/\n  end\nend\n```\n\n我們在驗證這部分的內容就介紹到這裡～ Rails Guide 在這之後的內容都是一些延伸用法跟組合技，大家有用到的時候再去看看囉！\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/active_record_validations.html)\n\n\n\n","slug":"2019-09-30-day24","published":1,"updated":"2019-11-22T06:51:36.136Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0euh001d2ob19yfdzuuo","content":"<p>我們繼續接續昨天 Active Record Validation 的內容</p>\n<h3 id=\"length\">Length</h3>\n<p>length 是用來限制輸入資料的長度，選項有四種可以使用<br>\n<code>minimum</code> 跟 <code>maximum</code> 是用來限制最少跟最多的字數， <code>in</code> 是用來限制字數範圍，<code>is</code>則是限制只能這個數量的字數</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:name</span>, <span class=\"symbol\">length:</span> &#123; <span class=\"symbol\">minimum:</span> <span class=\"number\">2</span> &#125;</span><br><span class=\"line\">  validates <span class=\"symbol\">:bio</span>, <span class=\"symbol\">length:</span> &#123; <span class=\"symbol\">maximum:</span> <span class=\"number\">500</span> &#125;</span><br><span class=\"line\">  validates <span class=\"symbol\">:password</span>, <span class=\"symbol\">length:</span> &#123; <span class=\"symbol\">in:</span> <span class=\"number\">6</span>..<span class=\"number\">20</span> &#125;</span><br><span class=\"line\">  validates <span class=\"symbol\">:registration_number</span>, <span class=\"symbol\">length:</span> &#123; <span class=\"symbol\">is:</span> <span class=\"number\">6</span> &#125;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"numericality\">Numericality</h3>\n<p>numericality 使用的範圍很大，凡是跟數字有關的幾乎都是用這個驗證，最基本的就是限制輸入值必須為數字，另外還可以使用 <code>only_integer: true</code> 限制只能是整數</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Player</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:games_played</span>, <span class=\"symbol\">numericality:</span> &#123; <span class=\"symbol\">only_integer:</span> <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>除此之外，還有一連串屬性來限制數字範圍，比方說 <code>:greater_than_or_equal_to</code> 跟 <code>:odd</code> 等等，其他還有很多，有需要的可以去翻翻 Rails Guide 喔～</p>\n<h3 id=\"presence\">Presence</h3>\n<p>這個驗證是最常用的，<code>presence: true</code> 用來檢查此欄位是否為空值，這裏的空值是 nil 或者空字串都會被抓出來</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LineItem</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  belongs_to <span class=\"symbol\">:order</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:order</span>, <span class=\"symbol\">presence:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>如果在關聯性之間更謹慎一點，我們可以在 belongs_to 的那個欄位後面，再寫一次 <code>presence: true</code>，如此一來不只檢查 foreign_key 是不是空值，還會檢查這筆資料是否真的存在</p>\n<h3 id=\"absence\">Absence</h3>\n<p>就是 presence 的反義，目前還沒用到過\b…</p>\n<h3 id=\"uniqueness\">Uniqueness</h3>\n<p>用來驗證是否在此欄位中為唯一值</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Account</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:email</span>, <span class=\"symbol\">uniqueness:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>另外還有兩個選項可以用： <code>scope</code> / <code>case_sensitive</code><br>\n其中 <code>scope</code> 較值得一提，他用來驗證多重欄位組合是否唯一，比方說</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Holiday</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:name</span>, <span class=\"symbol\">uniqueness:</span> &#123; <span class=\"symbol\">scope:</span> <span class=\"symbol\">:year</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>這個例子代表名字重複沒關係，但至少你的 year 欄位不能是一樣的年份，反之亦然</p>\n<h3 id=\"validates_with\">Validates_with</h3>\n<p>在 <code>validates_with</code> 後面接的是類別或者多個類別，這通常用在比較複雜的驗證需要自訂成 class</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GoodnessValidator</span> &lt; ActiveModel::Validator</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">validate</span><span class=\"params\">(record)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> record.first_name == <span class=\"string\">\"Evil\"</span></span><br><span class=\"line\">      record.errors[<span class=\"symbol\">:base</span>] &lt;&lt; <span class=\"string\">\"This person is evil\"</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates_with GoodnessValidator</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>如果再更複雜一些，需要做出實體，那你可能會想做出 PORO (plain old Ruby object) 來輔助</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validate <span class=\"keyword\">do</span> <span class=\"params\">|person|</span></span><br><span class=\"line\">    GoodnessValidator.new(person).validate</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GoodnessValidator</span></span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initialize</span><span class=\"params\">(person)</span></span></span><br><span class=\"line\">    @person = person</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">validate</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> some_complex_condition_involving_ivars_and_private_methods?</span><br><span class=\"line\">      @person.errors[<span class=\"symbol\">:base</span>] &lt;&lt; <span class=\"string\">\"This person is evil\"</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"comment\"># ...</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"validates_each\">Validates_each</h3>\n<p>validates_each 後面接的是 block</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates_each <span class=\"symbol\">:name</span>, <span class=\"symbol\">:surname</span> <span class=\"keyword\">do</span> <span class=\"params\">|record, attr, value|</span></span><br><span class=\"line\">    record.errors.add(attr, <span class=\"string\">'must start with upper case'</span>) <span class=\"keyword\">if</span> value =~ <span class=\"regexp\">/\\A[[:lower:]]/</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>我們在驗證這部分的內容就介紹到這裡～ Rails Guide 在這之後的內容都是一些延伸用法跟組合技，大家有用到的時候再去看看囉！</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/active_record_validations.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>我們繼續接續昨天 Active Record Validation 的內容</p>\n<h3>Length</h3>\n<p>length 是用來限制輸入資料的長度，選項有四種可以使用<br>\n<code>minimum</code> 跟 <code>maximum</code> 是用來限制最少跟最多的字數， <code>in</code> 是用來限制字數範圍，<code>is</code>則是限制只能這個數量的字數</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:name</span>, <span class=\"symbol\">length:</span> &#123; <span class=\"symbol\">minimum:</span> <span class=\"number\">2</span> &#125;</span><br><span class=\"line\">  validates <span class=\"symbol\">:bio</span>, <span class=\"symbol\">length:</span> &#123; <span class=\"symbol\">maximum:</span> <span class=\"number\">500</span> &#125;</span><br><span class=\"line\">  validates <span class=\"symbol\">:password</span>, <span class=\"symbol\">length:</span> &#123; <span class=\"symbol\">in:</span> <span class=\"number\">6</span>..<span class=\"number\">20</span> &#125;</span><br><span class=\"line\">  validates <span class=\"symbol\">:registration_number</span>, <span class=\"symbol\">length:</span> &#123; <span class=\"symbol\">is:</span> <span class=\"number\">6</span> &#125;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<h3>Numericality</h3>\n<p>numericality 使用的範圍很大，凡是跟數字有關的幾乎都是用這個驗證，最基本的就是限制輸入值必須為數字，另外還可以使用 <code>only_integer: true</code> 限制只能是整數</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Player</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:games_played</span>, <span class=\"symbol\">numericality:</span> &#123; <span class=\"symbol\">only_integer:</span> <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>除此之外，還有一連串屬性來限制數字範圍，比方說 <code>:greater_than_or_equal_to</code> 跟 <code>:odd</code> 等等，其他還有很多，有需要的可以去翻翻 Rails Guide 喔～</p>\n<h3>Presence</h3>\n<p>這個驗證是最常用的，<code>presence: true</code> 用來檢查此欄位是否為空值，這裏的空值是 nil 或者空字串都會被抓出來</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LineItem</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  belongs_to <span class=\"symbol\">:order</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:order</span>, <span class=\"symbol\">presence:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>如果在關聯性之間更謹慎一點，我們可以在 belongs_to 的那個欄位後面，再寫一次 <code>presence: true</code>，如此一來不只檢查 foreign_key 是不是空值，還會檢查這筆資料是否真的存在</p>\n<h3>Absence</h3>\n<p>就是 presence 的反義，目前還沒用到過\b…</p>\n<h3>Uniqueness</h3>\n<p>用來驗證是否在此欄位中為唯一值</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Account</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:email</span>, <span class=\"symbol\">uniqueness:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>另外還有兩個選項可以用： <code>scope</code> / <code>case_sensitive</code><br>\n其中 <code>scope</code> 較值得一提，他用來驗證多重欄位組合是否唯一，比方說</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Holiday</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:name</span>, <span class=\"symbol\">uniqueness:</span> &#123; <span class=\"symbol\">scope:</span> <span class=\"symbol\">:year</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>這個例子代表名字重複沒關係，但至少你的 year 欄位不能是一樣的年份，反之亦然</p>\n<h3>Validates_with</h3>\n<p>在 <code>validates_with</code> 後面接的是類別或者多個類別，這通常用在比較複雜的驗證需要自訂成 class</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GoodnessValidator</span> &lt; ActiveModel::Validator</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">validate</span><span class=\"params\">(record)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> record.first_name == <span class=\"string\">\"Evil\"</span></span><br><span class=\"line\">      record.errors[<span class=\"symbol\">:base</span>] &lt;&lt; <span class=\"string\">\"This person is evil\"</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates_with GoodnessValidator</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>如果再更複雜一些，需要做出實體，那你可能會想做出 PORO (plain old Ruby object) 來輔助</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validate <span class=\"keyword\">do</span> <span class=\"params\">|person|</span></span><br><span class=\"line\">    GoodnessValidator.new(person).validate</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GoodnessValidator</span></span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initialize</span><span class=\"params\">(person)</span></span></span><br><span class=\"line\">    @person = person</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">validate</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> some_complex_condition_involving_ivars_and_private_methods?</span><br><span class=\"line\">      @person.errors[<span class=\"symbol\">:base</span>] &lt;&lt; <span class=\"string\">\"This person is evil\"</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"comment\"># ...</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<h3>Validates_each</h3>\n<p>validates_each 後面接的是 block</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> &lt; ApplicationRecord</span></span><br><span class=\"line\">  validates_each <span class=\"symbol\">:name</span>, <span class=\"symbol\">:surname</span> <span class=\"keyword\">do</span> <span class=\"params\">|record, attr, value|</span></span><br><span class=\"line\">    record.errors.add(attr, <span class=\"string\">'must start with upper case'</span>) <span class=\"keyword\">if</span> value =~ <span class=\"regexp\">/\\A[[:lower:]]/</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>我們在驗證這部分的內容就介紹到這裡～ Rails Guide 在這之後的內容都是一些延伸用法跟組合技，大家有用到的時候再去看看囉！</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/active_record_validations.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n"},{"title":"Action View Form Helpers","catalog":true,"toc_nav_num":true,"date":"2019-10-01T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1568517130737-8c558272c905?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1568&q=80","catagories":["Rails"],"updateDate":"2019-10-01T14:26:24.000Z","_content":"\n## Action View Form Helpers\n今天要來看的是[這篇](https://guides.rubyonrails.org/form_helpers.html)\n\n目前 Rails 比較推廣使用 form_with 來製作表單\n以前的做法是：如果表格的對象有Model，則用form_for，Rails會利用Model的屬性來新增或更新Model所產生的資料；若沒有Model實體時，form_tag 則使用傳入連結的action進行表單傳送\n現在 form_with 則是整合了這兩種做法，也對效能做了優化\n\n因此在我看來差比較多的部分是，form_with 可以使用 url 後面帶一個真正的網址但 form_for 不行，除此之外 form_with 預設是用非同步的方式送出表單，如果要關掉這個設定要另外加個 `local:true` ，但是 form_for 則預設是同步的方式送出\n\n話雖如此，但要注意一下使用的 gem 有沒有支援，像是 simple form 就不支援 form_with 這個用法\n***\n## Tag_helpers\n表單少不了的當然還有幫忙建出表單的這些欄位，tag_helpers 是一個最基本的用法，要注意的是，在這些 helpers 後面接的第一個參數一定是 name 這個屬性的值\n```html\n<%= text_area_tag(:message) %>\n```\n在上面這個例子中， 可以在 html 原始碼看到這個屬性： `name=\"message\"`\n***\n## Model Objects\nModel objects 可以視為是強化版的 tag_helpers，在使用的時候， rails 為了刻意區分他們， Model obejects 後面並沒有帶 tag \n我們在使用 tag_helper 第一個參數一定要寫得很清楚，初始值也要自己設定，Model object 是 rails 做出比較方便使用的工具\n\n在這些 helpers 後面第一個參數放的是實體的名字（這個例子中是 @person），第二個則是這個實體的方法(通常是屬性)\n```html\n<!-- html.erb -->\n<%= text_field(:person, :name) %>\n<!--html-->\n<input id=\"person_name\" name=\"person[name]\" type=\"text\" value=\"Henry\n```\n上面這個例子中，是這個實體的名字本身帶有 \"henry\" 才會這樣顯示～\n***\n## Model Objects 搭配表單\n\n我們需要了解搭配表單使用的時候， model objects 實際上會變成怎樣：\n```html\n<%= form_with model: @person do |person_form| %>\n  <%= person_form.text_field :name %>\n<% end %>\n```\n檢視原始碼會看到：\n```html\n<form action=\"/people\" accept-charset=\"UTF-8\" data-remote=\"true\" method=\"post\">\n<input type=\"hidden\" name=\"authenticity_token\" value=\"bL13x72pldyDD8bgtkjKQakJCpd4A8JdXGbfksxBDHdf1uC0kCMqe2tvVdUYfidJt0fj3ihC4NxiVHv8GVYxJA==\" />\n<input type=\"text\" name=\"person[name]\" id=\"person_name\" />\n</form>\n```\n看到 `name=\"person[name]\"` ，這代表表單內的 model objects 會自動幫你加上這個表單連結到的實體變數名字\n\n當你的 model 前面有帶 namespace 的話，需要像下面這樣寫表單：\n```ruby\nform_with model: [:admin, :management, @article]\n```\n另外，如果你這個表單不是要用 post 方法送的話，就要自己改寫：\n```ruby\nform_with(url: search_path, method: \"patch\")\n```\n在原始碼中，你會看到這前兩行：\n```ruby\n<form accept-charset=\"UTF-8\" action=\"/search\" data-remote=\"true\" method=\"post\">\n  <input name=\"_method\" type=\"hidden\" value=\"patch\" />\n```\n會發現原始碼中竟然寫的還是 post，但是下面有一行 Rails 自己做出來的魔法：有一個隱藏的 input， name是 \"_method\" ，透過這行，Rails 會自己判別要改用 patch 的方法傳送資料\n\n以上是今天的內容～ 希望對大家有幫助！\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/form_helpers.html)\n\n[Rails在建立表單的時候，form_for 跟 form_with 有什麼不同？](https://medium.com/@anneju/rails%E5%9C%A8%E5%BB%BA%E7%AB%8B%E8%A1%A8%E5%96%AE%E7%9A%84%E6%99%82%E5%80%99-form-for-%E8%B7%9F-form-with-%E6%9C%89%E4%BB%80%E9%BA%BC%E4%B8%8D%E5%90%8C-ec45cebbbf92)\n\n[Rails 初心者的學習筆記：form_for和form_with的比較](https://medium.com/@appletabby/rails-%E5%88%9D%E5%BF%83%E8%80%85%E7%9A%84%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-form-for%E5%92%8Cform-with%E7%9A%84%E6%AF%94%E8%BC%83-e1b21b4ca6f8)\n","source":"_posts/2019-10-01-day25.md","raw":"---\ntitle: \"Action View Form Helpers\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-10-01 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1568517130737-8c558272c905?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1568&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-10-01 22:26:24\n# top: 1\n\n---\n\n## Action View Form Helpers\n今天要來看的是[這篇](https://guides.rubyonrails.org/form_helpers.html)\n\n目前 Rails 比較推廣使用 form_with 來製作表單\n以前的做法是：如果表格的對象有Model，則用form_for，Rails會利用Model的屬性來新增或更新Model所產生的資料；若沒有Model實體時，form_tag 則使用傳入連結的action進行表單傳送\n現在 form_with 則是整合了這兩種做法，也對效能做了優化\n\n因此在我看來差比較多的部分是，form_with 可以使用 url 後面帶一個真正的網址但 form_for 不行，除此之外 form_with 預設是用非同步的方式送出表單，如果要關掉這個設定要另外加個 `local:true` ，但是 form_for 則預設是同步的方式送出\n\n話雖如此，但要注意一下使用的 gem 有沒有支援，像是 simple form 就不支援 form_with 這個用法\n***\n## Tag_helpers\n表單少不了的當然還有幫忙建出表單的這些欄位，tag_helpers 是一個最基本的用法，要注意的是，在這些 helpers 後面接的第一個參數一定是 name 這個屬性的值\n```html\n<%= text_area_tag(:message) %>\n```\n在上面這個例子中， 可以在 html 原始碼看到這個屬性： `name=\"message\"`\n***\n## Model Objects\nModel objects 可以視為是強化版的 tag_helpers，在使用的時候， rails 為了刻意區分他們， Model obejects 後面並沒有帶 tag \n我們在使用 tag_helper 第一個參數一定要寫得很清楚，初始值也要自己設定，Model object 是 rails 做出比較方便使用的工具\n\n在這些 helpers 後面第一個參數放的是實體的名字（這個例子中是 @person），第二個則是這個實體的方法(通常是屬性)\n```html\n<!-- html.erb -->\n<%= text_field(:person, :name) %>\n<!--html-->\n<input id=\"person_name\" name=\"person[name]\" type=\"text\" value=\"Henry\n```\n上面這個例子中，是這個實體的名字本身帶有 \"henry\" 才會這樣顯示～\n***\n## Model Objects 搭配表單\n\n我們需要了解搭配表單使用的時候， model objects 實際上會變成怎樣：\n```html\n<%= form_with model: @person do |person_form| %>\n  <%= person_form.text_field :name %>\n<% end %>\n```\n檢視原始碼會看到：\n```html\n<form action=\"/people\" accept-charset=\"UTF-8\" data-remote=\"true\" method=\"post\">\n<input type=\"hidden\" name=\"authenticity_token\" value=\"bL13x72pldyDD8bgtkjKQakJCpd4A8JdXGbfksxBDHdf1uC0kCMqe2tvVdUYfidJt0fj3ihC4NxiVHv8GVYxJA==\" />\n<input type=\"text\" name=\"person[name]\" id=\"person_name\" />\n</form>\n```\n看到 `name=\"person[name]\"` ，這代表表單內的 model objects 會自動幫你加上這個表單連結到的實體變數名字\n\n當你的 model 前面有帶 namespace 的話，需要像下面這樣寫表單：\n```ruby\nform_with model: [:admin, :management, @article]\n```\n另外，如果你這個表單不是要用 post 方法送的話，就要自己改寫：\n```ruby\nform_with(url: search_path, method: \"patch\")\n```\n在原始碼中，你會看到這前兩行：\n```ruby\n<form accept-charset=\"UTF-8\" action=\"/search\" data-remote=\"true\" method=\"post\">\n  <input name=\"_method\" type=\"hidden\" value=\"patch\" />\n```\n會發現原始碼中竟然寫的還是 post，但是下面有一行 Rails 自己做出來的魔法：有一個隱藏的 input， name是 \"_method\" ，透過這行，Rails 會自己判別要改用 patch 的方法傳送資料\n\n以上是今天的內容～ 希望對大家有幫助！\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/form_helpers.html)\n\n[Rails在建立表單的時候，form_for 跟 form_with 有什麼不同？](https://medium.com/@anneju/rails%E5%9C%A8%E5%BB%BA%E7%AB%8B%E8%A1%A8%E5%96%AE%E7%9A%84%E6%99%82%E5%80%99-form-for-%E8%B7%9F-form-with-%E6%9C%89%E4%BB%80%E9%BA%BC%E4%B8%8D%E5%90%8C-ec45cebbbf92)\n\n[Rails 初心者的學習筆記：form_for和form_with的比較](https://medium.com/@appletabby/rails-%E5%88%9D%E5%BF%83%E8%80%85%E7%9A%84%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-form-for%E5%92%8Cform-with%E7%9A%84%E6%AF%94%E8%BC%83-e1b21b4ca6f8)\n","slug":"2019-10-01-day25","published":1,"updated":"2019-11-22T06:52:09.900Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0euj001f2ob1j21hi26d","content":"<h2 id=\"action-view-form-helpers\">Action View Form Helpers</h2>\n<p>今天要來看的是<a href=\"https://guides.rubyonrails.org/form_helpers.html\" target=\"_blank\" rel=\"noopener\">這篇</a></p>\n<p>目前 Rails 比較推廣使用 form_with 來製作表單<br>\n以前的做法是：如果表格的對象有Model，則用form_for，Rails會利用Model的屬性來新增或更新Model所產生的資料；若沒有Model實體時，form_tag 則使用傳入連結的action進行表單傳送<br>\n現在 form_with 則是整合了這兩種做法，也對效能做了優化</p>\n<p>因此在我看來差比較多的部分是，form_with 可以使用 url 後面帶一個真正的網址但 form_for 不行，除此之外 form_with 預設是用非同步的方式送出表單，如果要關掉這個設定要另外加個 <code>local:true</code> ，但是 form_for 則預設是同步的方式送出</p>\n<p>話雖如此，但要注意一下使用的 gem 有沒有支援，像是 simple form 就不支援 form_with 這個用法</p>\n<hr>\n<h2 id=\"tag_helpers\">Tag_helpers</h2>\n<p>表單少不了的當然還有幫忙建出表單的這些欄位，tag_helpers 是一個最基本的用法，要注意的是，在這些 helpers 後面接的第一個參數一定是 name 這個屬性的值</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">text_area_tag</span>(<span class=\"attr\">:message</span>) %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在上面這個例子中， 可以在 html 原始碼看到這個屬性： <code>name=&quot;message&quot;</code></p>\n<hr>\n<h2 id=\"model-objects\">Model Objects</h2>\n<p>Model objects 可以視為是強化版的 tag_helpers，在使用的時候， rails 為了刻意區分他們， Model obejects 後面並沒有帶 tag<br>\n我們在使用 tag_helper 第一個參數一定要寫得很清楚，初始值也要自己設定，Model object 是 rails 做出比較方便使用的工具</p>\n<p>在這些 helpers 後面第一個參數放的是實體的名字（這個例子中是 @person），第二個則是這個實體的方法(通常是屬性)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- html.erb --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">text_field</span>(<span class=\"attr\">:person</span>, <span class=\"attr\">:name</span>) %&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--html--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"person_name\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"person[name]\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Henry</span></span></span><br></pre></td></tr></table></figure>\n<p>上面這個例子中，是這個實體的名字本身帶有 “henry” 才會這樣顯示～</p>\n<hr>\n<h2 id=\"model-objects-搭配表單\">Model Objects 搭配表單</h2>\n<p>我們需要了解搭配表單使用的時候， model objects 實際上會變成怎樣：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">form_with</span> <span class=\"attr\">model:</span> @<span class=\"attr\">person</span> <span class=\"attr\">do</span> |<span class=\"attr\">person_form</span>| %&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">person_form.text_field</span> <span class=\"attr\">:name</span> %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">end</span> %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>檢視原始碼會看到：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"/people\"</span> <span class=\"attr\">accept-charset</span>=<span class=\"string\">\"UTF-8\"</span> <span class=\"attr\">data-remote</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"hidden\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"authenticity_token\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"bL13x72pldyDD8bgtkjKQakJCpd4A8JdXGbfksxBDHdf1uC0kCMqe2tvVdUYfidJt0fj3ihC4NxiVHv8GVYxJA==\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"person[name]\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"person_name\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>看到 <code>name=&quot;person[name]&quot;</code> ，這代表表單內的 model objects 會自動幫你加上這個表單連結到的實體變數名字</p>\n<p>當你的 model 前面有帶 namespace 的話，需要像下面這樣寫表單：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">form_with <span class=\"symbol\">model:</span> [<span class=\"symbol\">:admin</span>, <span class=\"symbol\">:management</span>, @article]</span><br></pre></td></tr></table></figure>\n<p>另外，如果你這個表單不是要用 post 方法送的話，就要自己改寫：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">form_with(<span class=\"symbol\">url:</span> search_path, <span class=\"symbol\">method:</span> <span class=\"string\">\"patch\"</span>)</span><br></pre></td></tr></table></figure>\n<p>在原始碼中，你會看到這前兩行：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;form accept-charset=<span class=\"string\">\"UTF-8\"</span> action=<span class=\"string\">\"/search\"</span> data-remote=<span class=\"string\">\"true\"</span> method=<span class=\"string\">\"post\"</span>&gt;</span><br><span class=\"line\">  &lt;input name=<span class=\"string\">\"_method\"</span> type=<span class=\"string\">\"hidden\"</span> value=<span class=\"string\">\"patch\"</span> /&gt;</span><br></pre></td></tr></table></figure>\n<p>會發現原始碼中竟然寫的還是 post，但是下面有一行 Rails 自己做出來的魔法：有一個隱藏的 input， name是 “_method” ，透過這行，Rails 會自己判別要改用 patch 的方法傳送資料</p>\n<p>以上是今天的內容～ 希望對大家有幫助！</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/form_helpers.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n<p><a href=\"https://medium.com/@anneju/rails%E5%9C%A8%E5%BB%BA%E7%AB%8B%E8%A1%A8%E5%96%AE%E7%9A%84%E6%99%82%E5%80%99-form-for-%E8%B7%9F-form-with-%E6%9C%89%E4%BB%80%E9%BA%BC%E4%B8%8D%E5%90%8C-ec45cebbbf92\" target=\"_blank\" rel=\"noopener\">Rails在建立表單的時候，form_for 跟 form_with 有什麼不同？</a></p>\n<p><a href=\"https://medium.com/@appletabby/rails-%E5%88%9D%E5%BF%83%E8%80%85%E7%9A%84%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-form-for%E5%92%8Cform-with%E7%9A%84%E6%AF%94%E8%BC%83-e1b21b4ca6f8\" target=\"_blank\" rel=\"noopener\">Rails 初心者的學習筆記：form_for和form_with的比較</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2>Action View Form Helpers</h2>\n<p>今天要來看的是<a href=\"https://guides.rubyonrails.org/form_helpers.html\" target=\"_blank\" rel=\"noopener\">這篇</a></p>\n<p>目前 Rails 比較推廣使用 form_with 來製作表單<br>\n以前的做法是：如果表格的對象有Model，則用form_for，Rails會利用Model的屬性來新增或更新Model所產生的資料；若沒有Model實體時，form_tag 則使用傳入連結的action進行表單傳送<br>\n現在 form_with 則是整合了這兩種做法，也對效能做了優化</p>\n<p>因此在我看來差比較多的部分是，form_with 可以使用 url 後面帶一個真正的網址但 form_for 不行，除此之外 form_with 預設是用非同步的方式送出表單，如果要關掉這個設定要另外加個 <code>local:true</code> ，但是 form_for 則預設是同步的方式送出</p>\n<p>話雖如此，但要注意一下使用的 gem 有沒有支援，像是 simple form 就不支援 form_with 這個用法</p>\n<hr>\n<h2>Tag_helpers</h2>\n<p>表單少不了的當然還有幫忙建出表單的這些欄位，tag_helpers 是一個最基本的用法，要注意的是，在這些 helpers 後面接的第一個參數一定是 name 這個屬性的值</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">text_area_tag</span>(<span class=\"attr\">:message</span>) %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在上面這個例子中， 可以在 html 原始碼看到這個屬性： <code>name=&quot;message&quot;</code></p>\n<hr>\n<h2>Model Objects</h2>\n<p>Model objects 可以視為是強化版的 tag_helpers，在使用的時候， rails 為了刻意區分他們， Model obejects 後面並沒有帶 tag<br>\n我們在使用 tag_helper 第一個參數一定要寫得很清楚，初始值也要自己設定，Model object 是 rails 做出比較方便使用的工具</p>\n<p>在這些 helpers 後面第一個參數放的是實體的名字（這個例子中是 @person），第二個則是這個實體的方法(通常是屬性)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- html.erb --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">text_field</span>(<span class=\"attr\">:person</span>, <span class=\"attr\">:name</span>) %&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--html--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"person_name\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"person[name]\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Henry</span></span></span><br></pre></td></tr></table></figure>\n<p>上面這個例子中，是這個實體的名字本身帶有 “henry” 才會這樣顯示～</p>\n<hr>\n<h2>Model Objects 搭配表單</h2>\n<p>我們需要了解搭配表單使用的時候， model objects 實際上會變成怎樣：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">form_with</span> <span class=\"attr\">model:</span> @<span class=\"attr\">person</span> <span class=\"attr\">do</span> |<span class=\"attr\">person_form</span>| %&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">person_form.text_field</span> <span class=\"attr\">:name</span> %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">end</span> %&gt;</span></span><br></pre></td></tr></table></figure>\n<p>檢視原始碼會看到：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"/people\"</span> <span class=\"attr\">accept-charset</span>=<span class=\"string\">\"UTF-8\"</span> <span class=\"attr\">data-remote</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"hidden\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"authenticity_token\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"bL13x72pldyDD8bgtkjKQakJCpd4A8JdXGbfksxBDHdf1uC0kCMqe2tvVdUYfidJt0fj3ihC4NxiVHv8GVYxJA==\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"person[name]\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"person_name\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>看到 <code>name=&quot;person[name]&quot;</code> ，這代表表單內的 model objects 會自動幫你加上這個表單連結到的實體變數名字</p>\n<p>當你的 model 前面有帶 namespace 的話，需要像下面這樣寫表單：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">form_with <span class=\"symbol\">model:</span> [<span class=\"symbol\">:admin</span>, <span class=\"symbol\">:management</span>, @article]</span><br></pre></td></tr></table></figure>\n<p>另外，如果你這個表單不是要用 post 方法送的話，就要自己改寫：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">form_with(<span class=\"symbol\">url:</span> search_path, <span class=\"symbol\">method:</span> <span class=\"string\">\"patch\"</span>)</span><br></pre></td></tr></table></figure>\n<p>在原始碼中，你會看到這前兩行：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;form accept-charset=<span class=\"string\">\"UTF-8\"</span> action=<span class=\"string\">\"/search\"</span> data-remote=<span class=\"string\">\"true\"</span> method=<span class=\"string\">\"post\"</span>&gt;</span><br><span class=\"line\">  &lt;input name=<span class=\"string\">\"_method\"</span> type=<span class=\"string\">\"hidden\"</span> value=<span class=\"string\">\"patch\"</span> /&gt;</span><br></pre></td></tr></table></figure>\n<p>會發現原始碼中竟然寫的還是 post，但是下面有一行 Rails 自己做出來的魔法：有一個隱藏的 input， name是 “_method” ，透過這行，Rails 會自己判別要改用 patch 的方法傳送資料</p>\n<p>以上是今天的內容～ 希望對大家有幫助！</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/form_helpers.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n<p><a href=\"https://medium.com/@anneju/rails%E5%9C%A8%E5%BB%BA%E7%AB%8B%E8%A1%A8%E5%96%AE%E7%9A%84%E6%99%82%E5%80%99-form-for-%E8%B7%9F-form-with-%E6%9C%89%E4%BB%80%E9%BA%BC%E4%B8%8D%E5%90%8C-ec45cebbbf92\" target=\"_blank\" rel=\"noopener\">Rails在建立表單的時候，form_for 跟 form_with 有什麼不同？</a></p>\n<p><a href=\"https://medium.com/@appletabby/rails-%E5%88%9D%E5%BF%83%E8%80%85%E7%9A%84%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-form-for%E5%92%8Cform-with%E7%9A%84%E6%AF%94%E8%BC%83-e1b21b4ca6f8\" target=\"_blank\" rel=\"noopener\">Rails 初心者的學習筆記：form_for和form_with的比較</a></p>\n"},{"title":"Rails Routing part2","catalog":true,"toc_nav_num":true,"date":"2019-10-03T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1552726516-8e582c6ec1f7?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1551&q=80","catagories":["Rails"],"updateDate":"2019-10-03T14:26:24.000Z","_content":"\n今天繼續來探討 rails 的路徑寫法還有什麼眉角，看一看還真發現沒看過的寫法真多...\n\n## Shallow nesting\n我們在使用 resource 表示路徑的時候，還可以做出巢狀的路徑\n\n```ruby\nresources :magazines do\n  resources :ads\nend\n```\n\n雖然很方便，但一般建議一次巢狀就夠了，幾乎沒有什麼需求會用到兩層巢狀結構\n\n在巢狀結構下，有一種很常被使用：\n```ruby\nresources :articles do\n  resources :comments, only: [:index, :new, :create]\nend\nresources :comments, only: [:show, :edit, :update, :destroy]\n```\n這個的意思是說，每一篇文章都有自己的 comment，在新增跟建立的時候需要知道是哪篇文章，但在檢視每一則 comment 還有編輯修改刪除的時候並不需要\n\n因為太常用了，所以 Rails 賜它另一種好寫的方法\n\n```ruby\nresources :articles do\n  resources :comments, shallow: true\nend\n```\n變形的寫法還有很多種，但關鍵字就是 shallow ，有需要可以自己再來 Rails Guide 查\n\n## Concerns\n\n假如我們今天 user 跟 post 都同時需要巢狀路徑，而底下那層都是 image，我們需要把同樣的 code 寫兩次\n\n```ruby\nresource :user do\n  resource :image\nend\n\n\nresources :posts do\n  resource :image\nend\n```\n對於堅持 DRY 理念的攻城屍來說，同樣的東西寫兩次就是不舒服！\n\n所以這樣的東西 Rails 也有提供另外的方法，上面的例子可以改寫如下：\n```ruby\nconcern :imageable do\n  resource :image\nend\n\nresource :user, concerns: :imageable\nresources :posts, concerns: :imageable\n```\n\n## Naming Routes\n\n在使用 rails 的時候，大家一定都知道可以使用 resources 自動幫你加的路徑名字，比方說 candidates controller 裡面的 new 方法的路徑叫做 `new_candidate_path`，實際上我們可以用 `as` 的選項來修改\n\n```ruby\nget 'exit', to: 'sessions#destroy', as: :logout\n```\n就像這樣，我們如果使用 `logout_path` 就可以連結到 `/exit` 這個 url 了！\n\n## HTTP Verb Constraints\n\n如果我們在碰到想要讓很多動作同時指到同一個路徑的話，可以使用 `via` 這個選項\n\n```ruby\nmatch 'photos', to: 'photos#show', via: [:get, :post]\n```\n\n這個例子中，只要你的路徑是 `/photos` ，不管動詞是 get 還是 post 都能到這個頁面\n\n除此之外，還可以使用 all 表示全部的 action 都可以到這裡：\n```ruby\nmatch 'photos', to: 'photos#show', via: :all\n```\n\nRails 裡面路徑的介紹就先到這裡了～\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/routing.html)\n\n[Rails routes concerns](https://rubyinrails.com/2019/04/23/rails-routes-concerns/)\n\n","source":"_posts/2019-10-03-day27.md","raw":"---\ntitle: \"Rails Routing part2\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-10-03 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1552726516-8e582c6ec1f7?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1551&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-10-03 22:26:24\n# top: 1\n\n---\n\n今天繼續來探討 rails 的路徑寫法還有什麼眉角，看一看還真發現沒看過的寫法真多...\n\n## Shallow nesting\n我們在使用 resource 表示路徑的時候，還可以做出巢狀的路徑\n\n```ruby\nresources :magazines do\n  resources :ads\nend\n```\n\n雖然很方便，但一般建議一次巢狀就夠了，幾乎沒有什麼需求會用到兩層巢狀結構\n\n在巢狀結構下，有一種很常被使用：\n```ruby\nresources :articles do\n  resources :comments, only: [:index, :new, :create]\nend\nresources :comments, only: [:show, :edit, :update, :destroy]\n```\n這個的意思是說，每一篇文章都有自己的 comment，在新增跟建立的時候需要知道是哪篇文章，但在檢視每一則 comment 還有編輯修改刪除的時候並不需要\n\n因為太常用了，所以 Rails 賜它另一種好寫的方法\n\n```ruby\nresources :articles do\n  resources :comments, shallow: true\nend\n```\n變形的寫法還有很多種，但關鍵字就是 shallow ，有需要可以自己再來 Rails Guide 查\n\n## Concerns\n\n假如我們今天 user 跟 post 都同時需要巢狀路徑，而底下那層都是 image，我們需要把同樣的 code 寫兩次\n\n```ruby\nresource :user do\n  resource :image\nend\n\n\nresources :posts do\n  resource :image\nend\n```\n對於堅持 DRY 理念的攻城屍來說，同樣的東西寫兩次就是不舒服！\n\n所以這樣的東西 Rails 也有提供另外的方法，上面的例子可以改寫如下：\n```ruby\nconcern :imageable do\n  resource :image\nend\n\nresource :user, concerns: :imageable\nresources :posts, concerns: :imageable\n```\n\n## Naming Routes\n\n在使用 rails 的時候，大家一定都知道可以使用 resources 自動幫你加的路徑名字，比方說 candidates controller 裡面的 new 方法的路徑叫做 `new_candidate_path`，實際上我們可以用 `as` 的選項來修改\n\n```ruby\nget 'exit', to: 'sessions#destroy', as: :logout\n```\n就像這樣，我們如果使用 `logout_path` 就可以連結到 `/exit` 這個 url 了！\n\n## HTTP Verb Constraints\n\n如果我們在碰到想要讓很多動作同時指到同一個路徑的話，可以使用 `via` 這個選項\n\n```ruby\nmatch 'photos', to: 'photos#show', via: [:get, :post]\n```\n\n這個例子中，只要你的路徑是 `/photos` ，不管動詞是 get 還是 post 都能到這個頁面\n\n除此之外，還可以使用 all 表示全部的 action 都可以到這裡：\n```ruby\nmatch 'photos', to: 'photos#show', via: :all\n```\n\nRails 裡面路徑的介紹就先到這裡了～\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/routing.html)\n\n[Rails routes concerns](https://rubyinrails.com/2019/04/23/rails-routes-concerns/)\n\n","slug":"2019-10-03-day27","published":1,"updated":"2019-11-22T06:53:07.404Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0euk001h2ob1riceshe7","content":"<p>今天繼續來探討 rails 的路徑寫法還有什麼眉角，看一看還真發現沒看過的寫法真多…</p>\n<h2 id=\"shallow-nesting\">Shallow nesting</h2>\n<p>我們在使用 resource 表示路徑的時候，還可以做出巢狀的路徑</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resources <span class=\"symbol\">:magazines</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">  resources <span class=\"symbol\">:ads</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>雖然很方便，但一般建議一次巢狀就夠了，幾乎沒有什麼需求會用到兩層巢狀結構</p>\n<p>在巢狀結構下，有一種很常被使用：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resources <span class=\"symbol\">:articles</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">  resources <span class=\"symbol\">:comments</span>, <span class=\"symbol\">only:</span> [<span class=\"symbol\">:index</span>, <span class=\"symbol\">:new</span>, <span class=\"symbol\">:create</span>]</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">resources <span class=\"symbol\">:comments</span>, <span class=\"symbol\">only:</span> [<span class=\"symbol\">:show</span>, <span class=\"symbol\">:edit</span>, <span class=\"symbol\">:update</span>, <span class=\"symbol\">:destroy</span>]</span><br></pre></td></tr></table></figure>\n<p>這個的意思是說，每一篇文章都有自己的 comment，在新增跟建立的時候需要知道是哪篇文章，但在檢視每一則 comment 還有編輯修改刪除的時候並不需要</p>\n<p>因為太常用了，所以 Rails 賜它另一種好寫的方法</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resources <span class=\"symbol\">:articles</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">  resources <span class=\"symbol\">:comments</span>, <span class=\"symbol\">shallow:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>變形的寫法還有很多種，但關鍵字就是 shallow ，有需要可以自己再來 Rails Guide 查</p>\n<h2 id=\"concerns\">Concerns</h2>\n<p>假如我們今天 user 跟 post 都同時需要巢狀路徑，而底下那層都是 image，我們需要把同樣的 code 寫兩次</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resource <span class=\"symbol\">:user</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">  resource <span class=\"symbol\">:image</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">resources <span class=\"symbol\">:posts</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">  resource <span class=\"symbol\">:image</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>對於堅持 DRY 理念的攻城屍來說，同樣的東西寫兩次就是不舒服！</p>\n<p>所以這樣的東西 Rails 也有提供另外的方法，上面的例子可以改寫如下：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">concern <span class=\"symbol\">:imageable</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">  resource <span class=\"symbol\">:image</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">resource <span class=\"symbol\">:user</span>, <span class=\"symbol\">concerns:</span> <span class=\"symbol\">:imageable</span></span><br><span class=\"line\">resources <span class=\"symbol\">:posts</span>, <span class=\"symbol\">concerns:</span> <span class=\"symbol\">:imageable</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"naming-routes\">Naming Routes</h2>\n<p>在使用 rails 的時候，大家一定都知道可以使用 resources 自動幫你加的路徑名字，比方說 candidates controller 裡面的 new 方法的路徑叫做 <code>new_candidate_path</code>，實際上我們可以用 <code>as</code> 的選項來修改</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">get <span class=\"string\">'exit'</span>, <span class=\"symbol\">to:</span> <span class=\"string\">'sessions#destroy'</span>, <span class=\"symbol\">as:</span> <span class=\"symbol\">:logout</span></span><br></pre></td></tr></table></figure>\n<p>就像這樣，我們如果使用 <code>logout_path</code> 就可以連結到 <code>/exit</code> 這個 url 了！</p>\n<h2 id=\"http-verb-constraints\">HTTP Verb Constraints</h2>\n<p>如果我們在碰到想要讓很多動作同時指到同一個路徑的話，可以使用 <code>via</code> 這個選項</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">match <span class=\"string\">'photos'</span>, <span class=\"symbol\">to:</span> <span class=\"string\">'photos#show'</span>, <span class=\"symbol\">via:</span> [<span class=\"symbol\">:get</span>, <span class=\"symbol\">:post</span>]</span><br></pre></td></tr></table></figure>\n<p>這個例子中，只要你的路徑是 <code>/photos</code> ，不管動詞是 get 還是 post 都能到這個頁面</p>\n<p>除此之外，還可以使用 all 表示全部的 action 都可以到這裡：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">match <span class=\"string\">'photos'</span>, <span class=\"symbol\">to:</span> <span class=\"string\">'photos#show'</span>, <span class=\"symbol\">via:</span> <span class=\"symbol\">:all</span></span><br></pre></td></tr></table></figure>\n<p>Rails 裡面路徑的介紹就先到這裡了～</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/routing.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n<p><a href=\"https://rubyinrails.com/2019/04/23/rails-routes-concerns/\" target=\"_blank\" rel=\"noopener\">Rails routes concerns</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天繼續來探討 rails 的路徑寫法還有什麼眉角，看一看還真發現沒看過的寫法真多…</p>\n<h2>Shallow nesting</h2>\n<p>我們在使用 resource 表示路徑的時候，還可以做出巢狀的路徑</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resources <span class=\"symbol\">:magazines</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">  resources <span class=\"symbol\">:ads</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>雖然很方便，但一般建議一次巢狀就夠了，幾乎沒有什麼需求會用到兩層巢狀結構</p>\n<p>在巢狀結構下，有一種很常被使用：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resources <span class=\"symbol\">:articles</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">  resources <span class=\"symbol\">:comments</span>, <span class=\"symbol\">only:</span> [<span class=\"symbol\">:index</span>, <span class=\"symbol\">:new</span>, <span class=\"symbol\">:create</span>]</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">resources <span class=\"symbol\">:comments</span>, <span class=\"symbol\">only:</span> [<span class=\"symbol\">:show</span>, <span class=\"symbol\">:edit</span>, <span class=\"symbol\">:update</span>, <span class=\"symbol\">:destroy</span>]</span><br></pre></td></tr></table></figure>\n<p>這個的意思是說，每一篇文章都有自己的 comment，在新增跟建立的時候需要知道是哪篇文章，但在檢視每一則 comment 還有編輯修改刪除的時候並不需要</p>\n<p>因為太常用了，所以 Rails 賜它另一種好寫的方法</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resources <span class=\"symbol\">:articles</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">  resources <span class=\"symbol\">:comments</span>, <span class=\"symbol\">shallow:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>變形的寫法還有很多種，但關鍵字就是 shallow ，有需要可以自己再來 Rails Guide 查</p>\n<h2>Concerns</h2>\n<p>假如我們今天 user 跟 post 都同時需要巢狀路徑，而底下那層都是 image，我們需要把同樣的 code 寫兩次</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resource <span class=\"symbol\">:user</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">  resource <span class=\"symbol\">:image</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">resources <span class=\"symbol\">:posts</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">  resource <span class=\"symbol\">:image</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>對於堅持 DRY 理念的攻城屍來說，同樣的東西寫兩次就是不舒服！</p>\n<p>所以這樣的東西 Rails 也有提供另外的方法，上面的例子可以改寫如下：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">concern <span class=\"symbol\">:imageable</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">  resource <span class=\"symbol\">:image</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">resource <span class=\"symbol\">:user</span>, <span class=\"symbol\">concerns:</span> <span class=\"symbol\">:imageable</span></span><br><span class=\"line\">resources <span class=\"symbol\">:posts</span>, <span class=\"symbol\">concerns:</span> <span class=\"symbol\">:imageable</span></span><br></pre></td></tr></table></figure>\n<h2>Naming Routes</h2>\n<p>在使用 rails 的時候，大家一定都知道可以使用 resources 自動幫你加的路徑名字，比方說 candidates controller 裡面的 new 方法的路徑叫做 <code>new_candidate_path</code>，實際上我們可以用 <code>as</code> 的選項來修改</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">get <span class=\"string\">'exit'</span>, <span class=\"symbol\">to:</span> <span class=\"string\">'sessions#destroy'</span>, <span class=\"symbol\">as:</span> <span class=\"symbol\">:logout</span></span><br></pre></td></tr></table></figure>\n<p>就像這樣，我們如果使用 <code>logout_path</code> 就可以連結到 <code>/exit</code> 這個 url 了！</p>\n<h2>HTTP Verb Constraints</h2>\n<p>如果我們在碰到想要讓很多動作同時指到同一個路徑的話，可以使用 <code>via</code> 這個選項</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">match <span class=\"string\">'photos'</span>, <span class=\"symbol\">to:</span> <span class=\"string\">'photos#show'</span>, <span class=\"symbol\">via:</span> [<span class=\"symbol\">:get</span>, <span class=\"symbol\">:post</span>]</span><br></pre></td></tr></table></figure>\n<p>這個例子中，只要你的路徑是 <code>/photos</code> ，不管動詞是 get 還是 post 都能到這個頁面</p>\n<p>除此之外，還可以使用 all 表示全部的 action 都可以到這裡：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">match <span class=\"string\">'photos'</span>, <span class=\"symbol\">to:</span> <span class=\"string\">'photos#show'</span>, <span class=\"symbol\">via:</span> <span class=\"symbol\">:all</span></span><br></pre></td></tr></table></figure>\n<p>Rails 裡面路徑的介紹就先到這裡了～</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/routing.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n<p><a href=\"https://rubyinrails.com/2019/04/23/rails-routes-concerns/\" target=\"_blank\" rel=\"noopener\">Rails routes concerns</a></p>\n"},{"title":"Active Record Query Interface part1","catalog":true,"toc_nav_num":true,"date":"2019-10-04T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1567640069022-b93f580eadd7?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Rails"],"updateDate":"2019-10-04T14:26:24.000Z","_content":"\n## Active Record Query\n有人說，使用 Ruby on Rails 的工程師，SQL 語法通常不怎樣\n會這樣說的原因是， Rails 中的 Active record 查找實在太好用了，所以很少遇到找不到資料的狀況，也因此很少用 SQL 語法\n\nActive Record 跟大多數的 database 相容，像是 MySQL, MariaDB, PostgreSQL, 還有 SQLite 等等\n\n***\n## 查找單一資料\n\n### Find\n`find` 應該是一般來說會用最多的查找方法，它幫我們找到 primary key 符合的資料\n```ruby\n# 找到 primary_key (id) 是 10 的資料\nclient = Client.find(10)\n```\n在這裏提一下，如果沒有設定的話，primary_key 預設是 id 欄位\n\n其實 `find` 還可以查找多筆資料\n\n```ruby\n# 找到 primary_key (id) 是 1 跟 10 的資料\nclients = Client.find([1, 10])\n```\n\n不管是查找多筆資料還是單筆資料，只要有其中一筆資料找不到，就會跳出 `ActiveRecord::RecordNotFound` 這個例外\n\n\n### Take\n`take` 可以用來取不限定條件的資料\n\n```ruby\n# 取 Client 的第一筆資料做為 client 使用 (一個實體)\nclient = Client.take\n# 取 Client 的頭兩筆資料做為 clients 使用（一個陣列）\nclients = Client.take(2)\n```\n\n另外還有驚嘆號版本的 `take!` 不同點只在於驚嘆號版本在取不到資料時會跳出 `ActiveRecord::RecordNotFound` 例外\n\n### Find_by\n`find_by` 可以用自訂條件搜尋，並且回傳拿到的第一筆資料\n\n```ruby\n# 找 Client 其中 first_name == 'Lifo' 的第一筆資料\nClient.find_by(first_name: 'Lifo')\n```\n外還有驚嘆號版本的 `find_by!` 不同點只在於驚嘆號版本在取不到資料時會跳出 `ActiveRecord::RecordNotFound` 例外\n\n***\n## 查找多筆資料\n\n介紹查找多筆資料的方法之前，必須要知道如果我們要對大筆資料操作的話通常會使用 `Model.all.each`，但在資料庫的資料很多的情況下，這樣有可能會超過記憶體空間，基於這個理由，Rails 又另外設計兩種方法可供選擇\n\n### Find_each\n`find_each` 會把資料分成好幾批，拿了一批資料再把這一批裡面的每一筆放到 block 中處理，處理完這一批再繼續下一批\n\n```ruby\nUser.find_each do |user|\n  NewsMailer.weekly(user).deliver_now\nend\n```\n\n\n\n### Find_in_batch\n`find_in_batches` 一樣把資料分成好幾批，不同的是他會把整批資料放到 block 中做處理\n\n\n### 可以用的選項\n可以用的選項有 `:batch_size` ，用來指定要把多少筆資料分成一批，預設是 1000 筆資料\n\n`:finish` 跟 `:start` 這兩個選項用來指定要從哪個資料開始處理，並且要處理到哪個資料為止\n\n我們今天的內容就到這裡囉！\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/active_record_querying.html)\n","source":"_posts/2019-10-04-day28.md","raw":"---\ntitle: \"Active Record Query Interface part1\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-10-04 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1567640069022-b93f580eadd7?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-10-04 22:26:24\n# top: 1\n\n---\n\n## Active Record Query\n有人說，使用 Ruby on Rails 的工程師，SQL 語法通常不怎樣\n會這樣說的原因是， Rails 中的 Active record 查找實在太好用了，所以很少遇到找不到資料的狀況，也因此很少用 SQL 語法\n\nActive Record 跟大多數的 database 相容，像是 MySQL, MariaDB, PostgreSQL, 還有 SQLite 等等\n\n***\n## 查找單一資料\n\n### Find\n`find` 應該是一般來說會用最多的查找方法，它幫我們找到 primary key 符合的資料\n```ruby\n# 找到 primary_key (id) 是 10 的資料\nclient = Client.find(10)\n```\n在這裏提一下，如果沒有設定的話，primary_key 預設是 id 欄位\n\n其實 `find` 還可以查找多筆資料\n\n```ruby\n# 找到 primary_key (id) 是 1 跟 10 的資料\nclients = Client.find([1, 10])\n```\n\n不管是查找多筆資料還是單筆資料，只要有其中一筆資料找不到，就會跳出 `ActiveRecord::RecordNotFound` 這個例外\n\n\n### Take\n`take` 可以用來取不限定條件的資料\n\n```ruby\n# 取 Client 的第一筆資料做為 client 使用 (一個實體)\nclient = Client.take\n# 取 Client 的頭兩筆資料做為 clients 使用（一個陣列）\nclients = Client.take(2)\n```\n\n另外還有驚嘆號版本的 `take!` 不同點只在於驚嘆號版本在取不到資料時會跳出 `ActiveRecord::RecordNotFound` 例外\n\n### Find_by\n`find_by` 可以用自訂條件搜尋，並且回傳拿到的第一筆資料\n\n```ruby\n# 找 Client 其中 first_name == 'Lifo' 的第一筆資料\nClient.find_by(first_name: 'Lifo')\n```\n外還有驚嘆號版本的 `find_by!` 不同點只在於驚嘆號版本在取不到資料時會跳出 `ActiveRecord::RecordNotFound` 例外\n\n***\n## 查找多筆資料\n\n介紹查找多筆資料的方法之前，必須要知道如果我們要對大筆資料操作的話通常會使用 `Model.all.each`，但在資料庫的資料很多的情況下，這樣有可能會超過記憶體空間，基於這個理由，Rails 又另外設計兩種方法可供選擇\n\n### Find_each\n`find_each` 會把資料分成好幾批，拿了一批資料再把這一批裡面的每一筆放到 block 中處理，處理完這一批再繼續下一批\n\n```ruby\nUser.find_each do |user|\n  NewsMailer.weekly(user).deliver_now\nend\n```\n\n\n\n### Find_in_batch\n`find_in_batches` 一樣把資料分成好幾批，不同的是他會把整批資料放到 block 中做處理\n\n\n### 可以用的選項\n可以用的選項有 `:batch_size` ，用來指定要把多少筆資料分成一批，預設是 1000 筆資料\n\n`:finish` 跟 `:start` 這兩個選項用來指定要從哪個資料開始處理，並且要處理到哪個資料為止\n\n我們今天的內容就到這裡囉！\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/active_record_querying.html)\n","slug":"2019-10-04-day28","published":1,"updated":"2019-11-22T06:53:34.460Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0euk001j2ob105b7o2lf","content":"<h2 id=\"active-record-query\">Active Record Query</h2>\n<p>有人說，使用 Ruby on Rails 的工程師，SQL 語法通常不怎樣<br>\n會這樣說的原因是， Rails 中的 Active record 查找實在太好用了，所以很少遇到找不到資料的狀況，也因此很少用 SQL 語法</p>\n<p>Active Record 跟大多數的 database 相容，像是 MySQL, MariaDB, PostgreSQL, 還有 SQLite 等等</p>\n<hr>\n<h2 id=\"查找單一資料\">查找單一資料</h2>\n<h3 id=\"find\">Find</h3>\n<p><code>find</code> 應該是一般來說會用最多的查找方法，它幫我們找到 primary key 符合的資料</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 找到 primary_key (id) 是 10 的資料</span></span><br><span class=\"line\">client = Client.find(<span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\n<p>在這裏提一下，如果沒有設定的話，primary_key 預設是 id 欄位</p>\n<p>其實 <code>find</code> 還可以查找多筆資料</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 找到 primary_key (id) 是 1 跟 10 的資料</span></span><br><span class=\"line\">clients = Client.find([<span class=\"number\">1</span>, <span class=\"number\">10</span>])</span><br></pre></td></tr></table></figure>\n<p>不管是查找多筆資料還是單筆資料，只要有其中一筆資料找不到，就會跳出 <code>ActiveRecord::RecordNotFound</code> 這個例外</p>\n<h3 id=\"take\">Take</h3>\n<p><code>take</code> 可以用來取不限定條件的資料</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 取 Client 的第一筆資料做為 client 使用 (一個實體)</span></span><br><span class=\"line\">client = Client.take</span><br><span class=\"line\"><span class=\"comment\"># 取 Client 的頭兩筆資料做為 clients 使用（一個陣列）</span></span><br><span class=\"line\">clients = Client.take(<span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n<p>另外還有驚嘆號版本的 <code>take!</code> 不同點只在於驚嘆號版本在取不到資料時會跳出 <code>ActiveRecord::RecordNotFound</code> 例外</p>\n<h3 id=\"find_by\">Find_by</h3>\n<p><code>find_by</code> 可以用自訂條件搜尋，並且回傳拿到的第一筆資料</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 找 Client 其中 first_name == 'Lifo' 的第一筆資料</span></span><br><span class=\"line\">Client.find_by(<span class=\"symbol\">first_name:</span> <span class=\"string\">'Lifo'</span>)</span><br></pre></td></tr></table></figure>\n<p>外還有驚嘆號版本的 <code>find_by!</code> 不同點只在於驚嘆號版本在取不到資料時會跳出 <code>ActiveRecord::RecordNotFound</code> 例外</p>\n<hr>\n<h2 id=\"查找多筆資料\">查找多筆資料</h2>\n<p>介紹查找多筆資料的方法之前，必須要知道如果我們要對大筆資料操作的話通常會使用 <code>Model.all.each</code>，但在資料庫的資料很多的情況下，這樣有可能會超過記憶體空間，基於這個理由，Rails 又另外設計兩種方法可供選擇</p>\n<h3 id=\"find_each\">Find_each</h3>\n<p><code>find_each</code> 會把資料分成好幾批，拿了一批資料再把這一批裡面的每一筆放到 block 中處理，處理完這一批再繼續下一批</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User.find_each <span class=\"keyword\">do</span> <span class=\"params\">|user|</span></span><br><span class=\"line\">  NewsMailer.weekly(user).deliver_now</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"find_in_batch\">Find_in_batch</h3>\n<p><code>find_in_batches</code> 一樣把資料分成好幾批，不同的是他會把整批資料放到 block 中做處理</p>\n<h3 id=\"可以用的選項\">可以用的選項</h3>\n<p>可以用的選項有 <code>:batch_size</code> ，用來指定要把多少筆資料分成一批，預設是 1000 筆資料</p>\n<p><code>:finish</code> 跟 <code>:start</code> 這兩個選項用來指定要從哪個資料開始處理，並且要處理到哪個資料為止</p>\n<p>我們今天的內容就到這裡囉！</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/active_record_querying.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2>Active Record Query</h2>\n<p>有人說，使用 Ruby on Rails 的工程師，SQL 語法通常不怎樣<br>\n會這樣說的原因是， Rails 中的 Active record 查找實在太好用了，所以很少遇到找不到資料的狀況，也因此很少用 SQL 語法</p>\n<p>Active Record 跟大多數的 database 相容，像是 MySQL, MariaDB, PostgreSQL, 還有 SQLite 等等</p>\n<hr>\n<h2>查找單一資料</h2>\n<h3>Find</h3>\n<p><code>find</code> 應該是一般來說會用最多的查找方法，它幫我們找到 primary key 符合的資料</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 找到 primary_key (id) 是 10 的資料</span></span><br><span class=\"line\">client = Client.find(<span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\n<p>在這裏提一下，如果沒有設定的話，primary_key 預設是 id 欄位</p>\n<p>其實 <code>find</code> 還可以查找多筆資料</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 找到 primary_key (id) 是 1 跟 10 的資料</span></span><br><span class=\"line\">clients = Client.find([<span class=\"number\">1</span>, <span class=\"number\">10</span>])</span><br></pre></td></tr></table></figure>\n<p>不管是查找多筆資料還是單筆資料，只要有其中一筆資料找不到，就會跳出 <code>ActiveRecord::RecordNotFound</code> 這個例外</p>\n<h3>Take</h3>\n<p><code>take</code> 可以用來取不限定條件的資料</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 取 Client 的第一筆資料做為 client 使用 (一個實體)</span></span><br><span class=\"line\">client = Client.take</span><br><span class=\"line\"><span class=\"comment\"># 取 Client 的頭兩筆資料做為 clients 使用（一個陣列）</span></span><br><span class=\"line\">clients = Client.take(<span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n<p>另外還有驚嘆號版本的 <code>take!</code> 不同點只在於驚嘆號版本在取不到資料時會跳出 <code>ActiveRecord::RecordNotFound</code> 例外</p>\n<h3>Find_by</h3>\n<p><code>find_by</code> 可以用自訂條件搜尋，並且回傳拿到的第一筆資料</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 找 Client 其中 first_name == 'Lifo' 的第一筆資料</span></span><br><span class=\"line\">Client.find_by(<span class=\"symbol\">first_name:</span> <span class=\"string\">'Lifo'</span>)</span><br></pre></td></tr></table></figure>\n<p>外還有驚嘆號版本的 <code>find_by!</code> 不同點只在於驚嘆號版本在取不到資料時會跳出 <code>ActiveRecord::RecordNotFound</code> 例外</p>\n<hr>\n<h2>查找多筆資料</h2>\n<p>介紹查找多筆資料的方法之前，必須要知道如果我們要對大筆資料操作的話通常會使用 <code>Model.all.each</code>，但在資料庫的資料很多的情況下，這樣有可能會超過記憶體空間，基於這個理由，Rails 又另外設計兩種方法可供選擇</p>\n<h3>Find_each</h3>\n<p><code>find_each</code> 會把資料分成好幾批，拿了一批資料再把這一批裡面的每一筆放到 block 中處理，處理完這一批再繼續下一批</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User.find_each <span class=\"keyword\">do</span> <span class=\"params\">|user|</span></span><br><span class=\"line\">  NewsMailer.weekly(user).deliver_now</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<h3>Find_in_batch</h3>\n<p><code>find_in_batches</code> 一樣把資料分成好幾批，不同的是他會把整批資料放到 block 中做處理</p>\n<h3>可以用的選項</h3>\n<p>可以用的選項有 <code>:batch_size</code> ，用來指定要把多少筆資料分成一批，預設是 1000 筆資料</p>\n<p><code>:finish</code> 跟 <code>:start</code> 這兩個選項用來指定要從哪個資料開始處理，並且要處理到哪個資料為止</p>\n<p>我們今天的內容就到這裡囉！</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/active_record_querying.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n"},{"title":"Rails Routing part1","catalog":true,"toc_nav_num":true,"date":"2019-10-02T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1446080501695-8e929f879f2b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1567&q=80","catagories":["Rails"],"updateDate":"2019-10-02T14:26:24.000Z","_content":"\n今天的主要內容都來自[這裏](https://guides.rubyonrails.org/routing.html)，在介紹 Rails 的 routes 寫法\n## 土炮寫法\nroutes 在 rails 裡面非常重要，就算你的程式寫得再好忘記加上路徑就也沒人能找到你的頁面\n\n最土砲的寫法，就是使用 get 跟 to 來引導到正確的頁面\n\n```ruby\n#routes.rb\nget '/patients/:id', to: 'patients#show'\n```\n或是可以把 controller 跟 action 寫的更直白\n\n```ruby\n#routes.rb\nget '/patients/:id', action: :show, controller: 'patients'\n```\n\n上面這個例子會引導到 patients controller 裡面的 show action，然後 id 會去抓 `params[:id]` 內容\n\n## 慣例寫法\n不過 routes 最常用的還是使用慣例的 resources 方法，他會幫你產生 7 條常用的路徑如下範例\n\n```ruby\n#routes.rb\nresources :photos\n```\n![](https://i.imgur.com/Ch5ZrWk.png)\n\n當你的這個 controller 並不是複數的時候，也已經幫我們準備好這個慣例了，這種情況下就是少了 index 的頁面\n```ruby\n#routes.rb\nresource :geocoder\n```\n![](https://i.imgur.com/w2b6d1B.png)\n## 設計慣例 routes\n我們還可以在 routes 上面加上一些設計，比方說加上 namespace: \n```ruby\nnamespace :admin do\n  resources :articles\nend\n```\n除了路徑需要改之外，你的 controller 也要使用 Admin::ArticlesController 來做設定喔\n\n那如果我不想改 controller 只想改路徑勒？\n\n```ruby\nscope '/admin' do\n  resources :articles, :comments\nend\n# 或者\nresources :articles, path: '/admin/articles'\n```\n\n如此一來只有路徑會變，controller 不變\n\n那如果我只想改 controller 不想改路徑呢？\n\n```ruby\nscope module: 'admin' do\n  resources :articles, :comments\nend\n# 或者\nresources :articles, path: '/admin/articles'\n```\n如此一般，你的路徑還是不變，但 controller 已經變成 Admin::ArticlesController 囉\n\n今天的內容就到這裡囉～我們明天見！\n\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/routing.html)\n\n\n","source":"_posts/2019-10-02-day26.md","raw":"---\ntitle: \"Rails Routing part1\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-10-02 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1446080501695-8e929f879f2b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1567&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-10-02 22:26:24\n# top: 1\n\n---\n\n今天的主要內容都來自[這裏](https://guides.rubyonrails.org/routing.html)，在介紹 Rails 的 routes 寫法\n## 土炮寫法\nroutes 在 rails 裡面非常重要，就算你的程式寫得再好忘記加上路徑就也沒人能找到你的頁面\n\n最土砲的寫法，就是使用 get 跟 to 來引導到正確的頁面\n\n```ruby\n#routes.rb\nget '/patients/:id', to: 'patients#show'\n```\n或是可以把 controller 跟 action 寫的更直白\n\n```ruby\n#routes.rb\nget '/patients/:id', action: :show, controller: 'patients'\n```\n\n上面這個例子會引導到 patients controller 裡面的 show action，然後 id 會去抓 `params[:id]` 內容\n\n## 慣例寫法\n不過 routes 最常用的還是使用慣例的 resources 方法，他會幫你產生 7 條常用的路徑如下範例\n\n```ruby\n#routes.rb\nresources :photos\n```\n![](https://i.imgur.com/Ch5ZrWk.png)\n\n當你的這個 controller 並不是複數的時候，也已經幫我們準備好這個慣例了，這種情況下就是少了 index 的頁面\n```ruby\n#routes.rb\nresource :geocoder\n```\n![](https://i.imgur.com/w2b6d1B.png)\n## 設計慣例 routes\n我們還可以在 routes 上面加上一些設計，比方說加上 namespace: \n```ruby\nnamespace :admin do\n  resources :articles\nend\n```\n除了路徑需要改之外，你的 controller 也要使用 Admin::ArticlesController 來做設定喔\n\n那如果我不想改 controller 只想改路徑勒？\n\n```ruby\nscope '/admin' do\n  resources :articles, :comments\nend\n# 或者\nresources :articles, path: '/admin/articles'\n```\n\n如此一來只有路徑會變，controller 不變\n\n那如果我只想改 controller 不想改路徑呢？\n\n```ruby\nscope module: 'admin' do\n  resources :articles, :comments\nend\n# 或者\nresources :articles, path: '/admin/articles'\n```\n如此一般，你的路徑還是不變，但 controller 已經變成 Admin::ArticlesController 囉\n\n今天的內容就到這裡囉～我們明天見！\n\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/routing.html)\n\n\n","slug":"2019-10-02-day26","published":1,"updated":"2019-11-22T06:52:45.712Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0eul001l2ob1paxfhs4o","content":"<p>今天的主要內容都來自<a href=\"https://guides.rubyonrails.org/routing.html\" target=\"_blank\" rel=\"noopener\">這裏</a>，在介紹 Rails 的 routes 寫法</p>\n<h2 id=\"土炮寫法\">土炮寫法</h2>\n<p>routes 在 rails 裡面非常重要，就算你的程式寫得再好忘記加上路徑就也沒人能找到你的頁面</p>\n<p>最土砲的寫法，就是使用 get 跟 to 來引導到正確的頁面</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#routes.rb</span></span><br><span class=\"line\">get <span class=\"string\">'/patients/:id'</span>, <span class=\"symbol\">to:</span> <span class=\"string\">'patients#show'</span></span><br></pre></td></tr></table></figure>\n<p>或是可以把 controller 跟 action 寫的更直白</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#routes.rb</span></span><br><span class=\"line\">get <span class=\"string\">'/patients/:id'</span>, <span class=\"symbol\">action:</span> <span class=\"symbol\">:show</span>, <span class=\"symbol\">controller:</span> <span class=\"string\">'patients'</span></span><br></pre></td></tr></table></figure>\n<p>上面這個例子會引導到 patients controller 裡面的 show action，然後 id 會去抓 <code>params[:id]</code> 內容</p>\n<h2 id=\"慣例寫法\">慣例寫法</h2>\n<p>不過 routes 最常用的還是使用慣例的 resources 方法，他會幫你產生 7 條常用的路徑如下範例</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#routes.rb</span></span><br><span class=\"line\">resources <span class=\"symbol\">:photos</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://i.imgur.com/Ch5ZrWk.png\" alt=\"\"></p>\n<p>當你的這個 controller 並不是複數的時候，也已經幫我們準備好這個慣例了，這種情況下就是少了 index 的頁面</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#routes.rb</span></span><br><span class=\"line\">resource <span class=\"symbol\">:geocoder</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://i.imgur.com/w2b6d1B.png\" alt=\"\"></p>\n<h2 id=\"設計慣例-routes\">設計慣例 routes</h2>\n<p>我們還可以在 routes 上面加上一些設計，比方說加上 namespace:</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">namespace <span class=\"symbol\">:admin</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">  resources <span class=\"symbol\">:articles</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>除了路徑需要改之外，你的 controller 也要使用 Admin::ArticlesController 來做設定喔</p>\n<p>那如果我不想改 controller 只想改路徑勒？</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scope <span class=\"string\">'/admin'</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">  resources <span class=\"symbol\">:articles</span>, <span class=\"symbol\">:comments</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\"># 或者</span></span><br><span class=\"line\">resources <span class=\"symbol\">:articles</span>, <span class=\"symbol\">path:</span> <span class=\"string\">'/admin/articles'</span></span><br></pre></td></tr></table></figure>\n<p>如此一來只有路徑會變，controller 不變</p>\n<p>那如果我只想改 controller 不想改路徑呢？</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scope <span class=\"class\"><span class=\"keyword\">module</span>: '<span class=\"title\">admin</span>' <span class=\"title\">do</span></span></span><br><span class=\"line\">  resources <span class=\"symbol\">:articles</span>, <span class=\"symbol\">:comments</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\"># 或者</span></span><br><span class=\"line\">resources <span class=\"symbol\">:articles</span>, <span class=\"symbol\">path:</span> <span class=\"string\">'/admin/articles'</span></span><br></pre></td></tr></table></figure>\n<p>如此一般，你的路徑還是不變，但 controller 已經變成 Admin::ArticlesController 囉</p>\n<p>今天的內容就到這裡囉～我們明天見！</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/routing.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天的主要內容都來自<a href=\"https://guides.rubyonrails.org/routing.html\" target=\"_blank\" rel=\"noopener\">這裏</a>，在介紹 Rails 的 routes 寫法</p>\n<h2>土炮寫法</h2>\n<p>routes 在 rails 裡面非常重要，就算你的程式寫得再好忘記加上路徑就也沒人能找到你的頁面</p>\n<p>最土砲的寫法，就是使用 get 跟 to 來引導到正確的頁面</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#routes.rb</span></span><br><span class=\"line\">get <span class=\"string\">'/patients/:id'</span>, <span class=\"symbol\">to:</span> <span class=\"string\">'patients#show'</span></span><br></pre></td></tr></table></figure>\n<p>或是可以把 controller 跟 action 寫的更直白</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#routes.rb</span></span><br><span class=\"line\">get <span class=\"string\">'/patients/:id'</span>, <span class=\"symbol\">action:</span> <span class=\"symbol\">:show</span>, <span class=\"symbol\">controller:</span> <span class=\"string\">'patients'</span></span><br></pre></td></tr></table></figure>\n<p>上面這個例子會引導到 patients controller 裡面的 show action，然後 id 會去抓 <code>params[:id]</code> 內容</p>\n<h2>慣例寫法</h2>\n<p>不過 routes 最常用的還是使用慣例的 resources 方法，他會幫你產生 7 條常用的路徑如下範例</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#routes.rb</span></span><br><span class=\"line\">resources <span class=\"symbol\">:photos</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://i.imgur.com/Ch5ZrWk.png\" alt=\"\"></p>\n<p>當你的這個 controller 並不是複數的時候，也已經幫我們準備好這個慣例了，這種情況下就是少了 index 的頁面</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#routes.rb</span></span><br><span class=\"line\">resource <span class=\"symbol\">:geocoder</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://i.imgur.com/w2b6d1B.png\" alt=\"\"></p>\n<h2>設計慣例 routes</h2>\n<p>我們還可以在 routes 上面加上一些設計，比方說加上 namespace:</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">namespace <span class=\"symbol\">:admin</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">  resources <span class=\"symbol\">:articles</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>除了路徑需要改之外，你的 controller 也要使用 Admin::ArticlesController 來做設定喔</p>\n<p>那如果我不想改 controller 只想改路徑勒？</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scope <span class=\"string\">'/admin'</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">  resources <span class=\"symbol\">:articles</span>, <span class=\"symbol\">:comments</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\"># 或者</span></span><br><span class=\"line\">resources <span class=\"symbol\">:articles</span>, <span class=\"symbol\">path:</span> <span class=\"string\">'/admin/articles'</span></span><br></pre></td></tr></table></figure>\n<p>如此一來只有路徑會變，controller 不變</p>\n<p>那如果我只想改 controller 不想改路徑呢？</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scope <span class=\"class\"><span class=\"keyword\">module</span>: '<span class=\"title\">admin</span>' <span class=\"title\">do</span></span></span><br><span class=\"line\">  resources <span class=\"symbol\">:articles</span>, <span class=\"symbol\">:comments</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\"># 或者</span></span><br><span class=\"line\">resources <span class=\"symbol\">:articles</span>, <span class=\"symbol\">path:</span> <span class=\"string\">'/admin/articles'</span></span><br></pre></td></tr></table></figure>\n<p>如此一般，你的路徑還是不變，但 controller 已經變成 Admin::ArticlesController 囉</p>\n<p>今天的內容就到這裡囉～我們明天見！</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/routing.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n"},{"title":"鐵人賽 30 天完賽感言\"","catalog":true,"toc_nav_num":true,"date":"2019-10-06T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1570210923195-885c37e677f1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Rails"],"updateDate":"2019-10-06T14:26:24.000Z","_content":"\n完賽的第一句心得，必須一定要說一下：\n## 看 Rails Guide 真的好催眠 R\n\n真的就有點像在看家電使用說明的感覺，雖然有時候會覺得: Wow，竟然有這樣的功能啊，但過了一會還是覺得好想睡ＸＤ\n\n不過也必須說，看 Rails Guide 對寫 Rails 來說的確是很有幫助的，雖然當下可能有點忘記如何使用，但會知道 Rails 有這樣的功能，也大概知道會是在哪裡可以找到使用說明，在這時候就會覺得幸好努力沒有白費ＸＤ\n\n## 過程中的困難\n\n在參加鐵人賽的期間，同時還在做協作專案，這真的是滿辛苦的一件事情，因為平均鐵人賽的一篇文章大約會花費我一個小時的時間，有時候總會在現在要寫文章呢？還是要做專案呢？在這兩者之間抉擇，幸好最後還是順利完成了ＸＤ\n\n## 明年呢？\n\n目前因為技術還不太到位的關係，只能寫寫這種很像在幫人翻譯的文章～但是如果明年再參加，希望是可以每天做一個小作品這樣的形式，這樣應該會更挑戰但也更對其他人有所幫助～\n\n","source":"_posts/2019-10-06-day30.md","raw":"---\ntitle: 鐵人賽 30 天完賽感言\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-10-06 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1570210923195-885c37e677f1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-10-06 22:26:24\n# top: 1\n\n---\n\n完賽的第一句心得，必須一定要說一下：\n## 看 Rails Guide 真的好催眠 R\n\n真的就有點像在看家電使用說明的感覺，雖然有時候會覺得: Wow，竟然有這樣的功能啊，但過了一會還是覺得好想睡ＸＤ\n\n不過也必須說，看 Rails Guide 對寫 Rails 來說的確是很有幫助的，雖然當下可能有點忘記如何使用，但會知道 Rails 有這樣的功能，也大概知道會是在哪裡可以找到使用說明，在這時候就會覺得幸好努力沒有白費ＸＤ\n\n## 過程中的困難\n\n在參加鐵人賽的期間，同時還在做協作專案，這真的是滿辛苦的一件事情，因為平均鐵人賽的一篇文章大約會花費我一個小時的時間，有時候總會在現在要寫文章呢？還是要做專案呢？在這兩者之間抉擇，幸好最後還是順利完成了ＸＤ\n\n## 明年呢？\n\n目前因為技術還不太到位的關係，只能寫寫這種很像在幫人翻譯的文章～但是如果明年再參加，希望是可以每天做一個小作品這樣的形式，這樣應該會更挑戰但也更對其他人有所幫助～\n\n","slug":"2019-10-06-day30","published":1,"updated":"2019-11-22T06:54:18.655Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0eum001n2ob14eyow029","content":"<p>完賽的第一句心得，必須一定要說一下：</p>\n<h2 id=\"看-rails-guide-真的好催眠-r\">看 Rails Guide 真的好催眠 R</h2>\n<p>真的就有點像在看家電使用說明的感覺，雖然有時候會覺得: Wow，竟然有這樣的功能啊，但過了一會還是覺得好想睡ＸＤ</p>\n<p>不過也必須說，看 Rails Guide 對寫 Rails 來說的確是很有幫助的，雖然當下可能有點忘記如何使用，但會知道 Rails 有這樣的功能，也大概知道會是在哪裡可以找到使用說明，在這時候就會覺得幸好努力沒有白費ＸＤ</p>\n<h2 id=\"過程中的困難\">過程中的困難</h2>\n<p>在參加鐵人賽的期間，同時還在做協作專案，這真的是滿辛苦的一件事情，因為平均鐵人賽的一篇文章大約會花費我一個小時的時間，有時候總會在現在要寫文章呢？還是要做專案呢？在這兩者之間抉擇，幸好最後還是順利完成了ＸＤ</p>\n<h2 id=\"明年呢\">明年呢？</h2>\n<p>目前因為技術還不太到位的關係，只能寫寫這種很像在幫人翻譯的文章～但是如果明年再參加，希望是可以每天做一個小作品這樣的形式，這樣應該會更挑戰但也更對其他人有所幫助～</p>\n","site":{"data":{}},"excerpt":"","more":"<p>完賽的第一句心得，必須一定要說一下：</p>\n<h2>看 Rails Guide 真的好催眠 R</h2>\n<p>真的就有點像在看家電使用說明的感覺，雖然有時候會覺得: Wow，竟然有這樣的功能啊，但過了一會還是覺得好想睡ＸＤ</p>\n<p>不過也必須說，看 Rails Guide 對寫 Rails 來說的確是很有幫助的，雖然當下可能有點忘記如何使用，但會知道 Rails 有這樣的功能，也大概知道會是在哪裡可以找到使用說明，在這時候就會覺得幸好努力沒有白費ＸＤ</p>\n<h2>過程中的困難</h2>\n<p>在參加鐵人賽的期間，同時還在做協作專案，這真的是滿辛苦的一件事情，因為平均鐵人賽的一篇文章大約會花費我一個小時的時間，有時候總會在現在要寫文章呢？還是要做專案呢？在這兩者之間抉擇，幸好最後還是順利完成了ＸＤ</p>\n<h2>明年呢？</h2>\n<p>目前因為技術還不太到位的關係，只能寫寫這種很像在幫人翻譯的文章～但是如果明年再參加，希望是可以每天做一個小作品這樣的形式，這樣應該會更挑戰但也更對其他人有所幫助～</p>\n"},{"title":"Active Record Query Interface part2","catalog":true,"toc_nav_num":true,"date":"2019-10-05T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1569834381156-7b735e41e57d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2089&q=80","catagories":["Rails"],"updateDate":"2019-10-05T14:26:24.000Z","_content":"\n今天繼續來看看昨天沒看完的部分！\n\n## Active Record 搜尋的條件\n\n- 純字串\n\n我們在搜尋時，可以直接在條件使用字串\n```ruby\nClient.where(\"orders_count = '2'\")\n```\n這個例子會抓出 order_count 是 2 的所有 customer 集合\n- Array Conditions (字串搜尋多條件)\n\n除了使用字串之外，可以使用陣列的方式，陣列的第一個值放字串，其中有幾個問號，後面就要有幾個相對應的值\n或者像是下面的第三個範例較為複雜，雖然是以陣列的方式呈現，但抓的值在後面以 Hash 呈現\n```ruby\nClient.where(\"orders_count = ?\", params[:orders])\n\nClient.where(\"orders_count = ? AND locked = ?\", params[:orders], false)\n\nClient.where(\"created_at >= :start_date AND created_at <= :end_date\",\n  {start_date: params[:start_date], end_date: params[:end_date]})\n```\n\n- Hash conditions\n\n使用 Hash 方式尋找應該是最常見的方式\n```ruby\nClient.where(locked: true)\n```\n然後如果要同時找某個 key 符合多個條件可以使用陣列\n\n```ruby\nClient.where(orders_count: [1,3,5])\n```\n使用 Hash 條件搜尋還可以包括範圍\n```ruby\nClient.where(created_at: (Time.now.midnight - 1.day)..Time.now.midnight)\n```\n***\n## 選擇特定欄位\n\n在前面的搜尋中，我們拿到的資料都是全部的欄位，如果只想要篩選特定欄位，可以使用 `select` 這個方法\n```ruby\nClient.select(:viewable_by, :locked)\n# OR\nClient.select(\"viewable_by, locked\")\n```\n***\n## Limit and Offset\n\n `limit` 用來限制拿出來的資料有多少筆， `offset` 用來表示要從哪一比資料開始算起\n```ruby\nClient.limit(5).offset(30)\n```\n這個例子就是從第 31 筆開始拿 5 筆資料出來，一般來說這兩個方法最常用在分頁的時候\n***\n## Eager Loading Associations\n\nEager loading 的機制主要是讓搜尋資料庫的時候，可以盡量減少搜尋次數，我們看看下面的例子\n\n```ruby\nclients = Client.limit(10)\n \nclients.each do |client|\n  puts client.address.postcode\nend\n```\n這個例子裡面，第一次搜尋是抓出 client 前 10 筆資料，後面還有 10 次搜尋是找出每個 client 的 address，所以總共進行了 11 次搜尋，這就是 N + 1 問題\n\n我們可以使用 `includes` 這個方法改寫上面的例子\n\n```ruby\nclients = Client.includes(:address).limit(10)\n \nclients.each do |client|\n  puts client.address.postcode\nend\n```\n如此一來就只會進行兩次搜尋！\n\n那如果是比較複雜的結構呢？\n\n```ruby\nCategory.includes(articles: [{ comments: :guest }, :tags]).find(1)\n```\n這個例子會拿到 id 是 1 的 Category 資料，另外也去讀取跟他有關的文章，還有跟這些文章有關的 comments / tags，還有每個 comment 的 guest 關聯\n\n那今天的文章就寫到這裡啦！\n\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/active_record_querying.html)\n","source":"_posts/2019-10-05-day29.md","raw":"---\ntitle: \"Active Record Query Interface part2\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-10-05 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1569834381156-7b735e41e57d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2089&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-10-05 22:26:24\n# top: 1\n\n---\n\n今天繼續來看看昨天沒看完的部分！\n\n## Active Record 搜尋的條件\n\n- 純字串\n\n我們在搜尋時，可以直接在條件使用字串\n```ruby\nClient.where(\"orders_count = '2'\")\n```\n這個例子會抓出 order_count 是 2 的所有 customer 集合\n- Array Conditions (字串搜尋多條件)\n\n除了使用字串之外，可以使用陣列的方式，陣列的第一個值放字串，其中有幾個問號，後面就要有幾個相對應的值\n或者像是下面的第三個範例較為複雜，雖然是以陣列的方式呈現，但抓的值在後面以 Hash 呈現\n```ruby\nClient.where(\"orders_count = ?\", params[:orders])\n\nClient.where(\"orders_count = ? AND locked = ?\", params[:orders], false)\n\nClient.where(\"created_at >= :start_date AND created_at <= :end_date\",\n  {start_date: params[:start_date], end_date: params[:end_date]})\n```\n\n- Hash conditions\n\n使用 Hash 方式尋找應該是最常見的方式\n```ruby\nClient.where(locked: true)\n```\n然後如果要同時找某個 key 符合多個條件可以使用陣列\n\n```ruby\nClient.where(orders_count: [1,3,5])\n```\n使用 Hash 條件搜尋還可以包括範圍\n```ruby\nClient.where(created_at: (Time.now.midnight - 1.day)..Time.now.midnight)\n```\n***\n## 選擇特定欄位\n\n在前面的搜尋中，我們拿到的資料都是全部的欄位，如果只想要篩選特定欄位，可以使用 `select` 這個方法\n```ruby\nClient.select(:viewable_by, :locked)\n# OR\nClient.select(\"viewable_by, locked\")\n```\n***\n## Limit and Offset\n\n `limit` 用來限制拿出來的資料有多少筆， `offset` 用來表示要從哪一比資料開始算起\n```ruby\nClient.limit(5).offset(30)\n```\n這個例子就是從第 31 筆開始拿 5 筆資料出來，一般來說這兩個方法最常用在分頁的時候\n***\n## Eager Loading Associations\n\nEager loading 的機制主要是讓搜尋資料庫的時候，可以盡量減少搜尋次數，我們看看下面的例子\n\n```ruby\nclients = Client.limit(10)\n \nclients.each do |client|\n  puts client.address.postcode\nend\n```\n這個例子裡面，第一次搜尋是抓出 client 前 10 筆資料，後面還有 10 次搜尋是找出每個 client 的 address，所以總共進行了 11 次搜尋，這就是 N + 1 問題\n\n我們可以使用 `includes` 這個方法改寫上面的例子\n\n```ruby\nclients = Client.includes(:address).limit(10)\n \nclients.each do |client|\n  puts client.address.postcode\nend\n```\n如此一來就只會進行兩次搜尋！\n\n那如果是比較複雜的結構呢？\n\n```ruby\nCategory.includes(articles: [{ comments: :guest }, :tags]).find(1)\n```\n這個例子會拿到 id 是 1 的 Category 資料，另外也去讀取跟他有關的文章，還有跟這些文章有關的 comments / tags，還有每個 comment 的 guest 關聯\n\n那今天的文章就寫到這裡啦！\n\n\n參考資料：\n\n[Rails Guide](https://guides.rubyonrails.org/active_record_querying.html)\n","slug":"2019-10-05-day29","published":1,"updated":"2019-11-22T06:53:54.484Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0eun001p2ob1zvj25rth","content":"<p>今天繼續來看看昨天沒看完的部分！</p>\n<h2 id=\"active-record-搜尋的條件\">Active Record 搜尋的條件</h2>\n<ul>\n<li>純字串</li>\n</ul>\n<p>我們在搜尋時，可以直接在條件使用字串</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client.where(<span class=\"string\">\"orders_count = '2'\"</span>)</span><br></pre></td></tr></table></figure>\n<p>這個例子會抓出 order_count 是 2 的所有 customer 集合</p>\n<ul>\n<li>Array Conditions (字串搜尋多條件)</li>\n</ul>\n<p>除了使用字串之外，可以使用陣列的方式，陣列的第一個值放字串，其中有幾個問號，後面就要有幾個相對應的值<br>\n或者像是下面的第三個範例較為複雜，雖然是以陣列的方式呈現，但抓的值在後面以 Hash 呈現</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client.where(<span class=\"string\">\"orders_count = ?\"</span>, params[<span class=\"symbol\">:orders</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">Client.where(<span class=\"string\">\"orders_count = ? AND locked = ?\"</span>, params[<span class=\"symbol\">:orders</span>], <span class=\"literal\">false</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">Client.where(<span class=\"string\">\"created_at &gt;= :start_date AND created_at &lt;= :end_date\"</span>,</span><br><span class=\"line\">  &#123;<span class=\"symbol\">start_date:</span> params[<span class=\"symbol\">:start_date</span>], <span class=\"symbol\">end_date:</span> params[<span class=\"symbol\">:end_date</span>]&#125;)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Hash conditions</li>\n</ul>\n<p>使用 Hash 方式尋找應該是最常見的方式</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client.where(<span class=\"symbol\">locked:</span> <span class=\"literal\">true</span>)</span><br></pre></td></tr></table></figure>\n<p>然後如果要同時找某個 key 符合多個條件可以使用陣列</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client.where(<span class=\"symbol\">orders_count:</span> [<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>])</span><br></pre></td></tr></table></figure>\n<p>使用 Hash 條件搜尋還可以包括範圍</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client.where(<span class=\"symbol\">created_at:</span> (Time.now.midnight - <span class=\"number\">1</span>.day)..Time.now.midnight)</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"選擇特定欄位\">選擇特定欄位</h2>\n<p>在前面的搜尋中，我們拿到的資料都是全部的欄位，如果只想要篩選特定欄位，可以使用 <code>select</code> 這個方法</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client.select(<span class=\"symbol\">:viewable_by</span>, <span class=\"symbol\">:locked</span>)</span><br><span class=\"line\"><span class=\"comment\"># OR</span></span><br><span class=\"line\">Client.select(<span class=\"string\">\"viewable_by, locked\"</span>)</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"limit-and-offset\">Limit and Offset</h2>\n<p><code>limit</code> 用來限制拿出來的資料有多少筆， <code>offset</code> 用來表示要從哪一比資料開始算起</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client.limit(<span class=\"number\">5</span>).offset(<span class=\"number\">30</span>)</span><br></pre></td></tr></table></figure>\n<p>這個例子就是從第 31 筆開始拿 5 筆資料出來，一般來說這兩個方法最常用在分頁的時候</p>\n<hr>\n<h2 id=\"eager-loading-associations\">Eager Loading Associations</h2>\n<p>Eager loading 的機制主要是讓搜尋資料庫的時候，可以盡量減少搜尋次數，我們看看下面的例子</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clients = Client.limit(<span class=\"number\">10</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">clients.each <span class=\"keyword\">do</span> <span class=\"params\">|client|</span></span><br><span class=\"line\">  puts client.address.postcode</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>這個例子裡面，第一次搜尋是抓出 client 前 10 筆資料，後面還有 10 次搜尋是找出每個 client 的 address，所以總共進行了 11 次搜尋，這就是 N + 1 問題</p>\n<p>我們可以使用 <code>includes</code> 這個方法改寫上面的例子</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clients = Client.includes(<span class=\"symbol\">:address</span>).limit(<span class=\"number\">10</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">clients.each <span class=\"keyword\">do</span> <span class=\"params\">|client|</span></span><br><span class=\"line\">  puts client.address.postcode</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>如此一來就只會進行兩次搜尋！</p>\n<p>那如果是比較複雜的結構呢？</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Category.includes(<span class=\"symbol\">articles:</span> [&#123; <span class=\"symbol\">comments:</span> <span class=\"symbol\">:guest</span> &#125;, <span class=\"symbol\">:tags</span>]).find(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<p>這個例子會拿到 id 是 1 的 Category 資料，另外也去讀取跟他有關的文章，還有跟這些文章有關的 comments / tags，還有每個 comment 的 guest 關聯</p>\n<p>那今天的文章就寫到這裡啦！</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/active_record_querying.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天繼續來看看昨天沒看完的部分！</p>\n<h2>Active Record 搜尋的條件</h2>\n<ul>\n<li>純字串</li>\n</ul>\n<p>我們在搜尋時，可以直接在條件使用字串</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client.where(<span class=\"string\">\"orders_count = '2'\"</span>)</span><br></pre></td></tr></table></figure>\n<p>這個例子會抓出 order_count 是 2 的所有 customer 集合</p>\n<ul>\n<li>Array Conditions (字串搜尋多條件)</li>\n</ul>\n<p>除了使用字串之外，可以使用陣列的方式，陣列的第一個值放字串，其中有幾個問號，後面就要有幾個相對應的值<br>\n或者像是下面的第三個範例較為複雜，雖然是以陣列的方式呈現，但抓的值在後面以 Hash 呈現</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client.where(<span class=\"string\">\"orders_count = ?\"</span>, params[<span class=\"symbol\">:orders</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">Client.where(<span class=\"string\">\"orders_count = ? AND locked = ?\"</span>, params[<span class=\"symbol\">:orders</span>], <span class=\"literal\">false</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">Client.where(<span class=\"string\">\"created_at &gt;= :start_date AND created_at &lt;= :end_date\"</span>,</span><br><span class=\"line\">  &#123;<span class=\"symbol\">start_date:</span> params[<span class=\"symbol\">:start_date</span>], <span class=\"symbol\">end_date:</span> params[<span class=\"symbol\">:end_date</span>]&#125;)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Hash conditions</li>\n</ul>\n<p>使用 Hash 方式尋找應該是最常見的方式</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client.where(<span class=\"symbol\">locked:</span> <span class=\"literal\">true</span>)</span><br></pre></td></tr></table></figure>\n<p>然後如果要同時找某個 key 符合多個條件可以使用陣列</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client.where(<span class=\"symbol\">orders_count:</span> [<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>])</span><br></pre></td></tr></table></figure>\n<p>使用 Hash 條件搜尋還可以包括範圍</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client.where(<span class=\"symbol\">created_at:</span> (Time.now.midnight - <span class=\"number\">1</span>.day)..Time.now.midnight)</span><br></pre></td></tr></table></figure>\n<hr>\n<h2>選擇特定欄位</h2>\n<p>在前面的搜尋中，我們拿到的資料都是全部的欄位，如果只想要篩選特定欄位，可以使用 <code>select</code> 這個方法</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client.select(<span class=\"symbol\">:viewable_by</span>, <span class=\"symbol\">:locked</span>)</span><br><span class=\"line\"><span class=\"comment\"># OR</span></span><br><span class=\"line\">Client.select(<span class=\"string\">\"viewable_by, locked\"</span>)</span><br></pre></td></tr></table></figure>\n<hr>\n<h2>Limit and Offset</h2>\n<p><code>limit</code> 用來限制拿出來的資料有多少筆， <code>offset</code> 用來表示要從哪一比資料開始算起</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client.limit(<span class=\"number\">5</span>).offset(<span class=\"number\">30</span>)</span><br></pre></td></tr></table></figure>\n<p>這個例子就是從第 31 筆開始拿 5 筆資料出來，一般來說這兩個方法最常用在分頁的時候</p>\n<hr>\n<h2>Eager Loading Associations</h2>\n<p>Eager loading 的機制主要是讓搜尋資料庫的時候，可以盡量減少搜尋次數，我們看看下面的例子</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clients = Client.limit(<span class=\"number\">10</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">clients.each <span class=\"keyword\">do</span> <span class=\"params\">|client|</span></span><br><span class=\"line\">  puts client.address.postcode</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>這個例子裡面，第一次搜尋是抓出 client 前 10 筆資料，後面還有 10 次搜尋是找出每個 client 的 address，所以總共進行了 11 次搜尋，這就是 N + 1 問題</p>\n<p>我們可以使用 <code>includes</code> 這個方法改寫上面的例子</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clients = Client.includes(<span class=\"symbol\">:address</span>).limit(<span class=\"number\">10</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">clients.each <span class=\"keyword\">do</span> <span class=\"params\">|client|</span></span><br><span class=\"line\">  puts client.address.postcode</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>如此一來就只會進行兩次搜尋！</p>\n<p>那如果是比較複雜的結構呢？</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Category.includes(<span class=\"symbol\">articles:</span> [&#123; <span class=\"symbol\">comments:</span> <span class=\"symbol\">:guest</span> &#125;, <span class=\"symbol\">:tags</span>]).find(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<p>這個例子會拿到 id 是 1 的 Category 資料，另外也去讀取跟他有關的文章，還有跟這些文章有關的 comments / tags，還有每個 comment 的 guest 關聯</p>\n<p>那今天的文章就寫到這裡啦！</p>\n<p>參考資料：</p>\n<p><a href=\"https://guides.rubyonrails.org/active_record_querying.html\" target=\"_blank\" rel=\"noopener\">Rails Guide</a></p>\n"},{"title":"Mock and Stub in test","catalog":true,"toc_nav_num":true,"date":"2019-10-26T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1569834381156-7b735e41e57d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2089&q=80","catagories":["Rails"],"updateDate":"2019-10-26T14:26:24.000Z","_content":"\n# 測試中的 Mock 跟 Stub 代表什麼\n\nMock 跟 Stub 這兩個名詞，在我試圖寫有關第三方 API 的相關測試時，一直困擾著我，到底我現在用的是 mock 還是 stub??\n\n我並不能百分之百確定我講的是對的，但我希望能用比較有公信力的方法，用我自己能懂的語言理出一番頭緒 XD\n\n首先我先參考 [*Everyday Rails Spec*](https://leanpub.com/everydayrailsrspec) 這本書的內容，畢竟能出書的應該也能稱得上是位大大吧！？這本書的 155 頁提到以下內容\n\n>A mock is some object that represents a real object for testing purposes.These are also known as test doubles. The mock stands in for an object we may previously have used a factory or PORO to create. However, a mock doesn’t touch the database–and thus takes less time to set up in a test.\nA stub overrides a method call on a given object and returns a predetermined value for it. In other words, a stub is a fake method which, when called upon, will return a real result for use in our tests. You’ll commonly use this to override the default functionality for a method, particularly in database or network- intensive activity.\n\n這裏提到 mock 在測試裡代表著一個真實物件，它的特性是不會去接觸到資料庫，因此在測試上可以花較少時間，OK，這樣的定義範圍超廣，很安全 XD\n\nStub 則代表著一個虛擬的方法，在這個測試中這個方法一但被呼叫，就是用 stub 的回傳值代替原本的方法．對我來說有點像遊戲裡面的 NPC，你問他指定問題的話他會跟你說答案，問他預期以外的問題就會不回答或者壞掉．\n\n讓我們來看看另一篇[文章](https://www.codewithjason.com/rspec-mocks-stubs-plain-english/)\n\n> A Test Stub is a fake object that’s used in place of a real object for the purpose of getting the program to behave the way we need it to in order to test it. A big part of a Test Stub’s job is to return pre-specified hard-coded values in response to method calls.\nA Mock Object is a fake object that’s used in place of a real object for the purpose of listening to the methods called on the mock object. The main job of a Mock Object is to ensure that the right methods get called on it.\n\n在這篇文章中，對於 stub 的解釋跟上面講到的差不多．差別在於 mock 的部分這一篇想要講的更具體：他認為 mock 是一個假的物件，專門做來接收方法，也就是說 mock 主要是用來操作跟 \"行為\" 相關的命令，這篇的概念跟另一個[網站](https://martinfowler.com/articles/mocksArentStubs.html)上講得差不多 \n\n# 結論\n我認為 stub 的定義爭議不算太大，如果要解釋它的話：\n**Stub: 一個 NPC ，接受特定訊息之後會回傳我們指定的內容**\n主要的爭議在於 mock ，我比較傾向給他一個廣泛的解釋，像是一開始那本書定義的那樣，但有兩件事情不能變：\n**1.Mock 代表一個真實物件 2.Mock 不會碰到資料庫**\n畢竟 mock 的英文翻譯就是: 假的，這麼廣義的字其實非常容易被大家濫用，沒辦法說誰的說法對錯，不過在測試這領域提到 mock 的話，我認為還是要保有上面的兩個原則\n\n另外，在 stackoverflow 或者其他文章，其實有著許多互相衝突的解釋版本，比方說有人會說 stub 根本不會回傳值，或者 mock 才不會回傳值等等... 我認為其實可能在不同語言裡面，他們的小圈子分別對於 mock / stub 有不同的釋義，又或者某些語言裡面已經規定了 mock 跟 stub 這兩種物件的用法，所以我覺得這是沒有戰完的一天的 XD \n\n### 參考資料：\n\n[RSpec mocks and stubs in plain English](https://www.codewithjason.com/rspec-mocks-stubs-plain-english/)\n\n[Stack Overflow](https://stackoverflow.com/questions/3459287/whats-the-difference-between-a-mock-stub)\n\n[Mocks Aren't Stubs](https://martinfowler.com/articles/mocksArentStubs.html)\n\n書目： [Everyday Rails Spec](https://leanpub.com/everydayrailsrspec)\n","source":"_posts/2019-10-26-mock_stub.md","raw":"---\ntitle: \"Mock and Stub in test\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-10-26 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1569834381156-7b735e41e57d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2089&q=80\"\ntags:\n- Rails\ncatagories:\n- Rails\nupdateDate: 2019-10-26 22:26:24\n# top: 1\n\n---\n\n# 測試中的 Mock 跟 Stub 代表什麼\n\nMock 跟 Stub 這兩個名詞，在我試圖寫有關第三方 API 的相關測試時，一直困擾著我，到底我現在用的是 mock 還是 stub??\n\n我並不能百分之百確定我講的是對的，但我希望能用比較有公信力的方法，用我自己能懂的語言理出一番頭緒 XD\n\n首先我先參考 [*Everyday Rails Spec*](https://leanpub.com/everydayrailsrspec) 這本書的內容，畢竟能出書的應該也能稱得上是位大大吧！？這本書的 155 頁提到以下內容\n\n>A mock is some object that represents a real object for testing purposes.These are also known as test doubles. The mock stands in for an object we may previously have used a factory or PORO to create. However, a mock doesn’t touch the database–and thus takes less time to set up in a test.\nA stub overrides a method call on a given object and returns a predetermined value for it. In other words, a stub is a fake method which, when called upon, will return a real result for use in our tests. You’ll commonly use this to override the default functionality for a method, particularly in database or network- intensive activity.\n\n這裏提到 mock 在測試裡代表著一個真實物件，它的特性是不會去接觸到資料庫，因此在測試上可以花較少時間，OK，這樣的定義範圍超廣，很安全 XD\n\nStub 則代表著一個虛擬的方法，在這個測試中這個方法一但被呼叫，就是用 stub 的回傳值代替原本的方法．對我來說有點像遊戲裡面的 NPC，你問他指定問題的話他會跟你說答案，問他預期以外的問題就會不回答或者壞掉．\n\n讓我們來看看另一篇[文章](https://www.codewithjason.com/rspec-mocks-stubs-plain-english/)\n\n> A Test Stub is a fake object that’s used in place of a real object for the purpose of getting the program to behave the way we need it to in order to test it. A big part of a Test Stub’s job is to return pre-specified hard-coded values in response to method calls.\nA Mock Object is a fake object that’s used in place of a real object for the purpose of listening to the methods called on the mock object. The main job of a Mock Object is to ensure that the right methods get called on it.\n\n在這篇文章中，對於 stub 的解釋跟上面講到的差不多．差別在於 mock 的部分這一篇想要講的更具體：他認為 mock 是一個假的物件，專門做來接收方法，也就是說 mock 主要是用來操作跟 \"行為\" 相關的命令，這篇的概念跟另一個[網站](https://martinfowler.com/articles/mocksArentStubs.html)上講得差不多 \n\n# 結論\n我認為 stub 的定義爭議不算太大，如果要解釋它的話：\n**Stub: 一個 NPC ，接受特定訊息之後會回傳我們指定的內容**\n主要的爭議在於 mock ，我比較傾向給他一個廣泛的解釋，像是一開始那本書定義的那樣，但有兩件事情不能變：\n**1.Mock 代表一個真實物件 2.Mock 不會碰到資料庫**\n畢竟 mock 的英文翻譯就是: 假的，這麼廣義的字其實非常容易被大家濫用，沒辦法說誰的說法對錯，不過在測試這領域提到 mock 的話，我認為還是要保有上面的兩個原則\n\n另外，在 stackoverflow 或者其他文章，其實有著許多互相衝突的解釋版本，比方說有人會說 stub 根本不會回傳值，或者 mock 才不會回傳值等等... 我認為其實可能在不同語言裡面，他們的小圈子分別對於 mock / stub 有不同的釋義，又或者某些語言裡面已經規定了 mock 跟 stub 這兩種物件的用法，所以我覺得這是沒有戰完的一天的 XD \n\n### 參考資料：\n\n[RSpec mocks and stubs in plain English](https://www.codewithjason.com/rspec-mocks-stubs-plain-english/)\n\n[Stack Overflow](https://stackoverflow.com/questions/3459287/whats-the-difference-between-a-mock-stub)\n\n[Mocks Aren't Stubs](https://martinfowler.com/articles/mocksArentStubs.html)\n\n書目： [Everyday Rails Spec](https://leanpub.com/everydayrailsrspec)\n","slug":"2019-10-26-mock_stub","published":1,"updated":"2019-11-22T06:55:09.243Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0euo001r2ob1hw8j0g40","content":"<h1 id=\"測試中的-mock-跟-stub-代表什麼\">測試中的 Mock 跟 Stub 代表什麼</h1>\n<p>Mock 跟 Stub 這兩個名詞，在我試圖寫有關第三方 API 的相關測試時，一直困擾著我，到底我現在用的是 mock 還是 stub??</p>\n<p>我並不能百分之百確定我講的是對的，但我希望能用比較有公信力的方法，用我自己能懂的語言理出一番頭緒 XD</p>\n<p>首先我先參考 <a href=\"https://leanpub.com/everydayrailsrspec\" target=\"_blank\" rel=\"noopener\"><em>Everyday Rails Spec</em></a> 這本書的內容，畢竟能出書的應該也能稱得上是位大大吧！？這本書的 155 頁提到以下內容</p>\n<blockquote>\n<p>A mock is some object that represents a real object for testing purposes.These are also known as test doubles. The mock stands in for an object we may previously have used a factory or PORO to create. However, a mock doesn’t touch the database–and thus takes less time to set up in a test.<br>\nA stub overrides a method call on a given object and returns a predetermined value for it. In other words, a stub is a fake method which, when called upon, will return a real result for use in our tests. You’ll commonly use this to override the default functionality for a method, particularly in database or network- intensive activity.</p>\n</blockquote>\n<p>這裏提到 mock 在測試裡代表著一個真實物件，它的特性是不會去接觸到資料庫，因此在測試上可以花較少時間，OK，這樣的定義範圍超廣，很安全 XD</p>\n<p>Stub 則代表著一個虛擬的方法，在這個測試中這個方法一但被呼叫，就是用 stub 的回傳值代替原本的方法．對我來說有點像遊戲裡面的 NPC，你問他指定問題的話他會跟你說答案，問他預期以外的問題就會不回答或者壞掉．</p>\n<p>讓我們來看看另一篇<a href=\"https://www.codewithjason.com/rspec-mocks-stubs-plain-english/\" target=\"_blank\" rel=\"noopener\">文章</a></p>\n<blockquote>\n<p>A Test Stub is a fake object that’s used in place of a real object for the purpose of getting the program to behave the way we need it to in order to test it. A big part of a Test Stub’s job is to return pre-specified hard-coded values in response to method calls.<br>\nA Mock Object is a fake object that’s used in place of a real object for the purpose of listening to the methods called on the mock object. The main job of a Mock Object is to ensure that the right methods get called on it.</p>\n</blockquote>\n<p>在這篇文章中，對於 stub 的解釋跟上面講到的差不多．差別在於 mock 的部分這一篇想要講的更具體：他認為 mock 是一個假的物件，專門做來接收方法，也就是說 mock 主要是用來操作跟 “行為” 相關的命令，這篇的概念跟另一個<a href=\"https://martinfowler.com/articles/mocksArentStubs.html\" target=\"_blank\" rel=\"noopener\">網站</a>上講得差不多</p>\n<h1 id=\"結論\">結論</h1>\n<p>我認為 stub 的定義爭議不算太大，如果要解釋它的話：<br>\n<strong>Stub: 一個 NPC ，接受特定訊息之後會回傳我們指定的內容</strong><br>\n主要的爭議在於 mock ，我比較傾向給他一個廣泛的解釋，像是一開始那本書定義的那樣，但有兩件事情不能變：<br>\n<strong>1.Mock 代表一個真實物件 2.Mock 不會碰到資料庫</strong><br>\n畢竟 mock 的英文翻譯就是: 假的，這麼廣義的字其實非常容易被大家濫用，沒辦法說誰的說法對錯，不過在測試這領域提到 mock 的話，我認為還是要保有上面的兩個原則</p>\n<p>另外，在 stackoverflow 或者其他文章，其實有著許多互相衝突的解釋版本，比方說有人會說 stub 根本不會回傳值，或者 mock 才不會回傳值等等… 我認為其實可能在不同語言裡面，他們的小圈子分別對於 mock / stub 有不同的釋義，又或者某些語言裡面已經規定了 mock 跟 stub 這兩種物件的用法，所以我覺得這是沒有戰完的一天的 XD</p>\n<h3 id=\"參考資料\">參考資料：</h3>\n<p><a href=\"https://www.codewithjason.com/rspec-mocks-stubs-plain-english/\" target=\"_blank\" rel=\"noopener\">RSpec mocks and stubs in plain English</a></p>\n<p><a href=\"https://stackoverflow.com/questions/3459287/whats-the-difference-between-a-mock-stub\" target=\"_blank\" rel=\"noopener\">Stack Overflow</a></p>\n<p><a href=\"https://martinfowler.com/articles/mocksArentStubs.html\" target=\"_blank\" rel=\"noopener\">Mocks Aren’t Stubs</a></p>\n<p>書目： <a href=\"https://leanpub.com/everydayrailsrspec\" target=\"_blank\" rel=\"noopener\">Everyday Rails Spec</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1>測試中的 Mock 跟 Stub 代表什麼</h1>\n<p>Mock 跟 Stub 這兩個名詞，在我試圖寫有關第三方 API 的相關測試時，一直困擾著我，到底我現在用的是 mock 還是 stub??</p>\n<p>我並不能百分之百確定我講的是對的，但我希望能用比較有公信力的方法，用我自己能懂的語言理出一番頭緒 XD</p>\n<p>首先我先參考 <a href=\"https://leanpub.com/everydayrailsrspec\" target=\"_blank\" rel=\"noopener\"><em>Everyday Rails Spec</em></a> 這本書的內容，畢竟能出書的應該也能稱得上是位大大吧！？這本書的 155 頁提到以下內容</p>\n<blockquote>\n<p>A mock is some object that represents a real object for testing purposes.These are also known as test doubles. The mock stands in for an object we may previously have used a factory or PORO to create. However, a mock doesn’t touch the database–and thus takes less time to set up in a test.<br>\nA stub overrides a method call on a given object and returns a predetermined value for it. In other words, a stub is a fake method which, when called upon, will return a real result for use in our tests. You’ll commonly use this to override the default functionality for a method, particularly in database or network- intensive activity.</p>\n</blockquote>\n<p>這裏提到 mock 在測試裡代表著一個真實物件，它的特性是不會去接觸到資料庫，因此在測試上可以花較少時間，OK，這樣的定義範圍超廣，很安全 XD</p>\n<p>Stub 則代表著一個虛擬的方法，在這個測試中這個方法一但被呼叫，就是用 stub 的回傳值代替原本的方法．對我來說有點像遊戲裡面的 NPC，你問他指定問題的話他會跟你說答案，問他預期以外的問題就會不回答或者壞掉．</p>\n<p>讓我們來看看另一篇<a href=\"https://www.codewithjason.com/rspec-mocks-stubs-plain-english/\" target=\"_blank\" rel=\"noopener\">文章</a></p>\n<blockquote>\n<p>A Test Stub is a fake object that’s used in place of a real object for the purpose of getting the program to behave the way we need it to in order to test it. A big part of a Test Stub’s job is to return pre-specified hard-coded values in response to method calls.<br>\nA Mock Object is a fake object that’s used in place of a real object for the purpose of listening to the methods called on the mock object. The main job of a Mock Object is to ensure that the right methods get called on it.</p>\n</blockquote>\n<p>在這篇文章中，對於 stub 的解釋跟上面講到的差不多．差別在於 mock 的部分這一篇想要講的更具體：他認為 mock 是一個假的物件，專門做來接收方法，也就是說 mock 主要是用來操作跟 “行為” 相關的命令，這篇的概念跟另一個<a href=\"https://martinfowler.com/articles/mocksArentStubs.html\" target=\"_blank\" rel=\"noopener\">網站</a>上講得差不多</p>\n<h1>結論</h1>\n<p>我認為 stub 的定義爭議不算太大，如果要解釋它的話：<br>\n<strong>Stub: 一個 NPC ，接受特定訊息之後會回傳我們指定的內容</strong><br>\n主要的爭議在於 mock ，我比較傾向給他一個廣泛的解釋，像是一開始那本書定義的那樣，但有兩件事情不能變：<br>\n<strong>1.Mock 代表一個真實物件 2.Mock 不會碰到資料庫</strong><br>\n畢竟 mock 的英文翻譯就是: 假的，這麼廣義的字其實非常容易被大家濫用，沒辦法說誰的說法對錯，不過在測試這領域提到 mock 的話，我認為還是要保有上面的兩個原則</p>\n<p>另外，在 stackoverflow 或者其他文章，其實有著許多互相衝突的解釋版本，比方說有人會說 stub 根本不會回傳值，或者 mock 才不會回傳值等等… 我認為其實可能在不同語言裡面，他們的小圈子分別對於 mock / stub 有不同的釋義，又或者某些語言裡面已經規定了 mock 跟 stub 這兩種物件的用法，所以我覺得這是沒有戰完的一天的 XD</p>\n<h3>參考資料：</h3>\n<p><a href=\"https://www.codewithjason.com/rspec-mocks-stubs-plain-english/\" target=\"_blank\" rel=\"noopener\">RSpec mocks and stubs in plain English</a></p>\n<p><a href=\"https://stackoverflow.com/questions/3459287/whats-the-difference-between-a-mock-stub\" target=\"_blank\" rel=\"noopener\">Stack Overflow</a></p>\n<p><a href=\"https://martinfowler.com/articles/mocksArentStubs.html\" target=\"_blank\" rel=\"noopener\">Mocks Aren’t Stubs</a></p>\n<p>書目： <a href=\"https://leanpub.com/everydayrailsrspec\" target=\"_blank\" rel=\"noopener\">Everyday Rails Spec</a></p>\n"},{"title":"JS30 day1 Drum Kit","catalog":true,"toc_nav_num":true,"date":"2019-10-31T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1572481566261-4e2503288d82?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2100&q=80","catagories":["Javascript"],"updateDate":"2019-10-31T14:26:24.000Z","_content":"\n# JS30 day01 - Drum Kit\n\n\n###為什麼會想要做 JS30 呢？\n\n在看職缺的時候，因為看到很多公司要求同時寫過 Rails 又要會前端框架的能力，所以想要試試看前端框架，但在用框架之前，覺得自己對 JS 還太不熟惹～ 所以想要先做過 JS30 培養一下基礎的能力再來做個小專案練練 React JS\n\n## 作業內容\n\n今天要做的是做出一個網頁，可以按下 A ~ L 這排的按鍵發出不同的鼓聲，根據你按的按鍵，螢幕上相對應的按鈕也會變化\n![](https://i.imgur.com/21SCkMW.png)\n完成品大致上可以看[這份code pen](https://codepen.io/gbvjpsln/pen/LYYOzbN)，但因為沒辦法輸入音檔，所以就比較沒效果ＸＤ\n\nJS 的部分我放在下面這邊：\n```javascript\nfunction playSound(e){\n      const audio = document.querySelector(`audio[data-key=\"${e.keyCode}\"]`);\n      const key = document.querySelector(`.key[data-key=\"${e.keyCode}\"]`);\n      if(!audio) return;\n      audio.currentTime = 0; //rewind to the start\n      audio.play();\n      key.classList.add('playing')\n    }\nfunction removeTransition(e){\n    if(e.propertyName !== 'transform') return;\n    this.classList.remove('playing');\n}\n  \nconst keys= document.querySelectorAll('.key');\nkeys.forEach(key => key.addEventListener('transitionend', removeTransition));\n\nwindow.addEventListener('keydown', playSound);\n```\n\n## 學到什麼\n因為 JS 的基礎實在太爛，所以其實感覺什麼都是新學的ＸＤ\n\n重要的列點如下：\n\n1. 其實每個按鍵在 JS 裡面有普遍公認的 keyCode，可以參考 https://keycode.info/\n\n2. 純 JS 的監聽方式： `節點.addEventListener`\nex. `window.addEventListener` / `key.addEventListener`\n\n3. 純 JS 的事件種類這次用到 `keydown` 跟 `transitionend`\n其他種類可以參考  https://developer.mozilla.org/zh-TW/docs/Web/Events\n\n4. 裡面用到 return 的技巧，表示如果找不到這個節點就不用繼續下去了：`if(!audio) return;`\n\n5. `audio.currentTime = 0;` 讓事件重置 \n\n6. 在 JS 裡面使用 forEach 做陣列演算`keys.forEach(key => key.addEventListener('transitionend', removeTransition));`\n\n## 總結\n\n老實說如果沒有看這影片示範的話我根本不會寫ＸＤ 但第一天練習後，覺得比自己想像中有趣！希望可以順利地進行下去然後更熟悉 JS!\n\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30","source":"_posts/2019-10-31-JS30_day01.md","raw":"---\ntitle: \"JS30 day1 Drum Kit\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-10-31 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1572481566261-4e2503288d82?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2100&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-10-31 22:26:24\n# top: 1\n\n---\n\n# JS30 day01 - Drum Kit\n\n\n###為什麼會想要做 JS30 呢？\n\n在看職缺的時候，因為看到很多公司要求同時寫過 Rails 又要會前端框架的能力，所以想要試試看前端框架，但在用框架之前，覺得自己對 JS 還太不熟惹～ 所以想要先做過 JS30 培養一下基礎的能力再來做個小專案練練 React JS\n\n## 作業內容\n\n今天要做的是做出一個網頁，可以按下 A ~ L 這排的按鍵發出不同的鼓聲，根據你按的按鍵，螢幕上相對應的按鈕也會變化\n![](https://i.imgur.com/21SCkMW.png)\n完成品大致上可以看[這份code pen](https://codepen.io/gbvjpsln/pen/LYYOzbN)，但因為沒辦法輸入音檔，所以就比較沒效果ＸＤ\n\nJS 的部分我放在下面這邊：\n```javascript\nfunction playSound(e){\n      const audio = document.querySelector(`audio[data-key=\"${e.keyCode}\"]`);\n      const key = document.querySelector(`.key[data-key=\"${e.keyCode}\"]`);\n      if(!audio) return;\n      audio.currentTime = 0; //rewind to the start\n      audio.play();\n      key.classList.add('playing')\n    }\nfunction removeTransition(e){\n    if(e.propertyName !== 'transform') return;\n    this.classList.remove('playing');\n}\n  \nconst keys= document.querySelectorAll('.key');\nkeys.forEach(key => key.addEventListener('transitionend', removeTransition));\n\nwindow.addEventListener('keydown', playSound);\n```\n\n## 學到什麼\n因為 JS 的基礎實在太爛，所以其實感覺什麼都是新學的ＸＤ\n\n重要的列點如下：\n\n1. 其實每個按鍵在 JS 裡面有普遍公認的 keyCode，可以參考 https://keycode.info/\n\n2. 純 JS 的監聽方式： `節點.addEventListener`\nex. `window.addEventListener` / `key.addEventListener`\n\n3. 純 JS 的事件種類這次用到 `keydown` 跟 `transitionend`\n其他種類可以參考  https://developer.mozilla.org/zh-TW/docs/Web/Events\n\n4. 裡面用到 return 的技巧，表示如果找不到這個節點就不用繼續下去了：`if(!audio) return;`\n\n5. `audio.currentTime = 0;` 讓事件重置 \n\n6. 在 JS 裡面使用 forEach 做陣列演算`keys.forEach(key => key.addEventListener('transitionend', removeTransition));`\n\n## 總結\n\n老實說如果沒有看這影片示範的話我根本不會寫ＸＤ 但第一天練習後，覺得比自己想像中有趣！希望可以順利地進行下去然後更熟悉 JS!\n\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30","slug":"2019-10-31-JS30_day01","published":1,"updated":"2019-11-22T06:57:17.323Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0eup001t2ob1oryga2s8","content":"<h1 id=\"js30-day01-drum-kit\">JS30 day01 - Drum Kit</h1>\n<p>###為什麼會想要做 JS30 呢？</p>\n<p>在看職缺的時候，因為看到很多公司要求同時寫過 Rails 又要會前端框架的能力，所以想要試試看前端框架，但在用框架之前，覺得自己對 JS 還太不熟惹～ 所以想要先做過 JS30 培養一下基礎的能力再來做個小專案練練 React JS</p>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天要做的是做出一個網頁，可以按下 A ~ L 這排的按鍵發出不同的鼓聲，根據你按的按鍵，螢幕上相對應的按鈕也會變化<br>\n<img src=\"https://i.imgur.com/21SCkMW.png\" alt=\"\"><br>\n完成品大致上可以看<a href=\"https://codepen.io/gbvjpsln/pen/LYYOzbN\" target=\"_blank\" rel=\"noopener\">這份code pen</a>，但因為沒辦法輸入音檔，所以就比較沒效果ＸＤ</p>\n<p>JS 的部分我放在下面這邊：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">playSound</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> audio = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">`audio[data-key=\"<span class=\"subst\">$&#123;e.keyCode&#125;</span>\"]`</span>);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> key = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">`.key[data-key=\"<span class=\"subst\">$&#123;e.keyCode&#125;</span>\"]`</span>);</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(!audio) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      audio.currentTime = <span class=\"number\">0</span>; <span class=\"comment\">//rewind to the start</span></span><br><span class=\"line\">      audio.play();</span><br><span class=\"line\">      key.classList.add(<span class=\"string\">'playing'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">removeTransition</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(e.propertyName !== <span class=\"string\">'transform'</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.classList.remove(<span class=\"string\">'playing'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">const</span> keys= <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'.key'</span>);</span><br><span class=\"line\">keys.forEach(<span class=\"function\"><span class=\"params\">key</span> =&gt;</span> key.addEventListener(<span class=\"string\">'transitionend'</span>, removeTransition));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'keydown'</span>, playSound);</span><br></pre></td></tr></table></figure>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<p>因為 JS 的基礎實在太爛，所以其實感覺什麼都是新學的ＸＤ</p>\n<p>重要的列點如下：</p>\n<ol>\n<li>\n<p>其實每個按鍵在 JS 裡面有普遍公認的 keyCode，可以參考 <a href=\"https://keycode.info/\" target=\"_blank\" rel=\"noopener\">https://keycode.info/</a></p>\n</li>\n<li>\n<p>純 JS 的監聽方式： <code>節點.addEventListener</code><br>\nex. <code>window.addEventListener</code> / <code>key.addEventListener</code></p>\n</li>\n<li>\n<p>純 JS 的事件種類這次用到 <code>keydown</code> 跟 <code>transitionend</code><br>\n其他種類可以參考  <a href=\"https://developer.mozilla.org/zh-TW/docs/Web/Events\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-TW/docs/Web/Events</a></p>\n</li>\n<li>\n<p>裡面用到 return 的技巧，表示如果找不到這個節點就不用繼續下去了：<code>if(!audio) return;</code></p>\n</li>\n<li>\n<p><code>audio.currentTime = 0;</code> 讓事件重置</p>\n</li>\n<li>\n<p>在 JS 裡面使用 forEach 做陣列演算<code>keys.forEach(key =&gt; key.addEventListener('transitionend', removeTransition));</code></p>\n</li>\n</ol>\n<h2 id=\"總結\">總結</h2>\n<p>老實說如果沒有看這影片示範的話我根本不會寫ＸＤ 但第一天練習後，覺得比自己想像中有趣！希望可以順利地進行下去然後更熟悉 JS!</p>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day01 - Drum Kit</h1>\n<p>###為什麼會想要做 JS30 呢？</p>\n<p>在看職缺的時候，因為看到很多公司要求同時寫過 Rails 又要會前端框架的能力，所以想要試試看前端框架，但在用框架之前，覺得自己對 JS 還太不熟惹～ 所以想要先做過 JS30 培養一下基礎的能力再來做個小專案練練 React JS</p>\n<h2>作業內容</h2>\n<p>今天要做的是做出一個網頁，可以按下 A ~ L 這排的按鍵發出不同的鼓聲，根據你按的按鍵，螢幕上相對應的按鈕也會變化<br>\n<img src=\"https://i.imgur.com/21SCkMW.png\" alt=\"\"><br>\n完成品大致上可以看<a href=\"https://codepen.io/gbvjpsln/pen/LYYOzbN\" target=\"_blank\" rel=\"noopener\">這份code pen</a>，但因為沒辦法輸入音檔，所以就比較沒效果ＸＤ</p>\n<p>JS 的部分我放在下面這邊：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">playSound</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> audio = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">`audio[data-key=\"<span class=\"subst\">$&#123;e.keyCode&#125;</span>\"]`</span>);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> key = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">`.key[data-key=\"<span class=\"subst\">$&#123;e.keyCode&#125;</span>\"]`</span>);</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(!audio) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      audio.currentTime = <span class=\"number\">0</span>; <span class=\"comment\">//rewind to the start</span></span><br><span class=\"line\">      audio.play();</span><br><span class=\"line\">      key.classList.add(<span class=\"string\">'playing'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">removeTransition</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(e.propertyName !== <span class=\"string\">'transform'</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.classList.remove(<span class=\"string\">'playing'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">const</span> keys= <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'.key'</span>);</span><br><span class=\"line\">keys.forEach(<span class=\"function\"><span class=\"params\">key</span> =&gt;</span> key.addEventListener(<span class=\"string\">'transitionend'</span>, removeTransition));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'keydown'</span>, playSound);</span><br></pre></td></tr></table></figure>\n<h2>學到什麼</h2>\n<p>因為 JS 的基礎實在太爛，所以其實感覺什麼都是新學的ＸＤ</p>\n<p>重要的列點如下：</p>\n<ol>\n<li>\n<p>其實每個按鍵在 JS 裡面有普遍公認的 keyCode，可以參考 <a href=\"https://keycode.info/\" target=\"_blank\" rel=\"noopener\">https://keycode.info/</a></p>\n</li>\n<li>\n<p>純 JS 的監聽方式： <code>節點.addEventListener</code><br>\nex. <code>window.addEventListener</code> / <code>key.addEventListener</code></p>\n</li>\n<li>\n<p>純 JS 的事件種類這次用到 <code>keydown</code> 跟 <code>transitionend</code><br>\n其他種類可以參考  <a href=\"https://developer.mozilla.org/zh-TW/docs/Web/Events\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-TW/docs/Web/Events</a></p>\n</li>\n<li>\n<p>裡面用到 return 的技巧，表示如果找不到這個節點就不用繼續下去了：<code>if(!audio) return;</code></p>\n</li>\n<li>\n<p><code>audio.currentTime = 0;</code> 讓事件重置</p>\n</li>\n<li>\n<p>在 JS 裡面使用 forEach 做陣列演算<code>keys.forEach(key =&gt; key.addEventListener('transitionend', removeTransition));</code></p>\n</li>\n</ol>\n<h2>總結</h2>\n<p>老實說如果沒有看這影片示範的話我根本不會寫ＸＤ 但第一天練習後，覺得比自己想像中有趣！希望可以順利地進行下去然後更熟悉 JS!</p>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n"},{"title":"JS30 day2 Clock","catalog":true,"toc_nav_num":true,"date":"2019-11-01T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1572510192261-e24ab8f31042?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1947&q=80","catagories":["Javascript"],"updateDate":"2019-11-01T14:26:24.000Z","_content":"\n# JS30 day02 - Clock\n\n## 作業內容\n\n今天要做的是做出一個網頁，裡面有個時鐘會表現出現在的時間，當然秒針 / 分針 / 時針也要跟著動\n![](https://i.imgur.com/ieFIzbP.png)\n\nJS 的部分我放在下面這邊：\n```javascript\nconst secondsHand = document.querySelector('.second-hand');\nconst minsHand = document.querySelector('.min-hand');\nconst hoursHand = document.querySelector('.hour-hand');\n\nfunction secondCall(e){\n  const now = new Date();\n\n  const seconds = now.getSeconds();\n  const secondsDegree = ((seconds / 60) * 360) + 90;\n  secondsHand.style.transform = `rotate(${secondsDegree}deg)`;\n\n  const mins = now.getMinutes();\n  const minsDegree = ((mins / 60) * 360) + ((seconds / 60 / 60) * 360) + 90;\n  minsHand.style.transform = `rotate(${minsDegree}deg)`;\n\n  const hours = now.getHours();\n  const hoursDegree = ((hours / 12) * 360) + ((mins / 60) / 12 * 360) + 90;\n  hoursHand.style.transform = `rotate(${hoursDegree}deg)`;\n}\n\nsetInterval(secondCall, 1000);\n```\n\n## 學到什麼\n\n重要的列點如下：\n\n1.  好像是第一次使用 JS 的物件 XD `const now = new Date();`，這概念對我來說很接近 Ruby 的 class，其他可用的物件可參考這個網站：https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n\n2. `now.getSeconds();` 這裏的 `getSeconds()` 是 Date 的 protoype 被賦予的方法\n\n3. `secondsHand.style.transform = ` 使用`.style`去增加這個節點的 css 屬性，可參考這邊：https://www.w3schools.com/jsref/prop_style_transform.asp\n\n4. `setInterval(secondCall, 1000);` setTimeout() 只會執行一次就結束，而 setInterval() 則是會在間隔固定的時間不斷重複\n\n5. CSS：`transform-origin` 可以改變你這個節點改變的位置\n\n6. `transition-timing-function` 這個屬性竟然可以對於動畫的過程做出像時鐘這樣超過一點再回來的動畫，這是之前沒想過的\n\n## 總結\n\n才做了兩天的作業就覺得這比我預期中的還有趣，而我覺得這 JS30 厲害的是這些東西的靈感來源，終於感覺有越來越了解 JS 了 XD\n\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30","source":"_posts/2019-11-01-JS30_day02.md","raw":"---\ntitle: \"JS30 day2 Clock\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-01 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1572510192261-e24ab8f31042?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1947&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-01 22:26:24\n# top: 1\n\n---\n\n# JS30 day02 - Clock\n\n## 作業內容\n\n今天要做的是做出一個網頁，裡面有個時鐘會表現出現在的時間，當然秒針 / 分針 / 時針也要跟著動\n![](https://i.imgur.com/ieFIzbP.png)\n\nJS 的部分我放在下面這邊：\n```javascript\nconst secondsHand = document.querySelector('.second-hand');\nconst minsHand = document.querySelector('.min-hand');\nconst hoursHand = document.querySelector('.hour-hand');\n\nfunction secondCall(e){\n  const now = new Date();\n\n  const seconds = now.getSeconds();\n  const secondsDegree = ((seconds / 60) * 360) + 90;\n  secondsHand.style.transform = `rotate(${secondsDegree}deg)`;\n\n  const mins = now.getMinutes();\n  const minsDegree = ((mins / 60) * 360) + ((seconds / 60 / 60) * 360) + 90;\n  minsHand.style.transform = `rotate(${minsDegree}deg)`;\n\n  const hours = now.getHours();\n  const hoursDegree = ((hours / 12) * 360) + ((mins / 60) / 12 * 360) + 90;\n  hoursHand.style.transform = `rotate(${hoursDegree}deg)`;\n}\n\nsetInterval(secondCall, 1000);\n```\n\n## 學到什麼\n\n重要的列點如下：\n\n1.  好像是第一次使用 JS 的物件 XD `const now = new Date();`，這概念對我來說很接近 Ruby 的 class，其他可用的物件可參考這個網站：https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n\n2. `now.getSeconds();` 這裏的 `getSeconds()` 是 Date 的 protoype 被賦予的方法\n\n3. `secondsHand.style.transform = ` 使用`.style`去增加這個節點的 css 屬性，可參考這邊：https://www.w3schools.com/jsref/prop_style_transform.asp\n\n4. `setInterval(secondCall, 1000);` setTimeout() 只會執行一次就結束，而 setInterval() 則是會在間隔固定的時間不斷重複\n\n5. CSS：`transform-origin` 可以改變你這個節點改變的位置\n\n6. `transition-timing-function` 這個屬性竟然可以對於動畫的過程做出像時鐘這樣超過一點再回來的動畫，這是之前沒想過的\n\n## 總結\n\n才做了兩天的作業就覺得這比我預期中的還有趣，而我覺得這 JS30 厲害的是這些東西的靈感來源，終於感覺有越來越了解 JS 了 XD\n\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30","slug":"2019-11-01-JS30_day02","published":1,"updated":"2019-11-22T06:57:41.030Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0euq001v2ob1akr37611","content":"<h1 id=\"js30-day02-clock\">JS30 day02 - Clock</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天要做的是做出一個網頁，裡面有個時鐘會表現出現在的時間，當然秒針 / 分針 / 時針也要跟著動<br>\n<img src=\"https://i.imgur.com/ieFIzbP.png\" alt=\"\"></p>\n<p>JS 的部分我放在下面這邊：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> secondsHand = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.second-hand'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> minsHand = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.min-hand'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> hoursHand = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.hour-hand'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">secondCall</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> now = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> seconds = now.getSeconds();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> secondsDegree = ((seconds / <span class=\"number\">60</span>) * <span class=\"number\">360</span>) + <span class=\"number\">90</span>;</span><br><span class=\"line\">  secondsHand.style.transform = <span class=\"string\">`rotate(<span class=\"subst\">$&#123;secondsDegree&#125;</span>deg)`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> mins = now.getMinutes();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> minsDegree = ((mins / <span class=\"number\">60</span>) * <span class=\"number\">360</span>) + ((seconds / <span class=\"number\">60</span> / <span class=\"number\">60</span>) * <span class=\"number\">360</span>) + <span class=\"number\">90</span>;</span><br><span class=\"line\">  minsHand.style.transform = <span class=\"string\">`rotate(<span class=\"subst\">$&#123;minsDegree&#125;</span>deg)`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> hours = now.getHours();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> hoursDegree = ((hours / <span class=\"number\">12</span>) * <span class=\"number\">360</span>) + ((mins / <span class=\"number\">60</span>) / <span class=\"number\">12</span> * <span class=\"number\">360</span>) + <span class=\"number\">90</span>;</span><br><span class=\"line\">  hoursHand.style.transform = <span class=\"string\">`rotate(<span class=\"subst\">$&#123;hoursDegree&#125;</span>deg)`</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">setInterval(secondCall, <span class=\"number\">1000</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<p>重要的列點如下：</p>\n<ol>\n<li>\n<p>好像是第一次使用 JS 的物件 XD <code>const now = new Date();</code>，這概念對我來說很接近 Ruby 的 class，其他可用的物件可參考這個網站：<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects</a></p>\n</li>\n<li>\n<p><code>now.getSeconds();</code> 這裏的 <code>getSeconds()</code> 是 Date 的 protoype 被賦予的方法</p>\n</li>\n<li>\n<p><code>secondsHand.style.transform =</code> 使用<code>.style</code>去增加這個節點的 css 屬性，可參考這邊：<a href=\"https://www.w3schools.com/jsref/prop_style_transform.asp\" target=\"_blank\" rel=\"noopener\">https://www.w3schools.com/jsref/prop_style_transform.asp</a></p>\n</li>\n<li>\n<p><code>setInterval(secondCall, 1000);</code> setTimeout() 只會執行一次就結束，而 setInterval() 則是會在間隔固定的時間不斷重複</p>\n</li>\n<li>\n<p>CSS：<code>transform-origin</code> 可以改變你這個節點改變的位置</p>\n</li>\n<li>\n<p><code>transition-timing-function</code> 這個屬性竟然可以對於動畫的過程做出像時鐘這樣超過一點再回來的動畫，這是之前沒想過的</p>\n</li>\n</ol>\n<h2 id=\"總結\">總結</h2>\n<p>才做了兩天的作業就覺得這比我預期中的還有趣，而我覺得這 JS30 厲害的是這些東西的靈感來源，終於感覺有越來越了解 JS 了 XD</p>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day02 - Clock</h1>\n<h2>作業內容</h2>\n<p>今天要做的是做出一個網頁，裡面有個時鐘會表現出現在的時間，當然秒針 / 分針 / 時針也要跟著動<br>\n<img src=\"https://i.imgur.com/ieFIzbP.png\" alt=\"\"></p>\n<p>JS 的部分我放在下面這邊：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> secondsHand = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.second-hand'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> minsHand = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.min-hand'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> hoursHand = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.hour-hand'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">secondCall</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> now = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> seconds = now.getSeconds();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> secondsDegree = ((seconds / <span class=\"number\">60</span>) * <span class=\"number\">360</span>) + <span class=\"number\">90</span>;</span><br><span class=\"line\">  secondsHand.style.transform = <span class=\"string\">`rotate(<span class=\"subst\">$&#123;secondsDegree&#125;</span>deg)`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> mins = now.getMinutes();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> minsDegree = ((mins / <span class=\"number\">60</span>) * <span class=\"number\">360</span>) + ((seconds / <span class=\"number\">60</span> / <span class=\"number\">60</span>) * <span class=\"number\">360</span>) + <span class=\"number\">90</span>;</span><br><span class=\"line\">  minsHand.style.transform = <span class=\"string\">`rotate(<span class=\"subst\">$&#123;minsDegree&#125;</span>deg)`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> hours = now.getHours();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> hoursDegree = ((hours / <span class=\"number\">12</span>) * <span class=\"number\">360</span>) + ((mins / <span class=\"number\">60</span>) / <span class=\"number\">12</span> * <span class=\"number\">360</span>) + <span class=\"number\">90</span>;</span><br><span class=\"line\">  hoursHand.style.transform = <span class=\"string\">`rotate(<span class=\"subst\">$&#123;hoursDegree&#125;</span>deg)`</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">setInterval(secondCall, <span class=\"number\">1000</span>);</span><br></pre></td></tr></table></figure>\n<h2>學到什麼</h2>\n<p>重要的列點如下：</p>\n<ol>\n<li>\n<p>好像是第一次使用 JS 的物件 XD <code>const now = new Date();</code>，這概念對我來說很接近 Ruby 的 class，其他可用的物件可參考這個網站：<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects</a></p>\n</li>\n<li>\n<p><code>now.getSeconds();</code> 這裏的 <code>getSeconds()</code> 是 Date 的 protoype 被賦予的方法</p>\n</li>\n<li>\n<p><code>secondsHand.style.transform =</code> 使用<code>.style</code>去增加這個節點的 css 屬性，可參考這邊：<a href=\"https://www.w3schools.com/jsref/prop_style_transform.asp\" target=\"_blank\" rel=\"noopener\">https://www.w3schools.com/jsref/prop_style_transform.asp</a></p>\n</li>\n<li>\n<p><code>setInterval(secondCall, 1000);</code> setTimeout() 只會執行一次就結束，而 setInterval() 則是會在間隔固定的時間不斷重複</p>\n</li>\n<li>\n<p>CSS：<code>transform-origin</code> 可以改變你這個節點改變的位置</p>\n</li>\n<li>\n<p><code>transition-timing-function</code> 這個屬性竟然可以對於動畫的過程做出像時鐘這樣超過一點再回來的動畫，這是之前沒想過的</p>\n</li>\n</ol>\n<h2>總結</h2>\n<p>才做了兩天的作業就覺得這比我預期中的還有趣，而我覺得這 JS30 厲害的是這些東西的靈感來源，終於感覺有越來越了解 JS 了 XD</p>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n"},{"title":"JS30 day3 Update CSS variables","catalog":true,"toc_nav_num":true,"date":"2019-11-02T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1571210059434-edf0dc48e414?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Javascript"],"updateDate":"2019-11-02T14:26:24.000Z","_content":"\n# JS30 day03 - Update CSS variables\n\n## 作業內容\n\n今天要做的是做出一個網頁，裡面有張圖片，上面有兩個滑桿，一個選顏色的欄位，隨便改變其中一個，就會讓圖片的顏色 / 模糊度 / padding 跟著改變\n![](https://i.imgur.com/lQxyf6M.jpg)\nHTML:\n```html\n<h2>Update CSS Variables with <span class='hl'>JS</span></h2>\n\n<div class=\"controls\">\n  <label for=\"spacing\">Spacing:</label>\n  <input id=\"spacing\" type=\"range\" name=\"spacing\" min=\"10\" max=\"200\" value=\"10\" data-sizing=\"px\">\n\n  <label for=\"blur\">Blur:</label>\n  <input id=\"blur\" type=\"range\" name=\"blur\" min=\"0\" max=\"25\" value=\"10\" data-sizing=\"px\">\n\n  <label for=\"base\">Base Color</label>\n  <input id=\"base\" type=\"color\" name=\"base\" value=\"#ffc600\">\n</div>\n\n<img src=\"https://source.unsplash.com/7bwQXzbF6KE/800x500\">\n```\nCSS:\n```css\n:root{\n  --base: #ffc600;\n  --spacing: 10px;\n  --blur: 10px;\n}\nimg{\n  padding: var(--spacing);\n  background-color: var(--base);\n  filter: blur(var(--blur));\n}\n.hl{\n  color: var(--base);\n}\nbody {\n  text-align: center;\n  background: #193549;\n  color: white;\n  font-family: 'helvetica neue', sans-serif;\n  font-weight: 100;\n  font-size: 50px;\n}\n\n.controls {\n  margin-bottom: 50px;\n}\n\ninput {\n  width: 100px;\n}\n```\nJS：\n```javascript\nconst inputs = document.querySelectorAll('.controls input');\n\nfunction handleUpdate(){\n  const suffix = this.dataset.sizing || '';\n  document.documentElement.style.setProperty(`--${this.name}`, this.value + suffix)\n}\ninputs.forEach(input => input.addEventListener('change', handleUpdate));\ninputs.forEach(input => input.addEventListener('mousemove', handleUpdate));\n```\n\n## 學到什麼\n\n列點如下：\n\n- HTML\n  1. 之前都沒有機會用到 type 是 range 的 input，這次終於知道可以做什麼了！ 然後需要用 min / max 來設定這個 range 的最大最小值\n  ex. `<input id=\"spacing\" type=\"range\" name=\"spacing\" min=\"10\" max=\"200\" value=\"10\" data-sizing=\"px\">`\n\n- CSS\n  1. 變數：這也是第一次真的在 CSS 裡面用到變數，這次使用的方法如下：\n  ```css\n  :root{\n    --base: #ffc600;\n    --spacing: 10px;\n    --blur: 10px;\n  }\n  ```\n  其中 `:root` 表示在 `:root` 的範圍內可以使用這些變數，這邊的 root 其實代表 `html` 的範圍，但真的拿來比較的話，優先層級比 `html` 更高\n  除了 `:root` 之外，可以在 CSS 選擇器之下宣告變數，限縮變數使用範圍，可以參考：https://muki.tw/tech/native-css-variables/\n\n  另外呼叫的方法也是有點難記：\n  ```css\n  padding: var(--spacing);\n  ```\n\n  2. 這也是第一次用到 `filter` 的屬性(也太多第一次)，除了 `blur` 之外， `filter` 還可以使用很多不同效果，可以參考：https://www.runoob.com/cssref/css3-pr-filter.html\n\n- JS\n  1. 用 `querySelectorAll` 拿到的節點很像是 `Array` 但他不是，它是節點組合(nodeList)，一般的 `Array` 可以用 `map` 等方法，但這些節點的組合不行，因此有些人會把這些節點的組合再轉型成陣列\n\n  2. `this.dataset.sizing` 裡面的 `dataset` 會把這個 node 所有有關 `data-` 開頭屬性的值，全部拿進來變成 key-value pair\n\n  3. `document.documentElement` 對於一個 html 文件來說，他指的就是 `html` 標籤\n\n  4. `style.setProperty` 可以對於某個節點增加行內 CSS 屬性，語法如下：`style.setProperty(propertyName, value, priority);`，所以剛剛這行 `document.documentElement.style.setProperty` 他在瀏覽器上面看到的結果會是在 `html` 標籤上直接改變 inline CSS 屬性，可以參考 MDN: https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/setProperty\n## 總結\n\n我覺得在 CSS 中變數的應用會是很多優化使用者體驗的關鍵，所以今天的作業讓我覺得挺有收穫的！\n\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30","source":"_posts/2019-11-02-JS30_day03.md","raw":"---\ntitle: \"JS30 day3 Update CSS variables\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-02 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1571210059434-edf0dc48e414?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-02 22:26:24\n# top: 1\n\n---\n\n# JS30 day03 - Update CSS variables\n\n## 作業內容\n\n今天要做的是做出一個網頁，裡面有張圖片，上面有兩個滑桿，一個選顏色的欄位，隨便改變其中一個，就會讓圖片的顏色 / 模糊度 / padding 跟著改變\n![](https://i.imgur.com/lQxyf6M.jpg)\nHTML:\n```html\n<h2>Update CSS Variables with <span class='hl'>JS</span></h2>\n\n<div class=\"controls\">\n  <label for=\"spacing\">Spacing:</label>\n  <input id=\"spacing\" type=\"range\" name=\"spacing\" min=\"10\" max=\"200\" value=\"10\" data-sizing=\"px\">\n\n  <label for=\"blur\">Blur:</label>\n  <input id=\"blur\" type=\"range\" name=\"blur\" min=\"0\" max=\"25\" value=\"10\" data-sizing=\"px\">\n\n  <label for=\"base\">Base Color</label>\n  <input id=\"base\" type=\"color\" name=\"base\" value=\"#ffc600\">\n</div>\n\n<img src=\"https://source.unsplash.com/7bwQXzbF6KE/800x500\">\n```\nCSS:\n```css\n:root{\n  --base: #ffc600;\n  --spacing: 10px;\n  --blur: 10px;\n}\nimg{\n  padding: var(--spacing);\n  background-color: var(--base);\n  filter: blur(var(--blur));\n}\n.hl{\n  color: var(--base);\n}\nbody {\n  text-align: center;\n  background: #193549;\n  color: white;\n  font-family: 'helvetica neue', sans-serif;\n  font-weight: 100;\n  font-size: 50px;\n}\n\n.controls {\n  margin-bottom: 50px;\n}\n\ninput {\n  width: 100px;\n}\n```\nJS：\n```javascript\nconst inputs = document.querySelectorAll('.controls input');\n\nfunction handleUpdate(){\n  const suffix = this.dataset.sizing || '';\n  document.documentElement.style.setProperty(`--${this.name}`, this.value + suffix)\n}\ninputs.forEach(input => input.addEventListener('change', handleUpdate));\ninputs.forEach(input => input.addEventListener('mousemove', handleUpdate));\n```\n\n## 學到什麼\n\n列點如下：\n\n- HTML\n  1. 之前都沒有機會用到 type 是 range 的 input，這次終於知道可以做什麼了！ 然後需要用 min / max 來設定這個 range 的最大最小值\n  ex. `<input id=\"spacing\" type=\"range\" name=\"spacing\" min=\"10\" max=\"200\" value=\"10\" data-sizing=\"px\">`\n\n- CSS\n  1. 變數：這也是第一次真的在 CSS 裡面用到變數，這次使用的方法如下：\n  ```css\n  :root{\n    --base: #ffc600;\n    --spacing: 10px;\n    --blur: 10px;\n  }\n  ```\n  其中 `:root` 表示在 `:root` 的範圍內可以使用這些變數，這邊的 root 其實代表 `html` 的範圍，但真的拿來比較的話，優先層級比 `html` 更高\n  除了 `:root` 之外，可以在 CSS 選擇器之下宣告變數，限縮變數使用範圍，可以參考：https://muki.tw/tech/native-css-variables/\n\n  另外呼叫的方法也是有點難記：\n  ```css\n  padding: var(--spacing);\n  ```\n\n  2. 這也是第一次用到 `filter` 的屬性(也太多第一次)，除了 `blur` 之外， `filter` 還可以使用很多不同效果，可以參考：https://www.runoob.com/cssref/css3-pr-filter.html\n\n- JS\n  1. 用 `querySelectorAll` 拿到的節點很像是 `Array` 但他不是，它是節點組合(nodeList)，一般的 `Array` 可以用 `map` 等方法，但這些節點的組合不行，因此有些人會把這些節點的組合再轉型成陣列\n\n  2. `this.dataset.sizing` 裡面的 `dataset` 會把這個 node 所有有關 `data-` 開頭屬性的值，全部拿進來變成 key-value pair\n\n  3. `document.documentElement` 對於一個 html 文件來說，他指的就是 `html` 標籤\n\n  4. `style.setProperty` 可以對於某個節點增加行內 CSS 屬性，語法如下：`style.setProperty(propertyName, value, priority);`，所以剛剛這行 `document.documentElement.style.setProperty` 他在瀏覽器上面看到的結果會是在 `html` 標籤上直接改變 inline CSS 屬性，可以參考 MDN: https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/setProperty\n## 總結\n\n我覺得在 CSS 中變數的應用會是很多優化使用者體驗的關鍵，所以今天的作業讓我覺得挺有收穫的！\n\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30","slug":"2019-11-02-JS30_day03","published":1,"updated":"2019-11-22T07:00:42.604Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0eur001y2ob134dltrbw","content":"<h1 id=\"js30-day03-update-css-variables\">JS30 day03 - Update CSS variables</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天要做的是做出一個網頁，裡面有張圖片，上面有兩個滑桿，一個選顏色的欄位，隨便改變其中一個，就會讓圖片的顏色 / 模糊度 / padding 跟著改變<br>\n<img src=\"https://i.imgur.com/lQxyf6M.jpg\" alt=\"\"><br>\nHTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Update CSS Variables with <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">'hl'</span>&gt;</span>JS<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"controls\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"spacing\"</span>&gt;</span>Spacing:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"spacing\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"spacing\"</span> <span class=\"attr\">min</span>=<span class=\"string\">\"10\"</span> <span class=\"attr\">max</span>=<span class=\"string\">\"200\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"10\"</span> <span class=\"attr\">data-sizing</span>=<span class=\"string\">\"px\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"blur\"</span>&gt;</span>Blur:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"blur\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"blur\"</span> <span class=\"attr\">min</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">max</span>=<span class=\"string\">\"25\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"10\"</span> <span class=\"attr\">data-sizing</span>=<span class=\"string\">\"px\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"base\"</span>&gt;</span>Base Color<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"base\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"color\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"base\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"#ffc600\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://source.unsplash.com/7bwQXzbF6KE/800x500\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-pseudo\">:root</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">--base</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">--spacing</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">--blur</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">img</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"built_in\">var</span>(--spacing);</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">var</span>(--base);</span><br><span class=\"line\">  <span class=\"attribute\">filter</span>: <span class=\"built_in\">blur</span>(var(--blur));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hl</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">var</span>(--base);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#193549</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'helvetica neue'</span>, sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">100</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.controls</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">input</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> inputs = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'.controls input'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleUpdate</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> suffix = <span class=\"keyword\">this</span>.dataset.sizing || <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.documentElement.style.setProperty(<span class=\"string\">`--<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>`</span>, <span class=\"keyword\">this</span>.value + suffix)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">inputs.forEach(<span class=\"function\"><span class=\"params\">input</span> =&gt;</span> input.addEventListener(<span class=\"string\">'change'</span>, handleUpdate));</span><br><span class=\"line\">inputs.forEach(<span class=\"function\"><span class=\"params\">input</span> =&gt;</span> input.addEventListener(<span class=\"string\">'mousemove'</span>, handleUpdate));</span><br></pre></td></tr></table></figure>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<p>列點如下：</p>\n<ul>\n<li>\n<p>HTML</p>\n<ol>\n<li>之前都沒有機會用到 type 是 range 的 input，這次終於知道可以做什麼了！ 然後需要用 min / max 來設定這個 range 的最大最小值<br>\nex. <code>&lt;input id=&quot;spacing&quot; type=&quot;range&quot; name=&quot;spacing&quot; min=&quot;10&quot; max=&quot;200&quot; value=&quot;10&quot; data-sizing=&quot;px&quot;&gt;</code></li>\n</ol>\n</li>\n<li>\n<p>CSS</p>\n<ol>\n<li>變數：這也是第一次真的在 CSS 裡面用到變數，這次使用的方法如下：</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-pseudo\">:root</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">--base</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">--spacing</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">--blur</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中 <code>:root</code> 表示在 <code>:root</code> 的範圍內可以使用這些變數，這邊的 root 其實代表 <code>html</code> 的範圍，但真的拿來比較的話，優先層級比 <code>html</code> 更高<br>\n除了 <code>:root</code> 之外，可以在 CSS 選擇器之下宣告變數，限縮變數使用範圍，可以參考：<a href=\"https://muki.tw/tech/native-css-variables/\" target=\"_blank\" rel=\"noopener\">https://muki.tw/tech/native-css-variables/</a></p>\n<p>另外呼叫的方法也是有點難記：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">padding</span>: <span class=\"selector-tag\">var</span>(<span class=\"selector-tag\">--spacing</span>);</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>這也是第一次用到 <code>filter</code> 的屬性(也太多第一次)，除了 <code>blur</code> 之外， <code>filter</code> 還可以使用很多不同效果，可以參考：<a href=\"https://www.runoob.com/cssref/css3-pr-filter.html\" target=\"_blank\" rel=\"noopener\">https://www.runoob.com/cssref/css3-pr-filter.html</a></li>\n</ol>\n</li>\n<li>\n<p>JS</p>\n<ol>\n<li>\n<p>用 <code>querySelectorAll</code> 拿到的節點很像是 <code>Array</code> 但他不是，它是節點組合(nodeList)，一般的 <code>Array</code> 可以用 <code>map</code> 等方法，但這些節點的組合不行，因此有些人會把這些節點的組合再轉型成陣列</p>\n</li>\n<li>\n<p><code>this.dataset.sizing</code> 裡面的 <code>dataset</code> 會把這個 node 所有有關 <code>data-</code> 開頭屬性的值，全部拿進來變成 key-value pair</p>\n</li>\n<li>\n<p><code>document.documentElement</code> 對於一個 html 文件來說，他指的就是 <code>html</code> 標籤</p>\n</li>\n<li>\n<p><code>style.setProperty</code> 可以對於某個節點增加行內 CSS 屬性，語法如下：<code>style.setProperty(propertyName, value, priority);</code>，所以剛剛這行 <code>document.documentElement.style.setProperty</code> 他在瀏覽器上面看到的結果會是在 <code>html</code> 標籤上直接改變 inline CSS 屬性，可以參考 MDN: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/setProperty\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/setProperty</a></p>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"總結\">總結</h2>\n<p>我覺得在 CSS 中變數的應用會是很多優化使用者體驗的關鍵，所以今天的作業讓我覺得挺有收穫的！</p>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day03 - Update CSS variables</h1>\n<h2>作業內容</h2>\n<p>今天要做的是做出一個網頁，裡面有張圖片，上面有兩個滑桿，一個選顏色的欄位，隨便改變其中一個，就會讓圖片的顏色 / 模糊度 / padding 跟著改變<br>\n<img src=\"https://i.imgur.com/lQxyf6M.jpg\" alt=\"\"><br>\nHTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Update CSS Variables with <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">'hl'</span>&gt;</span>JS<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"controls\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"spacing\"</span>&gt;</span>Spacing:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"spacing\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"spacing\"</span> <span class=\"attr\">min</span>=<span class=\"string\">\"10\"</span> <span class=\"attr\">max</span>=<span class=\"string\">\"200\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"10\"</span> <span class=\"attr\">data-sizing</span>=<span class=\"string\">\"px\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"blur\"</span>&gt;</span>Blur:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"blur\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"blur\"</span> <span class=\"attr\">min</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">max</span>=<span class=\"string\">\"25\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"10\"</span> <span class=\"attr\">data-sizing</span>=<span class=\"string\">\"px\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"base\"</span>&gt;</span>Base Color<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"base\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"color\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"base\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"#ffc600\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://source.unsplash.com/7bwQXzbF6KE/800x500\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-pseudo\">:root</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">--base</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">--spacing</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">--blur</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">img</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"built_in\">var</span>(--spacing);</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">var</span>(--base);</span><br><span class=\"line\">  <span class=\"attribute\">filter</span>: <span class=\"built_in\">blur</span>(var(--blur));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.hl</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">var</span>(--base);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#193549</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'helvetica neue'</span>, sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">100</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.controls</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">input</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> inputs = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'.controls input'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleUpdate</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> suffix = <span class=\"keyword\">this</span>.dataset.sizing || <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.documentElement.style.setProperty(<span class=\"string\">`--<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>`</span>, <span class=\"keyword\">this</span>.value + suffix)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">inputs.forEach(<span class=\"function\"><span class=\"params\">input</span> =&gt;</span> input.addEventListener(<span class=\"string\">'change'</span>, handleUpdate));</span><br><span class=\"line\">inputs.forEach(<span class=\"function\"><span class=\"params\">input</span> =&gt;</span> input.addEventListener(<span class=\"string\">'mousemove'</span>, handleUpdate));</span><br></pre></td></tr></table></figure>\n<h2>學到什麼</h2>\n<p>列點如下：</p>\n<ul>\n<li>\n<p>HTML</p>\n<ol>\n<li>之前都沒有機會用到 type 是 range 的 input，這次終於知道可以做什麼了！ 然後需要用 min / max 來設定這個 range 的最大最小值<br>\nex. <code>&lt;input id=&quot;spacing&quot; type=&quot;range&quot; name=&quot;spacing&quot; min=&quot;10&quot; max=&quot;200&quot; value=&quot;10&quot; data-sizing=&quot;px&quot;&gt;</code></li>\n</ol>\n</li>\n<li>\n<p>CSS</p>\n<ol>\n<li>變數：這也是第一次真的在 CSS 裡面用到變數，這次使用的方法如下：</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-pseudo\">:root</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">--base</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">--spacing</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">--blur</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中 <code>:root</code> 表示在 <code>:root</code> 的範圍內可以使用這些變數，這邊的 root 其實代表 <code>html</code> 的範圍，但真的拿來比較的話，優先層級比 <code>html</code> 更高<br>\n除了 <code>:root</code> 之外，可以在 CSS 選擇器之下宣告變數，限縮變數使用範圍，可以參考：<a href=\"https://muki.tw/tech/native-css-variables/\" target=\"_blank\" rel=\"noopener\">https://muki.tw/tech/native-css-variables/</a></p>\n<p>另外呼叫的方法也是有點難記：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">padding</span>: <span class=\"selector-tag\">var</span>(<span class=\"selector-tag\">--spacing</span>);</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>這也是第一次用到 <code>filter</code> 的屬性(也太多第一次)，除了 <code>blur</code> 之外， <code>filter</code> 還可以使用很多不同效果，可以參考：<a href=\"https://www.runoob.com/cssref/css3-pr-filter.html\" target=\"_blank\" rel=\"noopener\">https://www.runoob.com/cssref/css3-pr-filter.html</a></li>\n</ol>\n</li>\n<li>\n<p>JS</p>\n<ol>\n<li>\n<p>用 <code>querySelectorAll</code> 拿到的節點很像是 <code>Array</code> 但他不是，它是節點組合(nodeList)，一般的 <code>Array</code> 可以用 <code>map</code> 等方法，但這些節點的組合不行，因此有些人會把這些節點的組合再轉型成陣列</p>\n</li>\n<li>\n<p><code>this.dataset.sizing</code> 裡面的 <code>dataset</code> 會把這個 node 所有有關 <code>data-</code> 開頭屬性的值，全部拿進來變成 key-value pair</p>\n</li>\n<li>\n<p><code>document.documentElement</code> 對於一個 html 文件來說，他指的就是 <code>html</code> 標籤</p>\n</li>\n<li>\n<p><code>style.setProperty</code> 可以對於某個節點增加行內 CSS 屬性，語法如下：<code>style.setProperty(propertyName, value, priority);</code>，所以剛剛這行 <code>document.documentElement.style.setProperty</code> 他在瀏覽器上面看到的結果會是在 <code>html</code> 標籤上直接改變 inline CSS 屬性，可以參考 MDN: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/setProperty\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/setProperty</a></p>\n</li>\n</ol>\n</li>\n</ul>\n<h2>總結</h2>\n<p>我覺得在 CSS 中變數的應用會是很多優化使用者體驗的關鍵，所以今天的作業讓我覺得挺有收穫的！</p>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n"},{"title":"JS30 day4 Array Cardio 1","catalog":true,"toc_nav_num":true,"date":"2019-11-02T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1558981420-c532902e58b4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2077&q=80","catagories":["Javascript"],"updateDate":"2019-11-02T14:26:24.000Z","_content":"\n# JS30 day04 - Array Cardio 1\n\n## 作業內容\n\n今天的作業就比較無趣一點，是各種有關使用陣列運算的小挑戰，在練 JS 的陣列相關語法\n\n作業內容跟做完之後的 code 如下：\n\n```js\nconst inventors = [\n  { first: 'Albert', last: 'Einstein', year: 1879, passed: 1955 },\n  { first: 'Isaac', last: 'Newton', year: 1643, passed: 1727 },\n  { first: 'Galileo', last: 'Galilei', year: 1564, passed: 1642 },\n  { first: 'Marie', last: 'Curie', year: 1867, passed: 1934 },\n  { first: 'Johannes', last: 'Kepler', year: 1571, passed: 1630 },\n  { first: 'Nicolaus', last: 'Copernicus', year: 1473, passed: 1543 },\n  { first: 'Max', last: 'Planck', year: 1858, passed: 1947 },\n  { first: 'Katherine', last: 'Blodgett', year: 1898, passed: 1979 },\n  { first: 'Ada', last: 'Lovelace', year: 1815, passed: 1852 },\n  { first: 'Sarah E.', last: 'Goode', year: 1855, passed: 1905 },\n  { first: 'Lise', last: 'Meitner', year: 1878, passed: 1968 },\n  { first: 'Hanna', last: 'Hammarström', year: 1829, passed: 1909 }\n];\n\nconst people = ['Beck, Glenn', 'Becker, Carl', 'Beckett, Samuel', 'Beddoes, Mick', 'Beecher, Henry', 'Beethoven, Ludwig', 'Begin, Menachem', 'Belloc, Hilaire', 'Bellow, Saul', 'Benchley, Robert', 'Benenson, Peter', 'Ben-Gurion, David', 'Benjamin, Walter', 'Benn, Tony', 'Bennington, Chester', 'Benson, Leana', 'Bent, Silas', 'Bentsen, Lloyd', 'Berger, Ric', 'Bergman, Ingmar', 'Berio, Luciano', 'Berle, Milton', 'Berlin, Irving', 'Berne, Eric', 'Bernhard, Sandra', 'Berra, Yogi', 'Berry, Halle', 'Berry, Wendell', 'Bethea, Erin', 'Bevan, Aneurin', 'Bevel, Ken', 'Biden, Joseph', 'Bierce, Ambrose', 'Biko, Steve', 'Billings, Josh', 'Biondo, Frank', 'Birrell, Augustine', 'Black, Elk', 'Blair, Robert', 'Blair, Tony', 'Blake, William'];\n\n// Array.prototype.filter()\n// 1. Filter the list of inventors for those who were born in the 1500's\nconst fifteen = inventors.filter(function(inventor){\n  if (inventor.year >= 1500 && inventor.year < 1600 ){\n    return true;\n  };\n});\nconsole.table(fifteen);\n\n\n// Array.prototype.map()\n// 2. Give us an array of the inventors' first and last names\n  const fullNames = inventors.map(function(inventor){\n    return `${inventor.first} ${inventor.last}`\n  });\n  console.log(fullNames);\n\n\n// Array.prototype.sort()\n// 3. Sort the inventors by birthdate, oldest to youngest\n  const inventorsOrder = inventors.sort(function(a, b){\n    return a.year - b.year;\n  });\n  console.log(inventorsOrder);\n// Array.prototype.reduce()\n// 4. How many years did all the inventors live?\n  const yearsTotal = inventors.reduce(function(accum, current){\n    return (accum + (current.passed - current.year));\n  }, 0);\n  console.log(yearsTotal);\n\n// 5. Sort the inventors by years lived\n  const liveLonger = inventors.sort(function(a, b){\n    return (a.passed - a.year) - (b.passed - b.year)\n  });\n  console.table(liveLonger);\n// 6. create a list of Boulevards in Paris that contain 'de' anywhere in the name\n// https://en.wikipedia.org/wiki/Category:Boulevards_in_Paris\n  // const category = document.querySelector('.mw-category');\n  // const links = Array.from(category.querySelectorAll('a'));\n  // const de = links\n  //             .map(function(link){return link.textContent})\n  //             .filter(function(street){return street.includes(\"de\")});\n  // console.log(de);\n  \n\n// 7. sort Exercise\n// Sort the people alphabetically by last name\n  const peopleOrder = people.sort(function(a, b){\n    const [aLast, aFirst] = a.split(\", \")\n    const [bLast, bFirst] = b.split(\", \")\n    return ( aLast > bLast) ? 1 : -1 \n  });\n  console.log(peopleOrder);\n// 8. Reduce Exercise\n// Sum up the instances of each of these\nconst data = ['car', 'car', 'truck', 'truck', 'bike', 'walk', 'car', 'van', 'bike', 'walk', 'car', 'van', 'car', 'truck' ];\nconst answer = data.reduce(function(obj, item){\n  if (!obj[item]){\n    obj[item] = 0;\n  }\n  obj[item]++;\n  return obj;\n},{});\nconsole.log(answer);\n\n```\n\n## 學到什麼\n\n列點如下：\n\n- JS\n  1. `filter()`這個方法等同於 ruby 的 `select`，要記得最後陣列裡面留下的只有那些回傳 true 的項目\n\n  2. `console` 除了 `console.log` 之外還可以 `console.table`\n  其他選項還可以參考這邊：https://developer.mozilla.org/zh-TW/docs/Web/API/Console\n\n  3. `map` 也要記得最後要留下來的值前面要放 `return` 才會成功轉換陣列！(忘記好幾次)\n  ```js\n  const fullNames = inventors.map(function(inventor){\n    return `${inventor.first} ${inventor.last}`\n  });\n  ```\n\n  4. `sort()` 方法裡面也是要放方法，一般來說會使用回傳 1 跟 -1 來排序\n\n  ```js\n  const inventorsOrder = inventors.sort(function(a, b){\n    return a.year - b.year;\n  });\n  ```\n  ```js\n  const peopleOrder = people.sort(function(a, b){\n    const [aLast, aFirst] = a.split(\", \")\n    const [bLast, bFirst] = b.split(\", \")\n    return ( aLast > bLast) ? 1 : -1 \n  });\n  ```\n\n  5. `reduce()` 在 js 比較不習慣的地方就是要把初始直放在最後面\n\n  ```js\n  const yearsTotal = inventors.reduce(function(accum, current){\n    return (accum + (current.passed - current.year));\n  }, 0);\n  ```\n\n  6. 使用 `querySelectorAll` 得到的 nodeList 無法使用 `map` 方法，必須用 `Array.form` 或者用打散的技巧先轉成陣列\n\n## 總結\n\n嘗試自己寫一次真的發現 JS 語法詭譎多變... 再加上各種大小不同的語法糖真的很容易讓人精神錯亂ＸＤ 但目前前端除了接受 JS 之外也沒別的選擇了（嘆），繼續加油！\n\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30","source":"_posts/2019-11-03-JS30_day04.md","raw":"---\ntitle: \"JS30 day4 Array Cardio 1\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-02 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1558981420-c532902e58b4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2077&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-02 22:26:24\n# top: 1\n\n---\n\n# JS30 day04 - Array Cardio 1\n\n## 作業內容\n\n今天的作業就比較無趣一點，是各種有關使用陣列運算的小挑戰，在練 JS 的陣列相關語法\n\n作業內容跟做完之後的 code 如下：\n\n```js\nconst inventors = [\n  { first: 'Albert', last: 'Einstein', year: 1879, passed: 1955 },\n  { first: 'Isaac', last: 'Newton', year: 1643, passed: 1727 },\n  { first: 'Galileo', last: 'Galilei', year: 1564, passed: 1642 },\n  { first: 'Marie', last: 'Curie', year: 1867, passed: 1934 },\n  { first: 'Johannes', last: 'Kepler', year: 1571, passed: 1630 },\n  { first: 'Nicolaus', last: 'Copernicus', year: 1473, passed: 1543 },\n  { first: 'Max', last: 'Planck', year: 1858, passed: 1947 },\n  { first: 'Katherine', last: 'Blodgett', year: 1898, passed: 1979 },\n  { first: 'Ada', last: 'Lovelace', year: 1815, passed: 1852 },\n  { first: 'Sarah E.', last: 'Goode', year: 1855, passed: 1905 },\n  { first: 'Lise', last: 'Meitner', year: 1878, passed: 1968 },\n  { first: 'Hanna', last: 'Hammarström', year: 1829, passed: 1909 }\n];\n\nconst people = ['Beck, Glenn', 'Becker, Carl', 'Beckett, Samuel', 'Beddoes, Mick', 'Beecher, Henry', 'Beethoven, Ludwig', 'Begin, Menachem', 'Belloc, Hilaire', 'Bellow, Saul', 'Benchley, Robert', 'Benenson, Peter', 'Ben-Gurion, David', 'Benjamin, Walter', 'Benn, Tony', 'Bennington, Chester', 'Benson, Leana', 'Bent, Silas', 'Bentsen, Lloyd', 'Berger, Ric', 'Bergman, Ingmar', 'Berio, Luciano', 'Berle, Milton', 'Berlin, Irving', 'Berne, Eric', 'Bernhard, Sandra', 'Berra, Yogi', 'Berry, Halle', 'Berry, Wendell', 'Bethea, Erin', 'Bevan, Aneurin', 'Bevel, Ken', 'Biden, Joseph', 'Bierce, Ambrose', 'Biko, Steve', 'Billings, Josh', 'Biondo, Frank', 'Birrell, Augustine', 'Black, Elk', 'Blair, Robert', 'Blair, Tony', 'Blake, William'];\n\n// Array.prototype.filter()\n// 1. Filter the list of inventors for those who were born in the 1500's\nconst fifteen = inventors.filter(function(inventor){\n  if (inventor.year >= 1500 && inventor.year < 1600 ){\n    return true;\n  };\n});\nconsole.table(fifteen);\n\n\n// Array.prototype.map()\n// 2. Give us an array of the inventors' first and last names\n  const fullNames = inventors.map(function(inventor){\n    return `${inventor.first} ${inventor.last}`\n  });\n  console.log(fullNames);\n\n\n// Array.prototype.sort()\n// 3. Sort the inventors by birthdate, oldest to youngest\n  const inventorsOrder = inventors.sort(function(a, b){\n    return a.year - b.year;\n  });\n  console.log(inventorsOrder);\n// Array.prototype.reduce()\n// 4. How many years did all the inventors live?\n  const yearsTotal = inventors.reduce(function(accum, current){\n    return (accum + (current.passed - current.year));\n  }, 0);\n  console.log(yearsTotal);\n\n// 5. Sort the inventors by years lived\n  const liveLonger = inventors.sort(function(a, b){\n    return (a.passed - a.year) - (b.passed - b.year)\n  });\n  console.table(liveLonger);\n// 6. create a list of Boulevards in Paris that contain 'de' anywhere in the name\n// https://en.wikipedia.org/wiki/Category:Boulevards_in_Paris\n  // const category = document.querySelector('.mw-category');\n  // const links = Array.from(category.querySelectorAll('a'));\n  // const de = links\n  //             .map(function(link){return link.textContent})\n  //             .filter(function(street){return street.includes(\"de\")});\n  // console.log(de);\n  \n\n// 7. sort Exercise\n// Sort the people alphabetically by last name\n  const peopleOrder = people.sort(function(a, b){\n    const [aLast, aFirst] = a.split(\", \")\n    const [bLast, bFirst] = b.split(\", \")\n    return ( aLast > bLast) ? 1 : -1 \n  });\n  console.log(peopleOrder);\n// 8. Reduce Exercise\n// Sum up the instances of each of these\nconst data = ['car', 'car', 'truck', 'truck', 'bike', 'walk', 'car', 'van', 'bike', 'walk', 'car', 'van', 'car', 'truck' ];\nconst answer = data.reduce(function(obj, item){\n  if (!obj[item]){\n    obj[item] = 0;\n  }\n  obj[item]++;\n  return obj;\n},{});\nconsole.log(answer);\n\n```\n\n## 學到什麼\n\n列點如下：\n\n- JS\n  1. `filter()`這個方法等同於 ruby 的 `select`，要記得最後陣列裡面留下的只有那些回傳 true 的項目\n\n  2. `console` 除了 `console.log` 之外還可以 `console.table`\n  其他選項還可以參考這邊：https://developer.mozilla.org/zh-TW/docs/Web/API/Console\n\n  3. `map` 也要記得最後要留下來的值前面要放 `return` 才會成功轉換陣列！(忘記好幾次)\n  ```js\n  const fullNames = inventors.map(function(inventor){\n    return `${inventor.first} ${inventor.last}`\n  });\n  ```\n\n  4. `sort()` 方法裡面也是要放方法，一般來說會使用回傳 1 跟 -1 來排序\n\n  ```js\n  const inventorsOrder = inventors.sort(function(a, b){\n    return a.year - b.year;\n  });\n  ```\n  ```js\n  const peopleOrder = people.sort(function(a, b){\n    const [aLast, aFirst] = a.split(\", \")\n    const [bLast, bFirst] = b.split(\", \")\n    return ( aLast > bLast) ? 1 : -1 \n  });\n  ```\n\n  5. `reduce()` 在 js 比較不習慣的地方就是要把初始直放在最後面\n\n  ```js\n  const yearsTotal = inventors.reduce(function(accum, current){\n    return (accum + (current.passed - current.year));\n  }, 0);\n  ```\n\n  6. 使用 `querySelectorAll` 得到的 nodeList 無法使用 `map` 方法，必須用 `Array.form` 或者用打散的技巧先轉成陣列\n\n## 總結\n\n嘗試自己寫一次真的發現 JS 語法詭譎多變... 再加上各種大小不同的語法糖真的很容易讓人精神錯亂ＸＤ 但目前前端除了接受 JS 之外也沒別的選擇了（嘆），繼續加油！\n\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30","slug":"2019-11-03-JS30_day04","published":1,"updated":"2019-11-22T07:01:04.068Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0eus00202ob1kavnexct","content":"<h1 id=\"js30-day04-array-cardio-1\">JS30 day04 - Array Cardio 1</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天的作業就比較無趣一點，是各種有關使用陣列運算的小挑戰，在練 JS 的陣列相關語法</p>\n<p>作業內容跟做完之後的 code 如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> inventors = [</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Albert'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Einstein'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1879</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1955</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Isaac'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Newton'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1643</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1727</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Galileo'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Galilei'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1564</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1642</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Marie'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Curie'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1867</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1934</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Johannes'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Kepler'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1571</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1630</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Nicolaus'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Copernicus'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1473</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1543</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Max'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Planck'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1858</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1947</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Katherine'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Blodgett'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1898</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1979</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Ada'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Lovelace'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1815</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1852</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Sarah E.'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Goode'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1855</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1905</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Lise'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Meitner'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1878</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1968</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Hanna'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Hammarström'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1829</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1909</span> &#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> people = [<span class=\"string\">'Beck, Glenn'</span>, <span class=\"string\">'Becker, Carl'</span>, <span class=\"string\">'Beckett, Samuel'</span>, <span class=\"string\">'Beddoes, Mick'</span>, <span class=\"string\">'Beecher, Henry'</span>, <span class=\"string\">'Beethoven, Ludwig'</span>, <span class=\"string\">'Begin, Menachem'</span>, <span class=\"string\">'Belloc, Hilaire'</span>, <span class=\"string\">'Bellow, Saul'</span>, <span class=\"string\">'Benchley, Robert'</span>, <span class=\"string\">'Benenson, Peter'</span>, <span class=\"string\">'Ben-Gurion, David'</span>, <span class=\"string\">'Benjamin, Walter'</span>, <span class=\"string\">'Benn, Tony'</span>, <span class=\"string\">'Bennington, Chester'</span>, <span class=\"string\">'Benson, Leana'</span>, <span class=\"string\">'Bent, Silas'</span>, <span class=\"string\">'Bentsen, Lloyd'</span>, <span class=\"string\">'Berger, Ric'</span>, <span class=\"string\">'Bergman, Ingmar'</span>, <span class=\"string\">'Berio, Luciano'</span>, <span class=\"string\">'Berle, Milton'</span>, <span class=\"string\">'Berlin, Irving'</span>, <span class=\"string\">'Berne, Eric'</span>, <span class=\"string\">'Bernhard, Sandra'</span>, <span class=\"string\">'Berra, Yogi'</span>, <span class=\"string\">'Berry, Halle'</span>, <span class=\"string\">'Berry, Wendell'</span>, <span class=\"string\">'Bethea, Erin'</span>, <span class=\"string\">'Bevan, Aneurin'</span>, <span class=\"string\">'Bevel, Ken'</span>, <span class=\"string\">'Biden, Joseph'</span>, <span class=\"string\">'Bierce, Ambrose'</span>, <span class=\"string\">'Biko, Steve'</span>, <span class=\"string\">'Billings, Josh'</span>, <span class=\"string\">'Biondo, Frank'</span>, <span class=\"string\">'Birrell, Augustine'</span>, <span class=\"string\">'Black, Elk'</span>, <span class=\"string\">'Blair, Robert'</span>, <span class=\"string\">'Blair, Tony'</span>, <span class=\"string\">'Blake, William'</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Array.prototype.filter()</span></span><br><span class=\"line\"><span class=\"comment\">// 1. Filter the list of inventors for those who were born in the 1500's</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fifteen = inventors.filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">inventor</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (inventor.year &gt;= <span class=\"number\">1500</span> &amp;&amp; inventor.year &lt; <span class=\"number\">1600</span> )&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.table(fifteen);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Array.prototype.map()</span></span><br><span class=\"line\"><span class=\"comment\">// 2. Give us an array of the inventors' first and last names</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> fullNames = inventors.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">inventor</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`<span class=\"subst\">$&#123;inventor.first&#125;</span> <span class=\"subst\">$&#123;inventor.last&#125;</span>`</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(fullNames);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Array.prototype.sort()</span></span><br><span class=\"line\"><span class=\"comment\">// 3. Sort the inventors by birthdate, oldest to youngest</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> inventorsOrder = inventors.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a.year - b.year;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(inventorsOrder);</span><br><span class=\"line\"><span class=\"comment\">// Array.prototype.reduce()</span></span><br><span class=\"line\"><span class=\"comment\">// 4. How many years did all the inventors live?</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> yearsTotal = inventors.reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">accum, current</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (accum + (current.passed - current.year));</span><br><span class=\"line\">  &#125;, <span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(yearsTotal);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 5. Sort the inventors by years lived</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> liveLonger = inventors.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (a.passed - a.year) - (b.passed - b.year)</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.table(liveLonger);</span><br><span class=\"line\"><span class=\"comment\">// 6. create a list of Boulevards in Paris that contain 'de' anywhere in the name</span></span><br><span class=\"line\"><span class=\"comment\">// https://en.wikipedia.org/wiki/Category:Boulevards_in_Paris</span></span><br><span class=\"line\">  <span class=\"comment\">// const category = document.querySelector('.mw-category');</span></span><br><span class=\"line\">  <span class=\"comment\">// const links = Array.from(category.querySelectorAll('a'));</span></span><br><span class=\"line\">  <span class=\"comment\">// const de = links</span></span><br><span class=\"line\">  <span class=\"comment\">//             .map(function(link)&#123;return link.textContent&#125;)</span></span><br><span class=\"line\">  <span class=\"comment\">//             .filter(function(street)&#123;return street.includes(\"de\")&#125;);</span></span><br><span class=\"line\">  <span class=\"comment\">// console.log(de);</span></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 7. sort Exercise</span></span><br><span class=\"line\"><span class=\"comment\">// Sort the people alphabetically by last name</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> peopleOrder = people.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> [aLast, aFirst] = a.split(<span class=\"string\">\", \"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> [bLast, bFirst] = b.split(<span class=\"string\">\", \"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ( aLast &gt; bLast) ? <span class=\"number\">1</span> : <span class=\"number\">-1</span> </span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(peopleOrder);</span><br><span class=\"line\"><span class=\"comment\">// 8. Reduce Exercise</span></span><br><span class=\"line\"><span class=\"comment\">// Sum up the instances of each of these</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> data = [<span class=\"string\">'car'</span>, <span class=\"string\">'car'</span>, <span class=\"string\">'truck'</span>, <span class=\"string\">'truck'</span>, <span class=\"string\">'bike'</span>, <span class=\"string\">'walk'</span>, <span class=\"string\">'car'</span>, <span class=\"string\">'van'</span>, <span class=\"string\">'bike'</span>, <span class=\"string\">'walk'</span>, <span class=\"string\">'car'</span>, <span class=\"string\">'van'</span>, <span class=\"string\">'car'</span>, <span class=\"string\">'truck'</span> ];</span><br><span class=\"line\"><span class=\"keyword\">const</span> answer = data.reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">obj, item</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!obj[item])&#123;</span><br><span class=\"line\">    obj[item] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  obj[item]++;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> obj;</span><br><span class=\"line\">&#125;,&#123;&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(answer);</span><br></pre></td></tr></table></figure>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<p>列點如下：</p>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li>\n<p><code>filter()</code>這個方法等同於 ruby 的 <code>select</code>，要記得最後陣列裡面留下的只有那些回傳 true 的項目</p>\n</li>\n<li>\n<p><code>console</code> 除了 <code>console.log</code> 之外還可以 <code>console.table</code><br>\n其他選項還可以參考這邊：<a href=\"https://developer.mozilla.org/zh-TW/docs/Web/API/Console\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-TW/docs/Web/API/Console</a></p>\n</li>\n<li>\n<p><code>map</code> 也要記得最後要留下來的值前面要放 <code>return</code> 才會成功轉換陣列！(忘記好幾次)</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fullNames = inventors.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">inventor</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`<span class=\"subst\">$&#123;inventor.first&#125;</span> <span class=\"subst\">$&#123;inventor.last&#125;</span>`</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li><code>sort()</code> 方法裡面也是要放方法，一般來說會使用回傳 1 跟 -1 來排序</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> inventorsOrder = inventors.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a.year - b.year;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> peopleOrder = people.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [aLast, aFirst] = a.split(<span class=\"string\">\", \"</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [bLast, bFirst] = b.split(<span class=\"string\">\", \"</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ( aLast &gt; bLast) ? <span class=\"number\">1</span> : <span class=\"number\">-1</span> </span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li><code>reduce()</code> 在 js 比較不習慣的地方就是要把初始直放在最後面</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> yearsTotal = inventors.reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">accum, current</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (accum + (current.passed - current.year));</span><br><span class=\"line\">&#125;, <span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>使用 <code>querySelectorAll</code> 得到的 nodeList 無法使用 <code>map</code> 方法，必須用 <code>Array.form</code> 或者用打散的技巧先轉成陣列</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"總結\">總結</h2>\n<p>嘗試自己寫一次真的發現 JS 語法詭譎多變… 再加上各種大小不同的語法糖真的很容易讓人精神錯亂ＸＤ 但目前前端除了接受 JS 之外也沒別的選擇了（嘆），繼續加油！</p>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day04 - Array Cardio 1</h1>\n<h2>作業內容</h2>\n<p>今天的作業就比較無趣一點，是各種有關使用陣列運算的小挑戰，在練 JS 的陣列相關語法</p>\n<p>作業內容跟做完之後的 code 如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> inventors = [</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Albert'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Einstein'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1879</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1955</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Isaac'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Newton'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1643</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1727</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Galileo'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Galilei'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1564</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1642</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Marie'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Curie'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1867</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1934</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Johannes'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Kepler'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1571</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1630</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Nicolaus'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Copernicus'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1473</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1543</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Max'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Planck'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1858</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1947</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Katherine'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Blodgett'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1898</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1979</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Ada'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Lovelace'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1815</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1852</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Sarah E.'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Goode'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1855</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1905</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Lise'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Meitner'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1878</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1968</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">first</span>: <span class=\"string\">'Hanna'</span>, <span class=\"attr\">last</span>: <span class=\"string\">'Hammarström'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1829</span>, <span class=\"attr\">passed</span>: <span class=\"number\">1909</span> &#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> people = [<span class=\"string\">'Beck, Glenn'</span>, <span class=\"string\">'Becker, Carl'</span>, <span class=\"string\">'Beckett, Samuel'</span>, <span class=\"string\">'Beddoes, Mick'</span>, <span class=\"string\">'Beecher, Henry'</span>, <span class=\"string\">'Beethoven, Ludwig'</span>, <span class=\"string\">'Begin, Menachem'</span>, <span class=\"string\">'Belloc, Hilaire'</span>, <span class=\"string\">'Bellow, Saul'</span>, <span class=\"string\">'Benchley, Robert'</span>, <span class=\"string\">'Benenson, Peter'</span>, <span class=\"string\">'Ben-Gurion, David'</span>, <span class=\"string\">'Benjamin, Walter'</span>, <span class=\"string\">'Benn, Tony'</span>, <span class=\"string\">'Bennington, Chester'</span>, <span class=\"string\">'Benson, Leana'</span>, <span class=\"string\">'Bent, Silas'</span>, <span class=\"string\">'Bentsen, Lloyd'</span>, <span class=\"string\">'Berger, Ric'</span>, <span class=\"string\">'Bergman, Ingmar'</span>, <span class=\"string\">'Berio, Luciano'</span>, <span class=\"string\">'Berle, Milton'</span>, <span class=\"string\">'Berlin, Irving'</span>, <span class=\"string\">'Berne, Eric'</span>, <span class=\"string\">'Bernhard, Sandra'</span>, <span class=\"string\">'Berra, Yogi'</span>, <span class=\"string\">'Berry, Halle'</span>, <span class=\"string\">'Berry, Wendell'</span>, <span class=\"string\">'Bethea, Erin'</span>, <span class=\"string\">'Bevan, Aneurin'</span>, <span class=\"string\">'Bevel, Ken'</span>, <span class=\"string\">'Biden, Joseph'</span>, <span class=\"string\">'Bierce, Ambrose'</span>, <span class=\"string\">'Biko, Steve'</span>, <span class=\"string\">'Billings, Josh'</span>, <span class=\"string\">'Biondo, Frank'</span>, <span class=\"string\">'Birrell, Augustine'</span>, <span class=\"string\">'Black, Elk'</span>, <span class=\"string\">'Blair, Robert'</span>, <span class=\"string\">'Blair, Tony'</span>, <span class=\"string\">'Blake, William'</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Array.prototype.filter()</span></span><br><span class=\"line\"><span class=\"comment\">// 1. Filter the list of inventors for those who were born in the 1500's</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fifteen = inventors.filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">inventor</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (inventor.year &gt;= <span class=\"number\">1500</span> &amp;&amp; inventor.year &lt; <span class=\"number\">1600</span> )&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.table(fifteen);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Array.prototype.map()</span></span><br><span class=\"line\"><span class=\"comment\">// 2. Give us an array of the inventors' first and last names</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> fullNames = inventors.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">inventor</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`<span class=\"subst\">$&#123;inventor.first&#125;</span> <span class=\"subst\">$&#123;inventor.last&#125;</span>`</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(fullNames);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Array.prototype.sort()</span></span><br><span class=\"line\"><span class=\"comment\">// 3. Sort the inventors by birthdate, oldest to youngest</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> inventorsOrder = inventors.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a.year - b.year;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(inventorsOrder);</span><br><span class=\"line\"><span class=\"comment\">// Array.prototype.reduce()</span></span><br><span class=\"line\"><span class=\"comment\">// 4. How many years did all the inventors live?</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> yearsTotal = inventors.reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">accum, current</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (accum + (current.passed - current.year));</span><br><span class=\"line\">  &#125;, <span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(yearsTotal);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 5. Sort the inventors by years lived</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> liveLonger = inventors.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (a.passed - a.year) - (b.passed - b.year)</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.table(liveLonger);</span><br><span class=\"line\"><span class=\"comment\">// 6. create a list of Boulevards in Paris that contain 'de' anywhere in the name</span></span><br><span class=\"line\"><span class=\"comment\">// https://en.wikipedia.org/wiki/Category:Boulevards_in_Paris</span></span><br><span class=\"line\">  <span class=\"comment\">// const category = document.querySelector('.mw-category');</span></span><br><span class=\"line\">  <span class=\"comment\">// const links = Array.from(category.querySelectorAll('a'));</span></span><br><span class=\"line\">  <span class=\"comment\">// const de = links</span></span><br><span class=\"line\">  <span class=\"comment\">//             .map(function(link)&#123;return link.textContent&#125;)</span></span><br><span class=\"line\">  <span class=\"comment\">//             .filter(function(street)&#123;return street.includes(\"de\")&#125;);</span></span><br><span class=\"line\">  <span class=\"comment\">// console.log(de);</span></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 7. sort Exercise</span></span><br><span class=\"line\"><span class=\"comment\">// Sort the people alphabetically by last name</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> peopleOrder = people.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> [aLast, aFirst] = a.split(<span class=\"string\">\", \"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> [bLast, bFirst] = b.split(<span class=\"string\">\", \"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ( aLast &gt; bLast) ? <span class=\"number\">1</span> : <span class=\"number\">-1</span> </span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(peopleOrder);</span><br><span class=\"line\"><span class=\"comment\">// 8. Reduce Exercise</span></span><br><span class=\"line\"><span class=\"comment\">// Sum up the instances of each of these</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> data = [<span class=\"string\">'car'</span>, <span class=\"string\">'car'</span>, <span class=\"string\">'truck'</span>, <span class=\"string\">'truck'</span>, <span class=\"string\">'bike'</span>, <span class=\"string\">'walk'</span>, <span class=\"string\">'car'</span>, <span class=\"string\">'van'</span>, <span class=\"string\">'bike'</span>, <span class=\"string\">'walk'</span>, <span class=\"string\">'car'</span>, <span class=\"string\">'van'</span>, <span class=\"string\">'car'</span>, <span class=\"string\">'truck'</span> ];</span><br><span class=\"line\"><span class=\"keyword\">const</span> answer = data.reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">obj, item</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!obj[item])&#123;</span><br><span class=\"line\">    obj[item] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  obj[item]++;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> obj;</span><br><span class=\"line\">&#125;,&#123;&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(answer);</span><br></pre></td></tr></table></figure>\n<h2>學到什麼</h2>\n<p>列點如下：</p>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li>\n<p><code>filter()</code>這個方法等同於 ruby 的 <code>select</code>，要記得最後陣列裡面留下的只有那些回傳 true 的項目</p>\n</li>\n<li>\n<p><code>console</code> 除了 <code>console.log</code> 之外還可以 <code>console.table</code><br>\n其他選項還可以參考這邊：<a href=\"https://developer.mozilla.org/zh-TW/docs/Web/API/Console\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-TW/docs/Web/API/Console</a></p>\n</li>\n<li>\n<p><code>map</code> 也要記得最後要留下來的值前面要放 <code>return</code> 才會成功轉換陣列！(忘記好幾次)</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fullNames = inventors.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">inventor</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`<span class=\"subst\">$&#123;inventor.first&#125;</span> <span class=\"subst\">$&#123;inventor.last&#125;</span>`</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li><code>sort()</code> 方法裡面也是要放方法，一般來說會使用回傳 1 跟 -1 來排序</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> inventorsOrder = inventors.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a.year - b.year;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> peopleOrder = people.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [aLast, aFirst] = a.split(<span class=\"string\">\", \"</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [bLast, bFirst] = b.split(<span class=\"string\">\", \"</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ( aLast &gt; bLast) ? <span class=\"number\">1</span> : <span class=\"number\">-1</span> </span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li><code>reduce()</code> 在 js 比較不習慣的地方就是要把初始直放在最後面</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> yearsTotal = inventors.reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">accum, current</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (accum + (current.passed - current.year));</span><br><span class=\"line\">&#125;, <span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>使用 <code>querySelectorAll</code> 得到的 nodeList 無法使用 <code>map</code> 方法，必須用 <code>Array.form</code> 或者用打散的技巧先轉成陣列</li>\n</ol>\n</li>\n</ul>\n<h2>總結</h2>\n<p>嘗試自己寫一次真的發現 JS 語法詭譎多變… 再加上各種大小不同的語法糖真的很容易讓人精神錯亂ＸＤ 但目前前端除了接受 JS 之外也沒別的選擇了（嘆），繼續加油！</p>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n"},{"title":"JS30 day5 Flex Panels Image Gallery","catalog":true,"toc_nav_num":true,"date":"2019-11-04T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1571164330912-270c6d07e212?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1567&q=80","catagories":["Javascript"],"updateDate":"2019-11-04T14:26:24.000Z","_content":"\n# JS30 day05 - Flex Panels Image Gallery\n\n## 作業內容\n\n今天要做的是做出一個網頁，畫面上有五條欄位，我點擊其中一個他就會放大，並同時會有字從上方跟下方冒出來，再點一次他就會縮小\n![](https://i.imgur.com/BSDu6ML.jpg)\n可以參考這份 [CodePen](https://codepen.io/gbvjpsln/pen/jOOZrOX)\n\n\n## 學到什麼\n\n列點如下：\n\n- CSS\n  1. box-shadow 內陰影的效果還滿漂亮的 `box-shadow: inset 0 0 0 5px rgba(255,255,255,0.1);` 參考資料：https://boohover.pixnet.net/blog/post/35116159-%E9%99%B0%E5%BD%B1%E6%95%88%E6%9E%9C%E5%8F%8A%E5%85%89%E6%9A%88%E6%95%88%E6%9E%9C%E7%9A%84-box-shadow-%28css-property%29\n  2. flex 的 `flex-grow` / `flex-shrink` / `flex-basis` 參考資料：https://cythilya.github.io/2017/04/06/flexbox-advance/\n\n  3. transition 裡面可以指定各種不同的動畫，表現時間跟方式\n  ```css\n  .panel {\n    transition:\n      font-size 0.7s cubic-bezier(0.61,-0.19, 0.7,-0.11),\n      flex 0.7s cubic-bezier(0.61,-0.19, 0.7,-0.11),\n      background 0.2s;\n  }\n  ```\n\n- JS\n  1. 使用 toggle 來新增或刪除 class ex. `this.classList.toggle('open-active');`\n  2. 其實單就 Chrome 瀏覽器來說，`if(e.propertyName.includes(\"flex\"))` 這句可以改成：`if(e.propertyName === \"flex-grow\")`，重點在於 Safari 裡面這個事件叫做 `flex` 而不是 `flex-group` ，為了符合所有瀏覽器才這樣寫\n  3. 在這次的練習中，有一個**很容易犯錯的點**：\n  我的 JS 其中有一行是這樣：\n  ```js\n  panels.forEach( panel => (panel.addEventListener('transitionend', toggleActive)));\n  ```\n  如果我的 function 這樣寫：\n  ```js\n  function toggleActive(e){\n    this.classList.toggle('open-active');\n  };\n  ```\n  結果是： **什麼都沒發生**\n  \n  為什麼呢？ 因為這裡會監聽到兩個`'transitinend'`事件：`flex-grow` 跟 `font-size`，因此他會很快的加上這個 class 又很快的拔掉（觸發兩次），所以要選擇一個來監聽，在這次作業中選擇監聽 `flex-grow` 事件：\n  ```js\n  function toggleActive(e){\n    if(e.propertyName.includes(\"flex\")) {\n      this.classList.toggle('open-active');\n    }\n  };\n  ```\n\n## 總結\n\n今天這個效果滿炫的，我喜歡！然後又再次體會到自己前端能力的不足，再接再厲！\n\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\nHTML:\n```html\n<div class=\"panels\">\n  <div class=\"panel panel1\">\n    <p>Hey</p>\n    <p>Let's</p>\n    <p>Dance</p>\n  </div>\n  <div class=\"panel panel2\">\n    <p>Give</p>\n    <p>Take</p>\n    <p>Receive</p>\n  </div>\n  <div class=\"panel panel3\">\n    <p>Experience</p>\n    <p>It</p>\n    <p>Today</p>\n  </div>\n  <div class=\"panel panel4\">\n    <p>Give</p>\n    <p>All</p>\n    <p>You can</p>\n  </div>\n  <div class=\"panel panel5\">\n    <p>Life</p>\n    <p>In</p>\n    <p>Motion</p>\n  </div>\n</div>\n```\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n  background: #ffc600;\n  font-family: 'helvetica neue';\n  font-size: 20px;\n  font-weight: 200;\n}\n\nbody {\n  margin: 0;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\n.panels {\n  min-height: 100vh;\n  overflow: hidden;\n  display: flex;\n}\n\n.panel {\n  flex: 1;\n  background: #6B0F9C;\n  box-shadow: inset 0 0 0 5px rgba(255,255,255,0.1);\n  color: white;\n  text-align: center;\n  align-items: center;\n  /* Safari transitionend event.propertyName === flex */\n  /* Chrome + FF transitionend event.propertyName === flex-grow */\n  transition:\n    font-size 0.7s cubic-bezier(0.61,-0.19, 0.7,-0.11),\n    flex 0.7s cubic-bezier(0.61,-0.19, 0.7,-0.11),\n    background 0.2s;\n  font-size: 20px;\n  background-size: cover;\n  background-position: center;\n  display: flex;\n  flex-direction: column;\n}\n\n\n.panel1 { background-image:url(https://source.unsplash.com/gYl-UtwNg_I/1500x1500); }\n.panel2 { background-image:url(https://source.unsplash.com/rFKUFzjPYiQ/1500x1500); }\n.panel3 { background-image:url(https://images.unsplash.com/photo-1465188162913-8fb5709d6d57?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&cs=tinysrgb&w=1500&h=1500&fit=crop&s=967e8a713a4e395260793fc8c802901d); }\n.panel4 { background-image:url(https://source.unsplash.com/ITjiVXcwVng/1500x1500); }\n.panel5 { background-image:url(https://source.unsplash.com/3MNzGlQM7qs/1500x1500); }\n\n/* Flex Children */\n.panel > * {\n  flex: 1;\n  margin: 0;\n  width: 100%;\n  transition: transform 0.5s;\n  display: flex;\n  justify-content: center;\n  align-items: center; \n  /* border: 1px solid red; */\n}\n.panel > *:first-child{\n  transform: translateY(-100%);\n}\n.panel.open-active > *:first-child{\n  transform: translateY(0);\n}\n.panel > *:last-child{\n  transform: translateY(100%);\n}\n.panel.open-active > *:last-child{\n  transform: translateY(0);\n}\n\n.panel p {\n  text-transform: uppercase;\n  font-family: 'Amatic SC', cursive;\n  text-shadow: 0 0 4px rgba(0, 0, 0, 0.72), 0 0 14px rgba(0, 0, 0, 0.45);\n  font-size: 2em;\n}\n\n.panel p:nth-child(2) {\n  font-size: 4em;\n}\n\n.panel.open {\n  font-size: 40px;\n  flex: 5;\n}\n```\nJS:\n```js\nconst panels = document.querySelectorAll('.panel');\n\nfunction toggleOpen(e){\n  this.classList.toggle('open')\n};\n\nfunction toggleActive(e){\n  if(e.propertyName.includes(\"flex\")) {\n    this.classList.toggle('open-active');\n  }\n};\n\npanels.forEach( panel => (panel.addEventListener('click', toggleOpen)));\npanels.forEach( panel => (panel.addEventListener('transitionend', toggleActive)));\n```\n","source":"_posts/2019-11-04-JS30_day05.md","raw":"---\ntitle: \"JS30 day5 Flex Panels Image Gallery\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-04 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1571164330912-270c6d07e212?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1567&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-04 22:26:24\n# top: 1\n\n---\n\n# JS30 day05 - Flex Panels Image Gallery\n\n## 作業內容\n\n今天要做的是做出一個網頁，畫面上有五條欄位，我點擊其中一個他就會放大，並同時會有字從上方跟下方冒出來，再點一次他就會縮小\n![](https://i.imgur.com/BSDu6ML.jpg)\n可以參考這份 [CodePen](https://codepen.io/gbvjpsln/pen/jOOZrOX)\n\n\n## 學到什麼\n\n列點如下：\n\n- CSS\n  1. box-shadow 內陰影的效果還滿漂亮的 `box-shadow: inset 0 0 0 5px rgba(255,255,255,0.1);` 參考資料：https://boohover.pixnet.net/blog/post/35116159-%E9%99%B0%E5%BD%B1%E6%95%88%E6%9E%9C%E5%8F%8A%E5%85%89%E6%9A%88%E6%95%88%E6%9E%9C%E7%9A%84-box-shadow-%28css-property%29\n  2. flex 的 `flex-grow` / `flex-shrink` / `flex-basis` 參考資料：https://cythilya.github.io/2017/04/06/flexbox-advance/\n\n  3. transition 裡面可以指定各種不同的動畫，表現時間跟方式\n  ```css\n  .panel {\n    transition:\n      font-size 0.7s cubic-bezier(0.61,-0.19, 0.7,-0.11),\n      flex 0.7s cubic-bezier(0.61,-0.19, 0.7,-0.11),\n      background 0.2s;\n  }\n  ```\n\n- JS\n  1. 使用 toggle 來新增或刪除 class ex. `this.classList.toggle('open-active');`\n  2. 其實單就 Chrome 瀏覽器來說，`if(e.propertyName.includes(\"flex\"))` 這句可以改成：`if(e.propertyName === \"flex-grow\")`，重點在於 Safari 裡面這個事件叫做 `flex` 而不是 `flex-group` ，為了符合所有瀏覽器才這樣寫\n  3. 在這次的練習中，有一個**很容易犯錯的點**：\n  我的 JS 其中有一行是這樣：\n  ```js\n  panels.forEach( panel => (panel.addEventListener('transitionend', toggleActive)));\n  ```\n  如果我的 function 這樣寫：\n  ```js\n  function toggleActive(e){\n    this.classList.toggle('open-active');\n  };\n  ```\n  結果是： **什麼都沒發生**\n  \n  為什麼呢？ 因為這裡會監聽到兩個`'transitinend'`事件：`flex-grow` 跟 `font-size`，因此他會很快的加上這個 class 又很快的拔掉（觸發兩次），所以要選擇一個來監聽，在這次作業中選擇監聽 `flex-grow` 事件：\n  ```js\n  function toggleActive(e){\n    if(e.propertyName.includes(\"flex\")) {\n      this.classList.toggle('open-active');\n    }\n  };\n  ```\n\n## 總結\n\n今天這個效果滿炫的，我喜歡！然後又再次體會到自己前端能力的不足，再接再厲！\n\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\nHTML:\n```html\n<div class=\"panels\">\n  <div class=\"panel panel1\">\n    <p>Hey</p>\n    <p>Let's</p>\n    <p>Dance</p>\n  </div>\n  <div class=\"panel panel2\">\n    <p>Give</p>\n    <p>Take</p>\n    <p>Receive</p>\n  </div>\n  <div class=\"panel panel3\">\n    <p>Experience</p>\n    <p>It</p>\n    <p>Today</p>\n  </div>\n  <div class=\"panel panel4\">\n    <p>Give</p>\n    <p>All</p>\n    <p>You can</p>\n  </div>\n  <div class=\"panel panel5\">\n    <p>Life</p>\n    <p>In</p>\n    <p>Motion</p>\n  </div>\n</div>\n```\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n  background: #ffc600;\n  font-family: 'helvetica neue';\n  font-size: 20px;\n  font-weight: 200;\n}\n\nbody {\n  margin: 0;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\n.panels {\n  min-height: 100vh;\n  overflow: hidden;\n  display: flex;\n}\n\n.panel {\n  flex: 1;\n  background: #6B0F9C;\n  box-shadow: inset 0 0 0 5px rgba(255,255,255,0.1);\n  color: white;\n  text-align: center;\n  align-items: center;\n  /* Safari transitionend event.propertyName === flex */\n  /* Chrome + FF transitionend event.propertyName === flex-grow */\n  transition:\n    font-size 0.7s cubic-bezier(0.61,-0.19, 0.7,-0.11),\n    flex 0.7s cubic-bezier(0.61,-0.19, 0.7,-0.11),\n    background 0.2s;\n  font-size: 20px;\n  background-size: cover;\n  background-position: center;\n  display: flex;\n  flex-direction: column;\n}\n\n\n.panel1 { background-image:url(https://source.unsplash.com/gYl-UtwNg_I/1500x1500); }\n.panel2 { background-image:url(https://source.unsplash.com/rFKUFzjPYiQ/1500x1500); }\n.panel3 { background-image:url(https://images.unsplash.com/photo-1465188162913-8fb5709d6d57?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&cs=tinysrgb&w=1500&h=1500&fit=crop&s=967e8a713a4e395260793fc8c802901d); }\n.panel4 { background-image:url(https://source.unsplash.com/ITjiVXcwVng/1500x1500); }\n.panel5 { background-image:url(https://source.unsplash.com/3MNzGlQM7qs/1500x1500); }\n\n/* Flex Children */\n.panel > * {\n  flex: 1;\n  margin: 0;\n  width: 100%;\n  transition: transform 0.5s;\n  display: flex;\n  justify-content: center;\n  align-items: center; \n  /* border: 1px solid red; */\n}\n.panel > *:first-child{\n  transform: translateY(-100%);\n}\n.panel.open-active > *:first-child{\n  transform: translateY(0);\n}\n.panel > *:last-child{\n  transform: translateY(100%);\n}\n.panel.open-active > *:last-child{\n  transform: translateY(0);\n}\n\n.panel p {\n  text-transform: uppercase;\n  font-family: 'Amatic SC', cursive;\n  text-shadow: 0 0 4px rgba(0, 0, 0, 0.72), 0 0 14px rgba(0, 0, 0, 0.45);\n  font-size: 2em;\n}\n\n.panel p:nth-child(2) {\n  font-size: 4em;\n}\n\n.panel.open {\n  font-size: 40px;\n  flex: 5;\n}\n```\nJS:\n```js\nconst panels = document.querySelectorAll('.panel');\n\nfunction toggleOpen(e){\n  this.classList.toggle('open')\n};\n\nfunction toggleActive(e){\n  if(e.propertyName.includes(\"flex\")) {\n    this.classList.toggle('open-active');\n  }\n};\n\npanels.forEach( panel => (panel.addEventListener('click', toggleOpen)));\npanels.forEach( panel => (panel.addEventListener('transitionend', toggleActive)));\n```\n","slug":"2019-11-04-JS30_day05","published":1,"updated":"2019-11-22T07:01:24.620Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0eus00222ob19t9ff97d","content":"<h1 id=\"js30-day05-flex-panels-image-gallery\">JS30 day05 - Flex Panels Image Gallery</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天要做的是做出一個網頁，畫面上有五條欄位，我點擊其中一個他就會放大，並同時會有字從上方跟下方冒出來，再點一次他就會縮小<br>\n<img src=\"https://i.imgur.com/BSDu6ML.jpg\" alt=\"\"><br>\n可以參考這份 <a href=\"https://codepen.io/gbvjpsln/pen/jOOZrOX\" target=\"_blank\" rel=\"noopener\">CodePen</a></p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<p>列點如下：</p>\n<ul>\n<li>\n<p>CSS</p>\n<ol>\n<li>\n<p>box-shadow 內陰影的效果還滿漂亮的 <code>box-shadow: inset 0 0 0 5px rgba(255,255,255,0.1);</code> 參考資料：<a href=\"https://boohover.pixnet.net/blog/post/35116159-%E9%99%B0%E5%BD%B1%E6%95%88%E6%9E%9C%E5%8F%8A%E5%85%89%E6%9A%88%E6%95%88%E6%9E%9C%E7%9A%84-box-shadow-%28css-property%29\" target=\"_blank\" rel=\"noopener\">https://boohover.pixnet.net/blog/post/35116159-陰影效果及光暈效果的-box-shadow-(css-property)</a></p>\n</li>\n<li>\n<p>flex 的 <code>flex-grow</code> / <code>flex-shrink</code> / <code>flex-basis</code> 參考資料：<a href=\"https://cythilya.github.io/2017/04/06/flexbox-advance/\" target=\"_blank\" rel=\"noopener\">https://cythilya.github.io/2017/04/06/flexbox-advance/</a></p>\n</li>\n<li>\n<p>transition 裡面可以指定各種不同的動畫，表現時間跟方式</p>\n</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.panel</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>:</span><br><span class=\"line\">    font-size <span class=\"number\">0.7s</span> <span class=\"built_in\">cubic-bezier</span>(0.61,-0.19, 0.7,-0.11),</span><br><span class=\"line\">    flex <span class=\"number\">0.7s</span> <span class=\"built_in\">cubic-bezier</span>(0.61,-0.19, 0.7,-0.11),</span><br><span class=\"line\">    background <span class=\"number\">0.2s</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>JS</p>\n<ol>\n<li>使用 toggle 來新增或刪除 class ex. <code>this.classList.toggle('open-active');</code></li>\n<li>其實單就 Chrome 瀏覽器來說，<code>if(e.propertyName.includes(&quot;flex&quot;))</code> 這句可以改成：<code>if(e.propertyName === &quot;flex-grow&quot;)</code>，重點在於 Safari 裡面這個事件叫做 <code>flex</code> 而不是 <code>flex-group</code> ，為了符合所有瀏覽器才這樣寫</li>\n<li>在這次的練習中，有一個<strong>很容易犯錯的點</strong>：<br>\n我的 JS 其中有一行是這樣：</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">panels.forEach( <span class=\"function\"><span class=\"params\">panel</span> =&gt;</span> (panel.addEventListener(<span class=\"string\">'transitionend'</span>, toggleActive)));</span><br></pre></td></tr></table></figure>\n<p>如果我的 function 這樣寫：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toggleActive</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.classList.toggle(<span class=\"string\">'open-active'</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>結果是： <strong>什麼都沒發生</strong></p>\n<p>為什麼呢？ 因為這裡會監聽到兩個<code>'transitinend'</code>事件：<code>flex-grow</code> 跟 <code>font-size</code>，因此他會很快的加上這個 class 又很快的拔掉（觸發兩次），所以要選擇一個來監聽，在這次作業中選擇監聽 <code>flex-grow</code> 事件：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toggleActive</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(e.propertyName.includes(<span class=\"string\">\"flex\"</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.classList.toggle(<span class=\"string\">'open-active'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"總結\">總結</h2>\n<p>今天這個效果滿炫的，我喜歡！然後又再次體會到自己前端能力的不足，再接再厲！</p>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：<br>\nHTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"panels\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"panel panel1\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Hey<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Let's<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Dance<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"panel panel2\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Give<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Take<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Receive<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"panel panel3\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Experience<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>It<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Today<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"panel panel4\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Give<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>All<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>You can<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"panel panel5\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Life<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>In<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Motion<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'helvetica neue'</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">200</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.panels</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.panel</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#6B0F9C</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: inset <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"built_in\">rgba</span>(255,255,255,0.1);</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"comment\">/* Safari transitionend event.propertyName === flex */</span></span><br><span class=\"line\">  <span class=\"comment\">/* Chrome + FF transitionend event.propertyName === flex-grow */</span></span><br><span class=\"line\">  <span class=\"attribute\">transition</span>:</span><br><span class=\"line\">    font-size <span class=\"number\">0.7s</span> <span class=\"built_in\">cubic-bezier</span>(0.61,-0.19, 0.7,-0.11),</span><br><span class=\"line\">    flex <span class=\"number\">0.7s</span> <span class=\"built_in\">cubic-bezier</span>(0.61,-0.19, 0.7,-0.11),</span><br><span class=\"line\">    background <span class=\"number\">0.2s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: cover;</span><br><span class=\"line\">  <span class=\"attribute\">background-position</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">flex-direction</span>: column;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.panel1</span> &#123; <span class=\"attribute\">background-image</span>:<span class=\"built_in\">url</span>(https://source.unsplash.com/gYl-UtwNg_I/1500x1500); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.panel2</span> &#123; <span class=\"attribute\">background-image</span>:<span class=\"built_in\">url</span>(https://source.unsplash.com/rFKUFzjPYiQ/1500x1500); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.panel3</span> &#123; <span class=\"attribute\">background-image</span>:<span class=\"built_in\">url</span>(https://images.unsplash.com/photo-1465188162913-8fb5709d6d57?ixlib=rb-0.3.5&amp;q=80&amp;fm=jpg&amp;crop=faces&amp;cs=tinysrgb&amp;w=1500&amp;h=1500&amp;fit=crop&amp;s=967e8a713a4e395260793fc8c802901d); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.panel4</span> &#123; <span class=\"attribute\">background-image</span>:<span class=\"built_in\">url</span>(https://source.unsplash.com/ITjiVXcwVng/1500x1500); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.panel5</span> &#123; <span class=\"attribute\">background-image</span>:<span class=\"built_in\">url</span>(https://source.unsplash.com/3MNzGlQM7qs/1500x1500); &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Flex Children */</span></span><br><span class=\"line\"><span class=\"selector-class\">.panel</span> &gt; * &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: transform <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center; </span><br><span class=\"line\">  <span class=\"comment\">/* border: 1px solid red; */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.panel</span> &gt; *<span class=\"selector-pseudo\">:first-child</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(-100%);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.panel</span><span class=\"selector-class\">.open-active</span> &gt; *<span class=\"selector-pseudo\">:first-child</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(0);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.panel</span> &gt; *<span class=\"selector-pseudo\">:last-child</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(100%);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.panel</span><span class=\"selector-class\">.open-active</span> &gt; *<span class=\"selector-pseudo\">:last-child</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(0);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.panel</span> <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-transform</span>: uppercase;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'Amatic SC'</span>, cursive;</span><br><span class=\"line\">  <span class=\"attribute\">text-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">4px</span> <span class=\"built_in\">rgba</span>(0, 0, 0, 0.72), <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">14px</span> <span class=\"built_in\">rgba</span>(0, 0, 0, 0.45);</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">2em</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.panel</span> <span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:nth-child(2)</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">4em</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.panel</span><span class=\"selector-class\">.open</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">5</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> panels = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'.panel'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toggleOpen</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.classList.toggle(<span class=\"string\">'open'</span>)</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toggleActive</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(e.propertyName.includes(<span class=\"string\">\"flex\"</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.classList.toggle(<span class=\"string\">'open-active'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">panels.forEach( <span class=\"function\"><span class=\"params\">panel</span> =&gt;</span> (panel.addEventListener(<span class=\"string\">'click'</span>, toggleOpen)));</span><br><span class=\"line\">panels.forEach( <span class=\"function\"><span class=\"params\">panel</span> =&gt;</span> (panel.addEventListener(<span class=\"string\">'transitionend'</span>, toggleActive)));</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day05 - Flex Panels Image Gallery</h1>\n<h2>作業內容</h2>\n<p>今天要做的是做出一個網頁，畫面上有五條欄位，我點擊其中一個他就會放大，並同時會有字從上方跟下方冒出來，再點一次他就會縮小<br>\n<img src=\"https://i.imgur.com/BSDu6ML.jpg\" alt=\"\"><br>\n可以參考這份 <a href=\"https://codepen.io/gbvjpsln/pen/jOOZrOX\" target=\"_blank\" rel=\"noopener\">CodePen</a></p>\n<h2>學到什麼</h2>\n<p>列點如下：</p>\n<ul>\n<li>\n<p>CSS</p>\n<ol>\n<li>\n<p>box-shadow 內陰影的效果還滿漂亮的 <code>box-shadow: inset 0 0 0 5px rgba(255,255,255,0.1);</code> 參考資料：<a href=\"https://boohover.pixnet.net/blog/post/35116159-%E9%99%B0%E5%BD%B1%E6%95%88%E6%9E%9C%E5%8F%8A%E5%85%89%E6%9A%88%E6%95%88%E6%9E%9C%E7%9A%84-box-shadow-%28css-property%29\" target=\"_blank\" rel=\"noopener\">https://boohover.pixnet.net/blog/post/35116159-陰影效果及光暈效果的-box-shadow-(css-property)</a></p>\n</li>\n<li>\n<p>flex 的 <code>flex-grow</code> / <code>flex-shrink</code> / <code>flex-basis</code> 參考資料：<a href=\"https://cythilya.github.io/2017/04/06/flexbox-advance/\" target=\"_blank\" rel=\"noopener\">https://cythilya.github.io/2017/04/06/flexbox-advance/</a></p>\n</li>\n<li>\n<p>transition 裡面可以指定各種不同的動畫，表現時間跟方式</p>\n</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.panel</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>:</span><br><span class=\"line\">    font-size <span class=\"number\">0.7s</span> <span class=\"built_in\">cubic-bezier</span>(0.61,-0.19, 0.7,-0.11),</span><br><span class=\"line\">    flex <span class=\"number\">0.7s</span> <span class=\"built_in\">cubic-bezier</span>(0.61,-0.19, 0.7,-0.11),</span><br><span class=\"line\">    background <span class=\"number\">0.2s</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>JS</p>\n<ol>\n<li>使用 toggle 來新增或刪除 class ex. <code>this.classList.toggle('open-active');</code></li>\n<li>其實單就 Chrome 瀏覽器來說，<code>if(e.propertyName.includes(&quot;flex&quot;))</code> 這句可以改成：<code>if(e.propertyName === &quot;flex-grow&quot;)</code>，重點在於 Safari 裡面這個事件叫做 <code>flex</code> 而不是 <code>flex-group</code> ，為了符合所有瀏覽器才這樣寫</li>\n<li>在這次的練習中，有一個<strong>很容易犯錯的點</strong>：<br>\n我的 JS 其中有一行是這樣：</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">panels.forEach( <span class=\"function\"><span class=\"params\">panel</span> =&gt;</span> (panel.addEventListener(<span class=\"string\">'transitionend'</span>, toggleActive)));</span><br></pre></td></tr></table></figure>\n<p>如果我的 function 這樣寫：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toggleActive</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.classList.toggle(<span class=\"string\">'open-active'</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>結果是： <strong>什麼都沒發生</strong></p>\n<p>為什麼呢？ 因為這裡會監聽到兩個<code>'transitinend'</code>事件：<code>flex-grow</code> 跟 <code>font-size</code>，因此他會很快的加上這個 class 又很快的拔掉（觸發兩次），所以要選擇一個來監聽，在這次作業中選擇監聽 <code>flex-grow</code> 事件：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toggleActive</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(e.propertyName.includes(<span class=\"string\">\"flex\"</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.classList.toggle(<span class=\"string\">'open-active'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2>總結</h2>\n<p>今天這個效果滿炫的，我喜歡！然後又再次體會到自己前端能力的不足，再接再厲！</p>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：<br>\nHTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"panels\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"panel panel1\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Hey<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Let's<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Dance<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"panel panel2\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Give<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Take<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Receive<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"panel panel3\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Experience<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>It<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Today<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"panel panel4\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Give<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>All<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>You can<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"panel panel5\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Life<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>In<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Motion<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'helvetica neue'</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">200</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.panels</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.panel</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#6B0F9C</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: inset <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"built_in\">rgba</span>(255,255,255,0.1);</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"comment\">/* Safari transitionend event.propertyName === flex */</span></span><br><span class=\"line\">  <span class=\"comment\">/* Chrome + FF transitionend event.propertyName === flex-grow */</span></span><br><span class=\"line\">  <span class=\"attribute\">transition</span>:</span><br><span class=\"line\">    font-size <span class=\"number\">0.7s</span> <span class=\"built_in\">cubic-bezier</span>(0.61,-0.19, 0.7,-0.11),</span><br><span class=\"line\">    flex <span class=\"number\">0.7s</span> <span class=\"built_in\">cubic-bezier</span>(0.61,-0.19, 0.7,-0.11),</span><br><span class=\"line\">    background <span class=\"number\">0.2s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: cover;</span><br><span class=\"line\">  <span class=\"attribute\">background-position</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">flex-direction</span>: column;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.panel1</span> &#123; <span class=\"attribute\">background-image</span>:<span class=\"built_in\">url</span>(https://source.unsplash.com/gYl-UtwNg_I/1500x1500); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.panel2</span> &#123; <span class=\"attribute\">background-image</span>:<span class=\"built_in\">url</span>(https://source.unsplash.com/rFKUFzjPYiQ/1500x1500); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.panel3</span> &#123; <span class=\"attribute\">background-image</span>:<span class=\"built_in\">url</span>(https://images.unsplash.com/photo-1465188162913-8fb5709d6d57?ixlib=rb-0.3.5&amp;q=80&amp;fm=jpg&amp;crop=faces&amp;cs=tinysrgb&amp;w=1500&amp;h=1500&amp;fit=crop&amp;s=967e8a713a4e395260793fc8c802901d); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.panel4</span> &#123; <span class=\"attribute\">background-image</span>:<span class=\"built_in\">url</span>(https://source.unsplash.com/ITjiVXcwVng/1500x1500); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.panel5</span> &#123; <span class=\"attribute\">background-image</span>:<span class=\"built_in\">url</span>(https://source.unsplash.com/3MNzGlQM7qs/1500x1500); &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Flex Children */</span></span><br><span class=\"line\"><span class=\"selector-class\">.panel</span> &gt; * &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: transform <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center; </span><br><span class=\"line\">  <span class=\"comment\">/* border: 1px solid red; */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.panel</span> &gt; *<span class=\"selector-pseudo\">:first-child</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(-100%);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.panel</span><span class=\"selector-class\">.open-active</span> &gt; *<span class=\"selector-pseudo\">:first-child</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(0);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.panel</span> &gt; *<span class=\"selector-pseudo\">:last-child</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(100%);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.panel</span><span class=\"selector-class\">.open-active</span> &gt; *<span class=\"selector-pseudo\">:last-child</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(0);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.panel</span> <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-transform</span>: uppercase;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'Amatic SC'</span>, cursive;</span><br><span class=\"line\">  <span class=\"attribute\">text-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">4px</span> <span class=\"built_in\">rgba</span>(0, 0, 0, 0.72), <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">14px</span> <span class=\"built_in\">rgba</span>(0, 0, 0, 0.45);</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">2em</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.panel</span> <span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:nth-child(2)</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">4em</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.panel</span><span class=\"selector-class\">.open</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">5</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> panels = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'.panel'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toggleOpen</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.classList.toggle(<span class=\"string\">'open'</span>)</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toggleActive</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(e.propertyName.includes(<span class=\"string\">\"flex\"</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.classList.toggle(<span class=\"string\">'open-active'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">panels.forEach( <span class=\"function\"><span class=\"params\">panel</span> =&gt;</span> (panel.addEventListener(<span class=\"string\">'click'</span>, toggleOpen)));</span><br><span class=\"line\">panels.forEach( <span class=\"function\"><span class=\"params\">panel</span> =&gt;</span> (panel.addEventListener(<span class=\"string\">'transitionend'</span>, toggleActive)));</span><br></pre></td></tr></table></figure>\n"},{"title":"JS30 day6 Ajax Type Ahead","catalog":true,"toc_nav_num":true,"date":"2019-11-05T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1572940812353-3feb3a08600d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1567&q=80","catagories":["Javascript"],"updateDate":"2019-11-05T14:26:24.000Z","_content":"\n# JS30 day06 - Ajax Type Ahead\n\n## 作業內容\n\n今天要做的是做出一個網頁，畫面上有一個輸入欄位，填入字之後就會依照這個字去找出美國哪個州或城市名字裡面有包含你輸入的字的內容\n![](https://i.imgur.com/jd6Bh1c.png)\n可以參考這份 [CodePen](https://codepen.io/gbvjpsln/pen/abbYoJX)\n\n\n## 學到什麼\n\n列點如下：\n\n- CSS\n  1. 第一次碰到 `outline` 屬性，他跟 `border` 有什麼差呢？\n    - border 會影響這個元素的大小(因為他在 box-model 裡)，而 outline 不會\n    - border 可以對上下左右有不同設定，但 outline 不行\n    - outline 預設是 focus 才會出現，而 border 預設原本就是這個元素常態要出現的一部分\n  2. 做出立體感：下面這個是我覺得很厲害的一小段 css，利用各種旋轉跟微妙的顏色作出立體效果(跪)\n  ```css\n  .suggestions li:nth-child(even) {\n    transform: perspective(100px) rotateX(3deg) translateY(2px) scale(1.001);\n    background: linear-gradient(to bottom,  #ffffff 0%,#EFEFEF 100%);\n  }\n  ```\n\n- JS\n  1. 常數是陣列的話，不能 assign 值給他，但是可以 push，如果要用 assign 的話要改用 let\n  ```js\n  const arr = []\n  arr = [1, 2, 3]\n  // 錯誤\n  arr.push([1, 2, 3])\n  // [1, 2, 3]\n  ```\n\n  2. `fetch` 是一個發送 request 的方法，除了最簡單的 `fetch(網址)` 之外，還可以指定 method / header 等等\n  `fetch` 拿到的東西是帶有 response 的 promise 物件，使用 then 將回傳值傳遞下去\n  他本身附有一些屬性跟方法，最常用的應該是 `.json()` 方法\n  參考資料：https://www.oxxostudio.tw/articles/201908/js-fetch.html\n\n  3. JS 的 `match()` 方法裡面放的是常規表示法\n  ex. \n  ```js\n  var regexp = /[A-E]/gi;\n  var matches_array = str.match(regexp);\n  ```\n  如果傳進去一個非正規的表達式的物件`obj`，就會視為傳入`new RegExp(obj)`\n\n  4. JS 的常規表示物件 `RegExp`，用法可以參考下面\n  參考資料： http://syunguo.blogspot.com/2013/04/jsregular-expressions.html\n  https://pjchender.github.io/2017/09/26/js-%E6%AD%A3%E5%89%87%E8%A1%A8%E9%81%94%E5%BC%8F-regular-expression-regex/\n\n  4. 箭頭函式跟一般的 function 裡面的 this 會不同 https://pjchender.blogspot.com/2017/01/es6-arrow-function.html\n\n## 總結\n\n我怎麼覺得今天的難度一下提高了，一次多了很多比較不熟的概念，可能是第一次接觸 JS 的 Regex 又同時碰到更不熟的 promise 吧ＸＤ \n但寫完之後覺得如果靠自己最寫不出來的應該還是CSS... 那個立體感好厲害R!\n\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\nHTML:\n```html\n<form class=\"search-form\">\n  <input type=\"text\" class=\"search\" placeholder=\"City or State\">\n  <ul class=\"suggestions\">\n    <li>Filter for a city</li>\n    <li>or a state</li>\n  </ul>\n</form>\n```\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n  background: #ffc600;\n  font-family: 'helvetica neue';\n  font-size: 20px;\n  font-weight: 200;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\ninput {\n  width: 100%;\n  padding: 20px;\n}\n\n.search-form {\n  max-width: 400px;\n  margin: 50px auto;\n}\n\ninput.search {\n  margin: 0;\n  text-align: center;\n  outline: 0;\n  border: 10px solid #F7F7F7;\n  width: 120%;\n  left: -10%;\n  position: relative;\n  top: 10px;\n  z-index: 2;\n  border-radius: 5px;\n  font-size: 40px;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.12), inset 0 0 2px rgba(0, 0, 0, 0.19);\n}\n\n.suggestions {\n  margin: 0;\n  padding: 0;\n  position: relative;\n  /*perspective: 20px;*/\n}\n\n.suggestions li {\n  background: white;\n  list-style: none;\n  border-bottom: 1px solid #D8D8D8;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.14);\n  margin: 0;\n  padding: 20px;\n  transition: background 0.2s;\n  display: flex;\n  justify-content: space-between;\n  text-transform: capitalize;\n}\n\n.suggestions li:nth-child(even) {\n  transform: perspective(100px) rotateX(3deg) translateY(2px) scale(1.001);\n  background: linear-gradient(to bottom,  #ffffff 0%,#EFEFEF 100%);\n}\n\n.suggestions li:nth-child(odd) {\n  transform: perspective(100px) rotateX(-3deg) translateY(3px);\n  background: linear-gradient(to top,  #ffffff 0%,#EFEFEF 100%);\n}\n\nspan.population {\n  font-size: 15px;\n}\n\n.hl {\n  background: #ffc600;\n}\n\n```\nJS:\n```js\nconst endpoint = 'https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json';\n\nlet cities = [];\n\nconst prom = fetch(endpoint)\n.then(function(response){\n  return response.json();\n}).then(function(data){\n  return cities.push(...data);\n});\n\nfunction findMatches(wordToMatch, cities){\n  return cities.filter(function(place){\n    const regex = new RegExp(wordToMatch, 'gi');\n    return place.city.match(regex) || place.state.match(regex)\n  });\n};\n\nconst searchInput = document.querySelector('.search');\nconst suggestions = document.querySelector('.suggestions');\n\nfunction displayMatches(){\n  const matchArray = findMatches(this.value, cities);\n\n  const html = matchArray.map(place => {\n    const regex = new RegExp(this.value, 'gi');\n    const cityName = place.city.replace(regex, `<span class=\"hl\">${this.value}</span>`)\n    const stateName = place.state.replace(regex, `<span class='hl'>${this.value}</span>`)\n    return `\n      <li>\n          <span class=\"name\">${cityName}, ${stateName}</span>\n          <span>${place.population}</span>\n      </li>\n    `;\n  }).join('');\n  suggestions.innerHTML = html;\n};\n\nsearchInput.addEventListener('change', displayMatches);\nsearchInput.addEventListener('keyup', displayMatches);\n\n```\n","source":"_posts/2019-11-05-JS30_day06.md","raw":"---\ntitle: \"JS30 day6 Ajax Type Ahead\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-05 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1572940812353-3feb3a08600d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1567&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-05 22:26:24\n# top: 1\n\n---\n\n# JS30 day06 - Ajax Type Ahead\n\n## 作業內容\n\n今天要做的是做出一個網頁，畫面上有一個輸入欄位，填入字之後就會依照這個字去找出美國哪個州或城市名字裡面有包含你輸入的字的內容\n![](https://i.imgur.com/jd6Bh1c.png)\n可以參考這份 [CodePen](https://codepen.io/gbvjpsln/pen/abbYoJX)\n\n\n## 學到什麼\n\n列點如下：\n\n- CSS\n  1. 第一次碰到 `outline` 屬性，他跟 `border` 有什麼差呢？\n    - border 會影響這個元素的大小(因為他在 box-model 裡)，而 outline 不會\n    - border 可以對上下左右有不同設定，但 outline 不行\n    - outline 預設是 focus 才會出現，而 border 預設原本就是這個元素常態要出現的一部分\n  2. 做出立體感：下面這個是我覺得很厲害的一小段 css，利用各種旋轉跟微妙的顏色作出立體效果(跪)\n  ```css\n  .suggestions li:nth-child(even) {\n    transform: perspective(100px) rotateX(3deg) translateY(2px) scale(1.001);\n    background: linear-gradient(to bottom,  #ffffff 0%,#EFEFEF 100%);\n  }\n  ```\n\n- JS\n  1. 常數是陣列的話，不能 assign 值給他，但是可以 push，如果要用 assign 的話要改用 let\n  ```js\n  const arr = []\n  arr = [1, 2, 3]\n  // 錯誤\n  arr.push([1, 2, 3])\n  // [1, 2, 3]\n  ```\n\n  2. `fetch` 是一個發送 request 的方法，除了最簡單的 `fetch(網址)` 之外，還可以指定 method / header 等等\n  `fetch` 拿到的東西是帶有 response 的 promise 物件，使用 then 將回傳值傳遞下去\n  他本身附有一些屬性跟方法，最常用的應該是 `.json()` 方法\n  參考資料：https://www.oxxostudio.tw/articles/201908/js-fetch.html\n\n  3. JS 的 `match()` 方法裡面放的是常規表示法\n  ex. \n  ```js\n  var regexp = /[A-E]/gi;\n  var matches_array = str.match(regexp);\n  ```\n  如果傳進去一個非正規的表達式的物件`obj`，就會視為傳入`new RegExp(obj)`\n\n  4. JS 的常規表示物件 `RegExp`，用法可以參考下面\n  參考資料： http://syunguo.blogspot.com/2013/04/jsregular-expressions.html\n  https://pjchender.github.io/2017/09/26/js-%E6%AD%A3%E5%89%87%E8%A1%A8%E9%81%94%E5%BC%8F-regular-expression-regex/\n\n  4. 箭頭函式跟一般的 function 裡面的 this 會不同 https://pjchender.blogspot.com/2017/01/es6-arrow-function.html\n\n## 總結\n\n我怎麼覺得今天的難度一下提高了，一次多了很多比較不熟的概念，可能是第一次接觸 JS 的 Regex 又同時碰到更不熟的 promise 吧ＸＤ \n但寫完之後覺得如果靠自己最寫不出來的應該還是CSS... 那個立體感好厲害R!\n\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\nHTML:\n```html\n<form class=\"search-form\">\n  <input type=\"text\" class=\"search\" placeholder=\"City or State\">\n  <ul class=\"suggestions\">\n    <li>Filter for a city</li>\n    <li>or a state</li>\n  </ul>\n</form>\n```\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n  background: #ffc600;\n  font-family: 'helvetica neue';\n  font-size: 20px;\n  font-weight: 200;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\ninput {\n  width: 100%;\n  padding: 20px;\n}\n\n.search-form {\n  max-width: 400px;\n  margin: 50px auto;\n}\n\ninput.search {\n  margin: 0;\n  text-align: center;\n  outline: 0;\n  border: 10px solid #F7F7F7;\n  width: 120%;\n  left: -10%;\n  position: relative;\n  top: 10px;\n  z-index: 2;\n  border-radius: 5px;\n  font-size: 40px;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.12), inset 0 0 2px rgba(0, 0, 0, 0.19);\n}\n\n.suggestions {\n  margin: 0;\n  padding: 0;\n  position: relative;\n  /*perspective: 20px;*/\n}\n\n.suggestions li {\n  background: white;\n  list-style: none;\n  border-bottom: 1px solid #D8D8D8;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.14);\n  margin: 0;\n  padding: 20px;\n  transition: background 0.2s;\n  display: flex;\n  justify-content: space-between;\n  text-transform: capitalize;\n}\n\n.suggestions li:nth-child(even) {\n  transform: perspective(100px) rotateX(3deg) translateY(2px) scale(1.001);\n  background: linear-gradient(to bottom,  #ffffff 0%,#EFEFEF 100%);\n}\n\n.suggestions li:nth-child(odd) {\n  transform: perspective(100px) rotateX(-3deg) translateY(3px);\n  background: linear-gradient(to top,  #ffffff 0%,#EFEFEF 100%);\n}\n\nspan.population {\n  font-size: 15px;\n}\n\n.hl {\n  background: #ffc600;\n}\n\n```\nJS:\n```js\nconst endpoint = 'https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json';\n\nlet cities = [];\n\nconst prom = fetch(endpoint)\n.then(function(response){\n  return response.json();\n}).then(function(data){\n  return cities.push(...data);\n});\n\nfunction findMatches(wordToMatch, cities){\n  return cities.filter(function(place){\n    const regex = new RegExp(wordToMatch, 'gi');\n    return place.city.match(regex) || place.state.match(regex)\n  });\n};\n\nconst searchInput = document.querySelector('.search');\nconst suggestions = document.querySelector('.suggestions');\n\nfunction displayMatches(){\n  const matchArray = findMatches(this.value, cities);\n\n  const html = matchArray.map(place => {\n    const regex = new RegExp(this.value, 'gi');\n    const cityName = place.city.replace(regex, `<span class=\"hl\">${this.value}</span>`)\n    const stateName = place.state.replace(regex, `<span class='hl'>${this.value}</span>`)\n    return `\n      <li>\n          <span class=\"name\">${cityName}, ${stateName}</span>\n          <span>${place.population}</span>\n      </li>\n    `;\n  }).join('');\n  suggestions.innerHTML = html;\n};\n\nsearchInput.addEventListener('change', displayMatches);\nsearchInput.addEventListener('keyup', displayMatches);\n\n```\n","slug":"2019-11-05-JS30_day06","published":1,"updated":"2019-11-22T07:01:54.852Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0eut00252ob1bmqg21of","content":"<h1 id=\"js30-day06-ajax-type-ahead\">JS30 day06 - Ajax Type Ahead</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天要做的是做出一個網頁，畫面上有一個輸入欄位，填入字之後就會依照這個字去找出美國哪個州或城市名字裡面有包含你輸入的字的內容<br>\n<img src=\"https://i.imgur.com/jd6Bh1c.png\" alt=\"\"><br>\n可以參考這份 <a href=\"https://codepen.io/gbvjpsln/pen/abbYoJX\" target=\"_blank\" rel=\"noopener\">CodePen</a></p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<p>列點如下：</p>\n<ul>\n<li>\n<p>CSS</p>\n<ol>\n<li>第一次碰到 <code>outline</code> 屬性，他跟 <code>border</code> 有什麼差呢？</li>\n</ol>\n<ul>\n<li>border 會影響這個元素的大小(因為他在 box-model 裡)，而 outline 不會</li>\n<li>border 可以對上下左右有不同設定，但 outline 不行</li>\n<li>outline 預設是 focus 才會出現，而 border 預設原本就是這個元素常態要出現的一部分</li>\n</ul>\n<ol start=\"2\">\n<li>做出立體感：下面這個是我覺得很厲害的一小段 css，利用各種旋轉跟微妙的顏色作出立體效果(跪)</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.suggestions</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child(even)</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">perspective</span>(100px) <span class=\"built_in\">rotateX</span>(3deg) <span class=\"built_in\">translateY</span>(2px) <span class=\"built_in\">scale</span>(1.001);</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(to bottom,  #ffffff 0%,#EFEFEF 100%);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>JS</p>\n<ol>\n<li>常數是陣列的話，不能 assign 值給他，但是可以 push，如果要用 assign 的話要改用 let</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = []</span><br><span class=\"line\">arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"comment\">// 錯誤</span></span><br><span class=\"line\">arr.push([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"comment\">// [1, 2, 3]</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>\n<p><code>fetch</code> 是一個發送 request 的方法，除了最簡單的 <code>fetch(網址)</code> 之外，還可以指定 method / header 等等<br>\n<code>fetch</code> 拿到的東西是帶有 response 的 promise 物件，使用 then 將回傳值傳遞下去<br>\n他本身附有一些屬性跟方法，最常用的應該是 <code>.json()</code> 方法<br>\n參考資料：<a href=\"https://www.oxxostudio.tw/articles/201908/js-fetch.html\" target=\"_blank\" rel=\"noopener\">https://www.oxxostudio.tw/articles/201908/js-fetch.html</a></p>\n</li>\n<li>\n<p>JS 的 <code>match()</code> 方法裡面放的是常規表示法<br>\nex.</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> regexp = <span class=\"regexp\">/[A-E]/gi</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> matches_array = str.match(regexp);</span><br></pre></td></tr></table></figure>\n<p>如果傳進去一個非正規的表達式的物件<code>obj</code>，就會視為傳入<code>new RegExp(obj)</code></p>\n<ol start=\"4\">\n<li>\n<p>JS 的常規表示物件 <code>RegExp</code>，用法可以參考下面<br>\n參考資料： <a href=\"http://syunguo.blogspot.com/2013/04/jsregular-expressions.html\" target=\"_blank\" rel=\"noopener\">http://syunguo.blogspot.com/2013/04/jsregular-expressions.html</a><br>\n<a href=\"https://pjchender.github.io/2017/09/26/js-%E6%AD%A3%E5%89%87%E8%A1%A8%E9%81%94%E5%BC%8F-regular-expression-regex/\" target=\"_blank\" rel=\"noopener\">https://pjchender.github.io/2017/09/26/js-正則表達式-regular-expression-regex/</a></p>\n</li>\n<li>\n<p>箭頭函式跟一般的 function 裡面的 this 會不同 <a href=\"https://pjchender.blogspot.com/2017/01/es6-arrow-function.html\" target=\"_blank\" rel=\"noopener\">https://pjchender.blogspot.com/2017/01/es6-arrow-function.html</a></p>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"總結\">總結</h2>\n<p>我怎麼覺得今天的難度一下提高了，一次多了很多比較不熟的概念，可能是第一次接觸 JS 的 Regex 又同時碰到更不熟的 promise 吧ＸＤ<br>\n但寫完之後覺得如果靠自己最寫不出來的應該還是CSS… 那個立體感好厲害R!</p>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：<br>\nHTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-form\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"City or State\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"suggestions\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Filter for a city<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>or a state<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'helvetica neue'</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">200</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">input</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.search-form</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">400px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">input</span><span class=\"selector-class\">.search</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">outline</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">10px</span> solid <span class=\"number\">#F7F7F7</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">120%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: -<span class=\"number\">10%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"built_in\">rgba</span>(0, 0, 0, 0.12), inset <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">2px</span> <span class=\"built_in\">rgba</span>(0, 0, 0, 0.19);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.suggestions</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"comment\">/*perspective: 20px;*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.suggestions</span> <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#D8D8D8</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"built_in\">rgba</span>(0, 0, 0, 0.14);</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: background <span class=\"number\">0.2s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: space-between;</span><br><span class=\"line\">  <span class=\"attribute\">text-transform</span>: capitalize;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.suggestions</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child(even)</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">perspective</span>(100px) <span class=\"built_in\">rotateX</span>(3deg) <span class=\"built_in\">translateY</span>(2px) <span class=\"built_in\">scale</span>(1.001);</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(to bottom,  #ffffff 0%,#EFEFEF 100%);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.suggestions</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child(odd)</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">perspective</span>(100px) <span class=\"built_in\">rotateX</span>(-3deg) <span class=\"built_in\">translateY</span>(3px);</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(to top,  #ffffff 0%,#EFEFEF 100%);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">span</span><span class=\"selector-class\">.population</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.hl</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> endpoint = <span class=\"string\">'https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> cities = [];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> prom = fetch(endpoint)</span><br><span class=\"line\">.then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">response</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> response.json();</span><br><span class=\"line\">&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> cities.push(...data);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">findMatches</span>(<span class=\"params\">wordToMatch, cities</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> cities.filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">place</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> regex = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(wordToMatch, <span class=\"string\">'gi'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> place.city.match(regex) || place.state.match(regex)</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> searchInput = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.search'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> suggestions = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.suggestions'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">displayMatches</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> matchArray = findMatches(<span class=\"keyword\">this</span>.value, cities);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> html = matchArray.map(<span class=\"function\"><span class=\"params\">place</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> regex = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"keyword\">this</span>.value, <span class=\"string\">'gi'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> cityName = place.city.replace(regex, <span class=\"string\">`&lt;span class=\"hl\"&gt;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.value&#125;</span>&lt;/span&gt;`</span>)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> stateName = place.state.replace(regex, <span class=\"string\">`&lt;span class='hl'&gt;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.value&#125;</span>&lt;/span&gt;`</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">      &lt;li&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;span class=\"name\"&gt;<span class=\"subst\">$&#123;cityName&#125;</span>, <span class=\"subst\">$&#123;stateName&#125;</span>&lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;span&gt;<span class=\"subst\">$&#123;place.population&#125;</span>&lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">    `</span>;</span><br><span class=\"line\">  &#125;).join(<span class=\"string\">''</span>);</span><br><span class=\"line\">  suggestions.innerHTML = html;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">searchInput.addEventListener(<span class=\"string\">'change'</span>, displayMatches);</span><br><span class=\"line\">searchInput.addEventListener(<span class=\"string\">'keyup'</span>, displayMatches);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day06 - Ajax Type Ahead</h1>\n<h2>作業內容</h2>\n<p>今天要做的是做出一個網頁，畫面上有一個輸入欄位，填入字之後就會依照這個字去找出美國哪個州或城市名字裡面有包含你輸入的字的內容<br>\n<img src=\"https://i.imgur.com/jd6Bh1c.png\" alt=\"\"><br>\n可以參考這份 <a href=\"https://codepen.io/gbvjpsln/pen/abbYoJX\" target=\"_blank\" rel=\"noopener\">CodePen</a></p>\n<h2>學到什麼</h2>\n<p>列點如下：</p>\n<ul>\n<li>\n<p>CSS</p>\n<ol>\n<li>第一次碰到 <code>outline</code> 屬性，他跟 <code>border</code> 有什麼差呢？</li>\n</ol>\n<ul>\n<li>border 會影響這個元素的大小(因為他在 box-model 裡)，而 outline 不會</li>\n<li>border 可以對上下左右有不同設定，但 outline 不行</li>\n<li>outline 預設是 focus 才會出現，而 border 預設原本就是這個元素常態要出現的一部分</li>\n</ul>\n<ol start=\"2\">\n<li>做出立體感：下面這個是我覺得很厲害的一小段 css，利用各種旋轉跟微妙的顏色作出立體效果(跪)</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.suggestions</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child(even)</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">perspective</span>(100px) <span class=\"built_in\">rotateX</span>(3deg) <span class=\"built_in\">translateY</span>(2px) <span class=\"built_in\">scale</span>(1.001);</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(to bottom,  #ffffff 0%,#EFEFEF 100%);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>JS</p>\n<ol>\n<li>常數是陣列的話，不能 assign 值給他，但是可以 push，如果要用 assign 的話要改用 let</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = []</span><br><span class=\"line\">arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"comment\">// 錯誤</span></span><br><span class=\"line\">arr.push([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"comment\">// [1, 2, 3]</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>\n<p><code>fetch</code> 是一個發送 request 的方法，除了最簡單的 <code>fetch(網址)</code> 之外，還可以指定 method / header 等等<br>\n<code>fetch</code> 拿到的東西是帶有 response 的 promise 物件，使用 then 將回傳值傳遞下去<br>\n他本身附有一些屬性跟方法，最常用的應該是 <code>.json()</code> 方法<br>\n參考資料：<a href=\"https://www.oxxostudio.tw/articles/201908/js-fetch.html\" target=\"_blank\" rel=\"noopener\">https://www.oxxostudio.tw/articles/201908/js-fetch.html</a></p>\n</li>\n<li>\n<p>JS 的 <code>match()</code> 方法裡面放的是常規表示法<br>\nex.</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> regexp = <span class=\"regexp\">/[A-E]/gi</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> matches_array = str.match(regexp);</span><br></pre></td></tr></table></figure>\n<p>如果傳進去一個非正規的表達式的物件<code>obj</code>，就會視為傳入<code>new RegExp(obj)</code></p>\n<ol start=\"4\">\n<li>\n<p>JS 的常規表示物件 <code>RegExp</code>，用法可以參考下面<br>\n參考資料： <a href=\"http://syunguo.blogspot.com/2013/04/jsregular-expressions.html\" target=\"_blank\" rel=\"noopener\">http://syunguo.blogspot.com/2013/04/jsregular-expressions.html</a><br>\n<a href=\"https://pjchender.github.io/2017/09/26/js-%E6%AD%A3%E5%89%87%E8%A1%A8%E9%81%94%E5%BC%8F-regular-expression-regex/\" target=\"_blank\" rel=\"noopener\">https://pjchender.github.io/2017/09/26/js-正則表達式-regular-expression-regex/</a></p>\n</li>\n<li>\n<p>箭頭函式跟一般的 function 裡面的 this 會不同 <a href=\"https://pjchender.blogspot.com/2017/01/es6-arrow-function.html\" target=\"_blank\" rel=\"noopener\">https://pjchender.blogspot.com/2017/01/es6-arrow-function.html</a></p>\n</li>\n</ol>\n</li>\n</ul>\n<h2>總結</h2>\n<p>我怎麼覺得今天的難度一下提高了，一次多了很多比較不熟的概念，可能是第一次接觸 JS 的 Regex 又同時碰到更不熟的 promise 吧ＸＤ<br>\n但寫完之後覺得如果靠自己最寫不出來的應該還是CSS… 那個立體感好厲害R!</p>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：<br>\nHTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-form\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"City or State\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"suggestions\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Filter for a city<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>or a state<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'helvetica neue'</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">200</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">input</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.search-form</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">400px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">input</span><span class=\"selector-class\">.search</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">outline</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">10px</span> solid <span class=\"number\">#F7F7F7</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">120%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: -<span class=\"number\">10%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"built_in\">rgba</span>(0, 0, 0, 0.12), inset <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">2px</span> <span class=\"built_in\">rgba</span>(0, 0, 0, 0.19);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.suggestions</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"comment\">/*perspective: 20px;*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.suggestions</span> <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#D8D8D8</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"built_in\">rgba</span>(0, 0, 0, 0.14);</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: background <span class=\"number\">0.2s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: space-between;</span><br><span class=\"line\">  <span class=\"attribute\">text-transform</span>: capitalize;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.suggestions</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child(even)</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">perspective</span>(100px) <span class=\"built_in\">rotateX</span>(3deg) <span class=\"built_in\">translateY</span>(2px) <span class=\"built_in\">scale</span>(1.001);</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(to bottom,  #ffffff 0%,#EFEFEF 100%);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.suggestions</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child(odd)</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">perspective</span>(100px) <span class=\"built_in\">rotateX</span>(-3deg) <span class=\"built_in\">translateY</span>(3px);</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(to top,  #ffffff 0%,#EFEFEF 100%);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">span</span><span class=\"selector-class\">.population</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.hl</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> endpoint = <span class=\"string\">'https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> cities = [];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> prom = fetch(endpoint)</span><br><span class=\"line\">.then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">response</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> response.json();</span><br><span class=\"line\">&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> cities.push(...data);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">findMatches</span>(<span class=\"params\">wordToMatch, cities</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> cities.filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">place</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> regex = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(wordToMatch, <span class=\"string\">'gi'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> place.city.match(regex) || place.state.match(regex)</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> searchInput = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.search'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> suggestions = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.suggestions'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">displayMatches</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> matchArray = findMatches(<span class=\"keyword\">this</span>.value, cities);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> html = matchArray.map(<span class=\"function\"><span class=\"params\">place</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> regex = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"keyword\">this</span>.value, <span class=\"string\">'gi'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> cityName = place.city.replace(regex, <span class=\"string\">`&lt;span class=\"hl\"&gt;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.value&#125;</span>&lt;/span&gt;`</span>)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> stateName = place.state.replace(regex, <span class=\"string\">`&lt;span class='hl'&gt;<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.value&#125;</span>&lt;/span&gt;`</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">      &lt;li&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;span class=\"name\"&gt;<span class=\"subst\">$&#123;cityName&#125;</span>, <span class=\"subst\">$&#123;stateName&#125;</span>&lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;span&gt;<span class=\"subst\">$&#123;place.population&#125;</span>&lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">    `</span>;</span><br><span class=\"line\">  &#125;).join(<span class=\"string\">''</span>);</span><br><span class=\"line\">  suggestions.innerHTML = html;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">searchInput.addEventListener(<span class=\"string\">'change'</span>, displayMatches);</span><br><span class=\"line\">searchInput.addEventListener(<span class=\"string\">'keyup'</span>, displayMatches);</span><br></pre></td></tr></table></figure>\n"},{"title":"JS30 day7 Array Cardio Day2\"","catalog":true,"toc_nav_num":true,"date":"2019-11-06T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1572874235534-801cbeeec7b5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1525&q=80","catagories":["Javascript"],"updateDate":"2019-11-06T14:26:24.000Z","_content":"\n# JS30 day07 - Array Cardio Day2\n\n## 作業內容\n\n今天的內容比較無聊，有關一些陣列的方法練習\n\n\n## 學到什麼\n\n列點如下：\n\n- CSS\n  1. 第一次碰到 `outline` 屬性，他跟 `border` 有什麼差呢？\n    - border 會影響這個元素的大小(因為他在 box-model 裡)，而 outline 不會\n    - border 可以對上下左右有不同設定，但 outline 不行\n    - outline 預設是 focus 才會出現，而 border 預設原本就是這個元素常態要出現的一部分\n  2. 做出立體感：下面這個是我覺得很厲害的一小段 css，利用各種旋轉跟微妙的顏色作出立體效果(跪)\n  ```css\n  .suggestions li:nth-child(even) {\n    transform: perspective(100px) rotateX(3deg) translateY(2px) scale(1.001);\n    background: linear-gradient(to bottom,  #ffffff 0%,#EFEFEF 100%);\n  }\n  ```\n\n- JS\n  1. 在 JS 裡面，`some()` 這個方法跟 ruby 中 `any?` 的方法很像，用在確認這個矩陣中有沒有至少一個元素符合這個條件\n\n  2.  在 JS 裡面，`every()` 這個方法跟 ruby 中 `all?` 的方法很像，用在確認這個矩陣中有全部元素符合這個條件\n\n  3. `find()` 這個方法只會回傳第一個符合這個條件的元素\n\n  4. `findIndex()` 這個方法只會回傳第一個符合這個條件的元素的 index\n\n  5. `splice()` 這個方法會改變原有陣列，然後這個規則自己認為有點難記\n    假設現在 `arr = [\"zero\", \"one\", \"two\", \"three\", \"four\"]`\n    - 只有一個數字的時候，會從這個 index 值開始刪掉後面的全部元素\n    ```js\n    arr.splice(2);\n    console.log(arr) //[\"zero\", \"one\"]\n    ```\n     - 只有兩個數字的時候，會把第一個數字當作 index, 後面那個數字當作數量，從 index 開始刪掉此數量的元素\n    ```js\n    arr.splice(2, 1);\n    console.log(arr) //[\"zero\", \"one\", \"three\", \"four\"]\n    ```\n    - 兩個數字之外還有東西的話，follow 上面那條規則，然後在 index 值插入後面帶的東西\n    ```js\n    arr.splice(2, 1, \"qoo\");\n    console.log(arr) //[\"zero\", \"one\", \"qoo\", \"three\", \"four\"]\n    ```\n  6. `slice()` 這個方法**不會**改變原有陣列，然後這規則也是要記一下\n    假設現在 `arr = [\"zero\", \"one\", \"two\", \"three\", \"four\"]`\n    - 只有一個數字的時候，就會刪除前面幾個元素\n    ```js\n    console.log(arr.slice(2)) //[\"two\", \"three\", \"four\"]\n    ```\n    - 如果有兩個數字的話，會把前面那個當作起點 index，後面那個當作終點 index，複製一份起點到終點的陣列(不含終點)\n    ```js\n    console.log(arr.slice(1, 3)) //[\"one\", \"two\"]\n    ```\n    比較簡單的記法是把後面減掉前面，就拿這個數字的元素數量，在這個例子中 3 - 1 ＝ 2，所以就是從 index = 1 開始拿兩個元素，不過因為後面那個數字是可以放負值的，所以這樣記會有漏洞喔！\n\n## 總結\n\n今天的難度我覺得減少好多，可能是有學過 ruby 的關係？？\n\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\nJS:\n```js\nconst people = [\n  { name: 'Wes', year: 1988 },\n  { name: 'Kait', year: 1986 },\n  { name: 'Irv', year: 1970 },\n  { name: 'Lux', year: 2015 }\n];\n\nconst comments = [\n  { text: 'Love this!', id: 523423 },\n  { text: 'Super good', id: 823423 },\n  { text: 'You are the best', id: 2039842 },\n  { text: 'Ramen is my fav food ever', id: 123523 },\n  { text: 'Nice Nice Nice!', id: 542328 }\n];\n\n// Some and Every Checks\n// Array.prototype.some() // is at least one person 19 or older?\nconst isAdult = people.some(function(person){\n  const currentYear = (new Date()).getFullYear();\n  if (currentYear - person.year >= 19){\n    return true;\n  }\n});\nconsole.log(isAdult);\n\n// Array.prototype.every() // is everyone 19 or older?\nconst isAllAdult = people.every(function(person){\n  const currentYear = (new Date()).getFullYear();\n  if (currentYear - person.year >= 19){\n    return true;\n  }\n});\nconsole.log(isAllAdult);\n// Array.prototype.find()\n// Find is like filter, but instead returns just the one you are looking for\n// find the comment with the ID of 823423\nconst theComment = comments.find(function(comment){\n  if(comment.id === 823423){\n    return true;\n  }\n});\nconsole.log(theComment.text);\n\n// Array.prototype.findIndex()\n// Find the comment with this ID\n// delete the comment with the ID of 823423\nconst index = comments.findIndex(function(comment){\n  if(comment.id === 823423){\n    return true\n  }\n})\n// comments.splice(index, 1)\nconst newComments = [\n  comments.slice(0, index),\n  comments.slice(index + 1)\n]\nconsole.table(comments)\n\n```","source":"_posts/2019-11-06-JS30_day07.md","raw":"---\ntitle: JS30 day7 Array Cardio Day2\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-06 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1572874235534-801cbeeec7b5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1525&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-06 22:26:24\n# top: 1\n\n---\n\n# JS30 day07 - Array Cardio Day2\n\n## 作業內容\n\n今天的內容比較無聊，有關一些陣列的方法練習\n\n\n## 學到什麼\n\n列點如下：\n\n- CSS\n  1. 第一次碰到 `outline` 屬性，他跟 `border` 有什麼差呢？\n    - border 會影響這個元素的大小(因為他在 box-model 裡)，而 outline 不會\n    - border 可以對上下左右有不同設定，但 outline 不行\n    - outline 預設是 focus 才會出現，而 border 預設原本就是這個元素常態要出現的一部分\n  2. 做出立體感：下面這個是我覺得很厲害的一小段 css，利用各種旋轉跟微妙的顏色作出立體效果(跪)\n  ```css\n  .suggestions li:nth-child(even) {\n    transform: perspective(100px) rotateX(3deg) translateY(2px) scale(1.001);\n    background: linear-gradient(to bottom,  #ffffff 0%,#EFEFEF 100%);\n  }\n  ```\n\n- JS\n  1. 在 JS 裡面，`some()` 這個方法跟 ruby 中 `any?` 的方法很像，用在確認這個矩陣中有沒有至少一個元素符合這個條件\n\n  2.  在 JS 裡面，`every()` 這個方法跟 ruby 中 `all?` 的方法很像，用在確認這個矩陣中有全部元素符合這個條件\n\n  3. `find()` 這個方法只會回傳第一個符合這個條件的元素\n\n  4. `findIndex()` 這個方法只會回傳第一個符合這個條件的元素的 index\n\n  5. `splice()` 這個方法會改變原有陣列，然後這個規則自己認為有點難記\n    假設現在 `arr = [\"zero\", \"one\", \"two\", \"three\", \"four\"]`\n    - 只有一個數字的時候，會從這個 index 值開始刪掉後面的全部元素\n    ```js\n    arr.splice(2);\n    console.log(arr) //[\"zero\", \"one\"]\n    ```\n     - 只有兩個數字的時候，會把第一個數字當作 index, 後面那個數字當作數量，從 index 開始刪掉此數量的元素\n    ```js\n    arr.splice(2, 1);\n    console.log(arr) //[\"zero\", \"one\", \"three\", \"four\"]\n    ```\n    - 兩個數字之外還有東西的話，follow 上面那條規則，然後在 index 值插入後面帶的東西\n    ```js\n    arr.splice(2, 1, \"qoo\");\n    console.log(arr) //[\"zero\", \"one\", \"qoo\", \"three\", \"four\"]\n    ```\n  6. `slice()` 這個方法**不會**改變原有陣列，然後這規則也是要記一下\n    假設現在 `arr = [\"zero\", \"one\", \"two\", \"three\", \"four\"]`\n    - 只有一個數字的時候，就會刪除前面幾個元素\n    ```js\n    console.log(arr.slice(2)) //[\"two\", \"three\", \"four\"]\n    ```\n    - 如果有兩個數字的話，會把前面那個當作起點 index，後面那個當作終點 index，複製一份起點到終點的陣列(不含終點)\n    ```js\n    console.log(arr.slice(1, 3)) //[\"one\", \"two\"]\n    ```\n    比較簡單的記法是把後面減掉前面，就拿這個數字的元素數量，在這個例子中 3 - 1 ＝ 2，所以就是從 index = 1 開始拿兩個元素，不過因為後面那個數字是可以放負值的，所以這樣記會有漏洞喔！\n\n## 總結\n\n今天的難度我覺得減少好多，可能是有學過 ruby 的關係？？\n\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\nJS:\n```js\nconst people = [\n  { name: 'Wes', year: 1988 },\n  { name: 'Kait', year: 1986 },\n  { name: 'Irv', year: 1970 },\n  { name: 'Lux', year: 2015 }\n];\n\nconst comments = [\n  { text: 'Love this!', id: 523423 },\n  { text: 'Super good', id: 823423 },\n  { text: 'You are the best', id: 2039842 },\n  { text: 'Ramen is my fav food ever', id: 123523 },\n  { text: 'Nice Nice Nice!', id: 542328 }\n];\n\n// Some and Every Checks\n// Array.prototype.some() // is at least one person 19 or older?\nconst isAdult = people.some(function(person){\n  const currentYear = (new Date()).getFullYear();\n  if (currentYear - person.year >= 19){\n    return true;\n  }\n});\nconsole.log(isAdult);\n\n// Array.prototype.every() // is everyone 19 or older?\nconst isAllAdult = people.every(function(person){\n  const currentYear = (new Date()).getFullYear();\n  if (currentYear - person.year >= 19){\n    return true;\n  }\n});\nconsole.log(isAllAdult);\n// Array.prototype.find()\n// Find is like filter, but instead returns just the one you are looking for\n// find the comment with the ID of 823423\nconst theComment = comments.find(function(comment){\n  if(comment.id === 823423){\n    return true;\n  }\n});\nconsole.log(theComment.text);\n\n// Array.prototype.findIndex()\n// Find the comment with this ID\n// delete the comment with the ID of 823423\nconst index = comments.findIndex(function(comment){\n  if(comment.id === 823423){\n    return true\n  }\n})\n// comments.splice(index, 1)\nconst newComments = [\n  comments.slice(0, index),\n  comments.slice(index + 1)\n]\nconsole.table(comments)\n\n```","slug":"2019-11-06-JS30_day07","published":1,"updated":"2019-11-22T07:02:17.596Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0euu00272ob1ct8595ge","content":"<h1 id=\"js30-day07-array-cardio-day2\">JS30 day07 - Array Cardio Day2</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天的內容比較無聊，有關一些陣列的方法練習</p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<p>列點如下：</p>\n<ul>\n<li>\n<p>CSS</p>\n<ol>\n<li>第一次碰到 <code>outline</code> 屬性，他跟 <code>border</code> 有什麼差呢？</li>\n</ol>\n<ul>\n<li>border 會影響這個元素的大小(因為他在 box-model 裡)，而 outline 不會</li>\n<li>border 可以對上下左右有不同設定，但 outline 不行</li>\n<li>outline 預設是 focus 才會出現，而 border 預設原本就是這個元素常態要出現的一部分</li>\n</ul>\n<ol start=\"2\">\n<li>做出立體感：下面這個是我覺得很厲害的一小段 css，利用各種旋轉跟微妙的顏色作出立體效果(跪)</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.suggestions</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child(even)</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">perspective</span>(100px) <span class=\"built_in\">rotateX</span>(3deg) <span class=\"built_in\">translateY</span>(2px) <span class=\"built_in\">scale</span>(1.001);</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(to bottom,  #ffffff 0%,#EFEFEF 100%);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>JS</p>\n<ol>\n<li>\n<p>在 JS 裡面，<code>some()</code> 這個方法跟 ruby 中 <code>any?</code> 的方法很像，用在確認這個矩陣中有沒有至少一個元素符合這個條件</p>\n</li>\n<li>\n<p>在 JS 裡面，<code>every()</code> 這個方法跟 ruby 中 <code>all?</code> 的方法很像，用在確認這個矩陣中有全部元素符合這個條件</p>\n</li>\n<li>\n<p><code>find()</code> 這個方法只會回傳第一個符合這個條件的元素</p>\n</li>\n<li>\n<p><code>findIndex()</code> 這個方法只會回傳第一個符合這個條件的元素的 index</p>\n</li>\n<li>\n<p><code>splice()</code> 這個方法會改變原有陣列，然後這個規則自己認為有點難記<br>\n假設現在 <code>arr = [&quot;zero&quot;, &quot;one&quot;, &quot;two&quot;, &quot;three&quot;, &quot;four&quot;]</code></p>\n</li>\n</ol>\n<ul>\n<li>只有一個數字的時候，會從這個 index 值開始刪掉後面的全部元素</li>\n</ul>\n  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr.splice(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr) <span class=\"comment\">//[\"zero\", \"one\"]</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>只有兩個數字的時候，會把第一個數字當作 index, 後面那個數字當作數量，從 index 開始刪掉此數量的元素</li>\n</ul>\n  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr.splice(<span class=\"number\">2</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr) <span class=\"comment\">//[\"zero\", \"one\", \"three\", \"four\"]</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>兩個數字之外還有東西的話，follow 上面那條規則，然後在 index 值插入後面帶的東西</li>\n</ul>\n  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr.splice(<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"string\">\"qoo\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr) <span class=\"comment\">//[\"zero\", \"one\", \"qoo\", \"three\", \"four\"]</span></span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li><code>slice()</code> 這個方法<strong>不會</strong>改變原有陣列，然後這規則也是要記一下<br>\n假設現在 <code>arr = [&quot;zero&quot;, &quot;one&quot;, &quot;two&quot;, &quot;three&quot;, &quot;four&quot;]</code></li>\n</ol>\n<ul>\n<li>只有一個數字的時候，就會刪除前面幾個元素</li>\n</ul>\n  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.slice(<span class=\"number\">2</span>)) <span class=\"comment\">//[\"two\", \"three\", \"four\"]</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果有兩個數字的話，會把前面那個當作起點 index，後面那個當作終點 index，複製一份起點到終點的陣列(不含終點)</li>\n</ul>\n  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.slice(<span class=\"number\">1</span>, <span class=\"number\">3</span>)) <span class=\"comment\">//[\"one\", \"two\"]</span></span><br></pre></td></tr></table></figure>\n<p>比較簡單的記法是把後面減掉前面，就拿這個數字的元素數量，在這個例子中 3 - 1 ＝ 2，所以就是從 index = 1 開始拿兩個元素，不過因為後面那個數字是可以放負值的，所以這樣記會有漏洞喔！</p>\n</li>\n</ul>\n<h2 id=\"總結\">總結</h2>\n<p>今天的難度我覺得減少好多，可能是有學過 ruby 的關係？？</p>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：<br>\nJS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> people = [</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'Wes'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1988</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'Kait'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1986</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'Irv'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1970</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'Lux'</span>, <span class=\"attr\">year</span>: <span class=\"number\">2015</span> &#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> comments = [</span><br><span class=\"line\">  &#123; <span class=\"attr\">text</span>: <span class=\"string\">'Love this!'</span>, <span class=\"attr\">id</span>: <span class=\"number\">523423</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">text</span>: <span class=\"string\">'Super good'</span>, <span class=\"attr\">id</span>: <span class=\"number\">823423</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">text</span>: <span class=\"string\">'You are the best'</span>, <span class=\"attr\">id</span>: <span class=\"number\">2039842</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">text</span>: <span class=\"string\">'Ramen is my fav food ever'</span>, <span class=\"attr\">id</span>: <span class=\"number\">123523</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">text</span>: <span class=\"string\">'Nice Nice Nice!'</span>, <span class=\"attr\">id</span>: <span class=\"number\">542328</span> &#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Some and Every Checks</span></span><br><span class=\"line\"><span class=\"comment\">// Array.prototype.some() // is at least one person 19 or older?</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> isAdult = people.some(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">person</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> currentYear = (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()).getFullYear();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (currentYear - person.year &gt;= <span class=\"number\">19</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(isAdult);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Array.prototype.every() // is everyone 19 or older?</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> isAllAdult = people.every(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">person</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> currentYear = (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()).getFullYear();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (currentYear - person.year &gt;= <span class=\"number\">19</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(isAllAdult);</span><br><span class=\"line\"><span class=\"comment\">// Array.prototype.find()</span></span><br><span class=\"line\"><span class=\"comment\">// Find is like filter, but instead returns just the one you are looking for</span></span><br><span class=\"line\"><span class=\"comment\">// find the comment with the ID of 823423</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> theComment = comments.find(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">comment</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(comment.id === <span class=\"number\">823423</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(theComment.text);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Array.prototype.findIndex()</span></span><br><span class=\"line\"><span class=\"comment\">// Find the comment with this ID</span></span><br><span class=\"line\"><span class=\"comment\">// delete the comment with the ID of 823423</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> index = comments.findIndex(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">comment</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(comment.id === <span class=\"number\">823423</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// comments.splice(index, 1)</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> newComments = [</span><br><span class=\"line\">  comments.slice(<span class=\"number\">0</span>, index),</span><br><span class=\"line\">  comments.slice(index + <span class=\"number\">1</span>)</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.table(comments)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day07 - Array Cardio Day2</h1>\n<h2>作業內容</h2>\n<p>今天的內容比較無聊，有關一些陣列的方法練習</p>\n<h2>學到什麼</h2>\n<p>列點如下：</p>\n<ul>\n<li>\n<p>CSS</p>\n<ol>\n<li>第一次碰到 <code>outline</code> 屬性，他跟 <code>border</code> 有什麼差呢？</li>\n</ol>\n<ul>\n<li>border 會影響這個元素的大小(因為他在 box-model 裡)，而 outline 不會</li>\n<li>border 可以對上下左右有不同設定，但 outline 不行</li>\n<li>outline 預設是 focus 才會出現，而 border 預設原本就是這個元素常態要出現的一部分</li>\n</ul>\n<ol start=\"2\">\n<li>做出立體感：下面這個是我覺得很厲害的一小段 css，利用各種旋轉跟微妙的顏色作出立體效果(跪)</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.suggestions</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child(even)</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">perspective</span>(100px) <span class=\"built_in\">rotateX</span>(3deg) <span class=\"built_in\">translateY</span>(2px) <span class=\"built_in\">scale</span>(1.001);</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(to bottom,  #ffffff 0%,#EFEFEF 100%);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>JS</p>\n<ol>\n<li>\n<p>在 JS 裡面，<code>some()</code> 這個方法跟 ruby 中 <code>any?</code> 的方法很像，用在確認這個矩陣中有沒有至少一個元素符合這個條件</p>\n</li>\n<li>\n<p>在 JS 裡面，<code>every()</code> 這個方法跟 ruby 中 <code>all?</code> 的方法很像，用在確認這個矩陣中有全部元素符合這個條件</p>\n</li>\n<li>\n<p><code>find()</code> 這個方法只會回傳第一個符合這個條件的元素</p>\n</li>\n<li>\n<p><code>findIndex()</code> 這個方法只會回傳第一個符合這個條件的元素的 index</p>\n</li>\n<li>\n<p><code>splice()</code> 這個方法會改變原有陣列，然後這個規則自己認為有點難記<br>\n假設現在 <code>arr = [&quot;zero&quot;, &quot;one&quot;, &quot;two&quot;, &quot;three&quot;, &quot;four&quot;]</code></p>\n</li>\n</ol>\n<ul>\n<li>只有一個數字的時候，會從這個 index 值開始刪掉後面的全部元素</li>\n</ul>\n  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr.splice(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr) <span class=\"comment\">//[\"zero\", \"one\"]</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>只有兩個數字的時候，會把第一個數字當作 index, 後面那個數字當作數量，從 index 開始刪掉此數量的元素</li>\n</ul>\n  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr.splice(<span class=\"number\">2</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr) <span class=\"comment\">//[\"zero\", \"one\", \"three\", \"four\"]</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>兩個數字之外還有東西的話，follow 上面那條規則，然後在 index 值插入後面帶的東西</li>\n</ul>\n  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr.splice(<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"string\">\"qoo\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr) <span class=\"comment\">//[\"zero\", \"one\", \"qoo\", \"three\", \"four\"]</span></span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li><code>slice()</code> 這個方法<strong>不會</strong>改變原有陣列，然後這規則也是要記一下<br>\n假設現在 <code>arr = [&quot;zero&quot;, &quot;one&quot;, &quot;two&quot;, &quot;three&quot;, &quot;four&quot;]</code></li>\n</ol>\n<ul>\n<li>只有一個數字的時候，就會刪除前面幾個元素</li>\n</ul>\n  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.slice(<span class=\"number\">2</span>)) <span class=\"comment\">//[\"two\", \"three\", \"four\"]</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果有兩個數字的話，會把前面那個當作起點 index，後面那個當作終點 index，複製一份起點到終點的陣列(不含終點)</li>\n</ul>\n  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.slice(<span class=\"number\">1</span>, <span class=\"number\">3</span>)) <span class=\"comment\">//[\"one\", \"two\"]</span></span><br></pre></td></tr></table></figure>\n<p>比較簡單的記法是把後面減掉前面，就拿這個數字的元素數量，在這個例子中 3 - 1 ＝ 2，所以就是從 index = 1 開始拿兩個元素，不過因為後面那個數字是可以放負值的，所以這樣記會有漏洞喔！</p>\n</li>\n</ul>\n<h2>總結</h2>\n<p>今天的難度我覺得減少好多，可能是有學過 ruby 的關係？？</p>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：<br>\nJS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> people = [</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'Wes'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1988</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'Kait'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1986</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'Irv'</span>, <span class=\"attr\">year</span>: <span class=\"number\">1970</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'Lux'</span>, <span class=\"attr\">year</span>: <span class=\"number\">2015</span> &#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> comments = [</span><br><span class=\"line\">  &#123; <span class=\"attr\">text</span>: <span class=\"string\">'Love this!'</span>, <span class=\"attr\">id</span>: <span class=\"number\">523423</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">text</span>: <span class=\"string\">'Super good'</span>, <span class=\"attr\">id</span>: <span class=\"number\">823423</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">text</span>: <span class=\"string\">'You are the best'</span>, <span class=\"attr\">id</span>: <span class=\"number\">2039842</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">text</span>: <span class=\"string\">'Ramen is my fav food ever'</span>, <span class=\"attr\">id</span>: <span class=\"number\">123523</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">text</span>: <span class=\"string\">'Nice Nice Nice!'</span>, <span class=\"attr\">id</span>: <span class=\"number\">542328</span> &#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Some and Every Checks</span></span><br><span class=\"line\"><span class=\"comment\">// Array.prototype.some() // is at least one person 19 or older?</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> isAdult = people.some(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">person</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> currentYear = (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()).getFullYear();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (currentYear - person.year &gt;= <span class=\"number\">19</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(isAdult);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Array.prototype.every() // is everyone 19 or older?</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> isAllAdult = people.every(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">person</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> currentYear = (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()).getFullYear();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (currentYear - person.year &gt;= <span class=\"number\">19</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(isAllAdult);</span><br><span class=\"line\"><span class=\"comment\">// Array.prototype.find()</span></span><br><span class=\"line\"><span class=\"comment\">// Find is like filter, but instead returns just the one you are looking for</span></span><br><span class=\"line\"><span class=\"comment\">// find the comment with the ID of 823423</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> theComment = comments.find(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">comment</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(comment.id === <span class=\"number\">823423</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(theComment.text);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Array.prototype.findIndex()</span></span><br><span class=\"line\"><span class=\"comment\">// Find the comment with this ID</span></span><br><span class=\"line\"><span class=\"comment\">// delete the comment with the ID of 823423</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> index = comments.findIndex(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">comment</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(comment.id === <span class=\"number\">823423</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// comments.splice(index, 1)</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> newComments = [</span><br><span class=\"line\">  comments.slice(<span class=\"number\">0</span>, index),</span><br><span class=\"line\">  comments.slice(index + <span class=\"number\">1</span>)</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.table(comments)</span><br></pre></td></tr></table></figure>"},{"title":"JS30 day8 Fun With HTML5 Canvas","catalog":true,"toc_nav_num":true,"date":"2019-11-07T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1573002027731-845cf749da7e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Javascript"],"updateDate":"2019-11-07T14:26:24.000Z","_content":"\n# JS30 day08 - Fun With HTML5 Canvas\n\n## 作業內容\n\n今天要做出一個網頁，可以在上面畫畫，隨著畫筆移動，顏色會一直循環，色筆粗度也會變大變小\n![](https://i.imgur.com/4XJRtlM.png)\n可以參考這份 [CodePen](https://codepen.io/gbvjpsln/pen/YzzLeWg)\n\n\n## 學到什麼\n\n\n- HTML \n  1. canvas 這個 HTML 標籤就是用來使用 JS 畫圖的\n\n- JS\n  1. 在canvas 上面用 JS 畫畫的時候，並不是直接畫在 html 的 canvas 上面，而是畫在 context（渲染環境） 上面，一個畫布可以同時有好幾個渲染環境，環境必須指定他是 2D 或是 3D\n  ```js\n  const canvas = document.querySelector('#draw');\n  const ctx = canvas.getContext('2d');\n  ```\n  MDN: https://developer.mozilla.org/zh-TW/docs/Web/API/Canvas_API/Tutorial/Basic_usage\n  \n  2. 全域變數 window 的 innerHeight/innerWidth 就代表當下螢幕畫面寬/高 `canvas.width = window.innerWidth;`\n\n  3. canvas 的 context 相關方法跟屬性真的多到記不起來，不過以後用到的機會應該也不多，所以就先把這次用到的先記錄下來：\n  ```js\n  //屬性\n  ctx.strokeStyle = '#BADA55'; //畫筆的顏色\n  ctx.lineJoin = 'round'; //兩條線交會的時候是圓形\n  ctx.lineCap = 'round'; //線的起終點是圓形\n  ctx.lineWidth = 50; //筆的寬度\n  \n  //方法\n  ctx.beginPath(); //產生一個新路徑，路徑會被存在一個次路徑 (sub-path) 清單中\n  ctx.moveTo(lastX, lastY); //設定畫圖起點\n  ctx.lineTo(e.offsetX, e.offsetY); //lineTo是畫直線的時候表示要到哪裡，其他還有畫各種曲線的方法\n  ctx.stroke(); //畫出圖形邊框\n  ```\n\n  4. 如果想要用動畫配合顏色變化，顏色可以用 hsl 表示，因為他的第一個值可以從 0~360 一直循環\n  https://mothereffinghsl.com/\n\n  5. `mouseout` 這個 event 用在滑鼠離開指定 selector 時觸發\n\n## 總結\n\n雖然之後可能會用到這個的機會很少，但我覺得這個練習對於事件的控制來說還滿有幫助的！\n\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\nJS:\n```js\nconst canvas = document.querySelector('#draw');\nconst ctx = canvas.getContext('2d');\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\n\nctx.strokeStyle = '#BADA55';\nctx.lineJoin = 'round'\nctx.lineCap = 'round'\nctx.lineWidth = 50;\n\nlet isDrawing = false;\nlet lastX = 0;\nlet lastY = 0;\nlet hue = 0;\nlet direction = true;\n\nfunction draw(e){\n  if(!isDrawing) return; // 滑鼠沒按著就不跑這 function\n  ctx.strokeStyle = `hsl(${hue}, 100%, 50%)`\n  ctx.beginPath();\n  ctx.moveTo(lastX, lastY);\n  ctx.lineTo(e.offsetX, e.offsetY);\n  ctx.stroke();\n  [lastX, lastY] = [e.offSetX, e.offSetY];\n  hue++;\n  if(hue >= 360){\n    hue = 0;\n  }\n  if(ctx.lineWidth >= 100 || ctx.lineWidth <= 1){\n    direction = !direction;\n  }\n  if(direction){\n    ctx.lineWidth++;\n  } else {\n    ctx.lineWidth--;\n  }\n}\n\ncanvas.addEventListener('mousemove', draw)\ncanvas.addEventListener('mousedown', function(e){\n  isDrawing = true;\n  [lastX, lastY] = [e.offSetX, e.offSetY];\n})\ncanvas.addEventListener('mouseup', function(){ isDrawing = false })\ncanvas.addEventListener('mouseout', function(){ isDrawing = false })\n\n```","source":"_posts/2019-11-07-JS30_day08.md","raw":"---\ntitle: \"JS30 day8 Fun With HTML5 Canvas\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-07 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1573002027731-845cf749da7e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-07 22:26:24\n# top: 1\n\n---\n\n# JS30 day08 - Fun With HTML5 Canvas\n\n## 作業內容\n\n今天要做出一個網頁，可以在上面畫畫，隨著畫筆移動，顏色會一直循環，色筆粗度也會變大變小\n![](https://i.imgur.com/4XJRtlM.png)\n可以參考這份 [CodePen](https://codepen.io/gbvjpsln/pen/YzzLeWg)\n\n\n## 學到什麼\n\n\n- HTML \n  1. canvas 這個 HTML 標籤就是用來使用 JS 畫圖的\n\n- JS\n  1. 在canvas 上面用 JS 畫畫的時候，並不是直接畫在 html 的 canvas 上面，而是畫在 context（渲染環境） 上面，一個畫布可以同時有好幾個渲染環境，環境必須指定他是 2D 或是 3D\n  ```js\n  const canvas = document.querySelector('#draw');\n  const ctx = canvas.getContext('2d');\n  ```\n  MDN: https://developer.mozilla.org/zh-TW/docs/Web/API/Canvas_API/Tutorial/Basic_usage\n  \n  2. 全域變數 window 的 innerHeight/innerWidth 就代表當下螢幕畫面寬/高 `canvas.width = window.innerWidth;`\n\n  3. canvas 的 context 相關方法跟屬性真的多到記不起來，不過以後用到的機會應該也不多，所以就先把這次用到的先記錄下來：\n  ```js\n  //屬性\n  ctx.strokeStyle = '#BADA55'; //畫筆的顏色\n  ctx.lineJoin = 'round'; //兩條線交會的時候是圓形\n  ctx.lineCap = 'round'; //線的起終點是圓形\n  ctx.lineWidth = 50; //筆的寬度\n  \n  //方法\n  ctx.beginPath(); //產生一個新路徑，路徑會被存在一個次路徑 (sub-path) 清單中\n  ctx.moveTo(lastX, lastY); //設定畫圖起點\n  ctx.lineTo(e.offsetX, e.offsetY); //lineTo是畫直線的時候表示要到哪裡，其他還有畫各種曲線的方法\n  ctx.stroke(); //畫出圖形邊框\n  ```\n\n  4. 如果想要用動畫配合顏色變化，顏色可以用 hsl 表示，因為他的第一個值可以從 0~360 一直循環\n  https://mothereffinghsl.com/\n\n  5. `mouseout` 這個 event 用在滑鼠離開指定 selector 時觸發\n\n## 總結\n\n雖然之後可能會用到這個的機會很少，但我覺得這個練習對於事件的控制來說還滿有幫助的！\n\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\nJS:\n```js\nconst canvas = document.querySelector('#draw');\nconst ctx = canvas.getContext('2d');\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\n\nctx.strokeStyle = '#BADA55';\nctx.lineJoin = 'round'\nctx.lineCap = 'round'\nctx.lineWidth = 50;\n\nlet isDrawing = false;\nlet lastX = 0;\nlet lastY = 0;\nlet hue = 0;\nlet direction = true;\n\nfunction draw(e){\n  if(!isDrawing) return; // 滑鼠沒按著就不跑這 function\n  ctx.strokeStyle = `hsl(${hue}, 100%, 50%)`\n  ctx.beginPath();\n  ctx.moveTo(lastX, lastY);\n  ctx.lineTo(e.offsetX, e.offsetY);\n  ctx.stroke();\n  [lastX, lastY] = [e.offSetX, e.offSetY];\n  hue++;\n  if(hue >= 360){\n    hue = 0;\n  }\n  if(ctx.lineWidth >= 100 || ctx.lineWidth <= 1){\n    direction = !direction;\n  }\n  if(direction){\n    ctx.lineWidth++;\n  } else {\n    ctx.lineWidth--;\n  }\n}\n\ncanvas.addEventListener('mousemove', draw)\ncanvas.addEventListener('mousedown', function(e){\n  isDrawing = true;\n  [lastX, lastY] = [e.offSetX, e.offSetY];\n})\ncanvas.addEventListener('mouseup', function(){ isDrawing = false })\ncanvas.addEventListener('mouseout', function(){ isDrawing = false })\n\n```","slug":"2019-11-07-JS30_day08","published":1,"updated":"2019-11-22T07:02:52.997Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0eux002a2ob1lcmrcg35","content":"<h1 id=\"js30-day08-fun-with-html5-canvas\">JS30 day08 - Fun With HTML5 Canvas</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天要做出一個網頁，可以在上面畫畫，隨著畫筆移動，顏色會一直循環，色筆粗度也會變大變小<br>\n<img src=\"https://i.imgur.com/4XJRtlM.png\" alt=\"\"><br>\n可以參考這份 <a href=\"https://codepen.io/gbvjpsln/pen/YzzLeWg\" target=\"_blank\" rel=\"noopener\">CodePen</a></p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<ul>\n<li>\n<p>HTML</p>\n<ol>\n<li>canvas 這個 HTML 標籤就是用來使用 JS 畫圖的</li>\n</ol>\n</li>\n<li>\n<p>JS</p>\n<ol>\n<li>在canvas 上面用 JS 畫畫的時候，並不是直接畫在 html 的 canvas 上面，而是畫在 context（渲染環境） 上面，一個畫布可以同時有好幾個渲染環境，環境必須指定他是 2D 或是 3D</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> canvas = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#draw'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> ctx = canvas.getContext(<span class=\"string\">'2d'</span>);</span><br></pre></td></tr></table></figure>\n<p>MDN: <a href=\"https://developer.mozilla.org/zh-TW/docs/Web/API/Canvas_API/Tutorial/Basic_usage\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-TW/docs/Web/API/Canvas_API/Tutorial/Basic_usage</a></p>\n<ol start=\"2\">\n<li>\n<p>全域變數 window 的 innerHeight/innerWidth 就代表當下螢幕畫面寬/高 <code>canvas.width = window.innerWidth;</code></p>\n</li>\n<li>\n<p>canvas 的 context 相關方法跟屬性真的多到記不起來，不過以後用到的機會應該也不多，所以就先把這次用到的先記錄下來：</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//屬性</span></span><br><span class=\"line\">ctx.strokeStyle = <span class=\"string\">'#BADA55'</span>; <span class=\"comment\">//畫筆的顏色</span></span><br><span class=\"line\">ctx.lineJoin = <span class=\"string\">'round'</span>; <span class=\"comment\">//兩條線交會的時候是圓形</span></span><br><span class=\"line\">ctx.lineCap = <span class=\"string\">'round'</span>; <span class=\"comment\">//線的起終點是圓形</span></span><br><span class=\"line\">ctx.lineWidth = <span class=\"number\">50</span>; <span class=\"comment\">//筆的寬度</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//方法</span></span><br><span class=\"line\">ctx.beginPath(); <span class=\"comment\">//產生一個新路徑，路徑會被存在一個次路徑 (sub-path) 清單中</span></span><br><span class=\"line\">ctx.moveTo(lastX, lastY); <span class=\"comment\">//設定畫圖起點</span></span><br><span class=\"line\">ctx.lineTo(e.offsetX, e.offsetY); <span class=\"comment\">//lineTo是畫直線的時候表示要到哪裡，其他還有畫各種曲線的方法</span></span><br><span class=\"line\">ctx.stroke(); <span class=\"comment\">//畫出圖形邊框</span></span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>\n<p>如果想要用動畫配合顏色變化，顏色可以用 hsl 表示，因為他的第一個值可以從 0~360 一直循環<br>\n<a href=\"https://mothereffinghsl.com/\" target=\"_blank\" rel=\"noopener\">https://mothereffinghsl.com/</a></p>\n</li>\n<li>\n<p><code>mouseout</code> 這個 event 用在滑鼠離開指定 selector 時觸發</p>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"總結\">總結</h2>\n<p>雖然之後可能會用到這個的機會很少，但我覺得這個練習對於事件的控制來說還滿有幫助的！</p>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：<br>\nJS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> canvas = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#draw'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> ctx = canvas.getContext(<span class=\"string\">'2d'</span>);</span><br><span class=\"line\">canvas.width = <span class=\"built_in\">window</span>.innerWidth;</span><br><span class=\"line\">canvas.height = <span class=\"built_in\">window</span>.innerHeight;</span><br><span class=\"line\"></span><br><span class=\"line\">ctx.strokeStyle = <span class=\"string\">'#BADA55'</span>;</span><br><span class=\"line\">ctx.lineJoin = <span class=\"string\">'round'</span></span><br><span class=\"line\">ctx.lineCap = <span class=\"string\">'round'</span></span><br><span class=\"line\">ctx.lineWidth = <span class=\"number\">50</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> isDrawing = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> lastX = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> lastY = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> hue = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> direction = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">draw</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!isDrawing) <span class=\"keyword\">return</span>; <span class=\"comment\">// 滑鼠沒按著就不跑這 function</span></span><br><span class=\"line\">  ctx.strokeStyle = <span class=\"string\">`hsl(<span class=\"subst\">$&#123;hue&#125;</span>, 100%, 50%)`</span></span><br><span class=\"line\">  ctx.beginPath();</span><br><span class=\"line\">  ctx.moveTo(lastX, lastY);</span><br><span class=\"line\">  ctx.lineTo(e.offsetX, e.offsetY);</span><br><span class=\"line\">  ctx.stroke();</span><br><span class=\"line\">  [lastX, lastY] = [e.offSetX, e.offSetY];</span><br><span class=\"line\">  hue++;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(hue &gt;= <span class=\"number\">360</span>)&#123;</span><br><span class=\"line\">    hue = <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(ctx.lineWidth &gt;= <span class=\"number\">100</span> || ctx.lineWidth &lt;= <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    direction = !direction;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(direction)&#123;</span><br><span class=\"line\">    ctx.lineWidth++;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    ctx.lineWidth--;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">canvas.addEventListener(<span class=\"string\">'mousemove'</span>, draw)</span><br><span class=\"line\">canvas.addEventListener(<span class=\"string\">'mousedown'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  isDrawing = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  [lastX, lastY] = [e.offSetX, e.offSetY];</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">canvas.addEventListener(<span class=\"string\">'mouseup'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123; isDrawing = <span class=\"literal\">false</span> &#125;)</span><br><span class=\"line\">canvas.addEventListener(<span class=\"string\">'mouseout'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123; isDrawing = <span class=\"literal\">false</span> &#125;)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day08 - Fun With HTML5 Canvas</h1>\n<h2>作業內容</h2>\n<p>今天要做出一個網頁，可以在上面畫畫，隨著畫筆移動，顏色會一直循環，色筆粗度也會變大變小<br>\n<img src=\"https://i.imgur.com/4XJRtlM.png\" alt=\"\"><br>\n可以參考這份 <a href=\"https://codepen.io/gbvjpsln/pen/YzzLeWg\" target=\"_blank\" rel=\"noopener\">CodePen</a></p>\n<h2>學到什麼</h2>\n<ul>\n<li>\n<p>HTML</p>\n<ol>\n<li>canvas 這個 HTML 標籤就是用來使用 JS 畫圖的</li>\n</ol>\n</li>\n<li>\n<p>JS</p>\n<ol>\n<li>在canvas 上面用 JS 畫畫的時候，並不是直接畫在 html 的 canvas 上面，而是畫在 context（渲染環境） 上面，一個畫布可以同時有好幾個渲染環境，環境必須指定他是 2D 或是 3D</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> canvas = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#draw'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> ctx = canvas.getContext(<span class=\"string\">'2d'</span>);</span><br></pre></td></tr></table></figure>\n<p>MDN: <a href=\"https://developer.mozilla.org/zh-TW/docs/Web/API/Canvas_API/Tutorial/Basic_usage\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-TW/docs/Web/API/Canvas_API/Tutorial/Basic_usage</a></p>\n<ol start=\"2\">\n<li>\n<p>全域變數 window 的 innerHeight/innerWidth 就代表當下螢幕畫面寬/高 <code>canvas.width = window.innerWidth;</code></p>\n</li>\n<li>\n<p>canvas 的 context 相關方法跟屬性真的多到記不起來，不過以後用到的機會應該也不多，所以就先把這次用到的先記錄下來：</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//屬性</span></span><br><span class=\"line\">ctx.strokeStyle = <span class=\"string\">'#BADA55'</span>; <span class=\"comment\">//畫筆的顏色</span></span><br><span class=\"line\">ctx.lineJoin = <span class=\"string\">'round'</span>; <span class=\"comment\">//兩條線交會的時候是圓形</span></span><br><span class=\"line\">ctx.lineCap = <span class=\"string\">'round'</span>; <span class=\"comment\">//線的起終點是圓形</span></span><br><span class=\"line\">ctx.lineWidth = <span class=\"number\">50</span>; <span class=\"comment\">//筆的寬度</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//方法</span></span><br><span class=\"line\">ctx.beginPath(); <span class=\"comment\">//產生一個新路徑，路徑會被存在一個次路徑 (sub-path) 清單中</span></span><br><span class=\"line\">ctx.moveTo(lastX, lastY); <span class=\"comment\">//設定畫圖起點</span></span><br><span class=\"line\">ctx.lineTo(e.offsetX, e.offsetY); <span class=\"comment\">//lineTo是畫直線的時候表示要到哪裡，其他還有畫各種曲線的方法</span></span><br><span class=\"line\">ctx.stroke(); <span class=\"comment\">//畫出圖形邊框</span></span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>\n<p>如果想要用動畫配合顏色變化，顏色可以用 hsl 表示，因為他的第一個值可以從 0~360 一直循環<br>\n<a href=\"https://mothereffinghsl.com/\" target=\"_blank\" rel=\"noopener\">https://mothereffinghsl.com/</a></p>\n</li>\n<li>\n<p><code>mouseout</code> 這個 event 用在滑鼠離開指定 selector 時觸發</p>\n</li>\n</ol>\n</li>\n</ul>\n<h2>總結</h2>\n<p>雖然之後可能會用到這個的機會很少，但我覺得這個練習對於事件的控制來說還滿有幫助的！</p>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：<br>\nJS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> canvas = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#draw'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> ctx = canvas.getContext(<span class=\"string\">'2d'</span>);</span><br><span class=\"line\">canvas.width = <span class=\"built_in\">window</span>.innerWidth;</span><br><span class=\"line\">canvas.height = <span class=\"built_in\">window</span>.innerHeight;</span><br><span class=\"line\"></span><br><span class=\"line\">ctx.strokeStyle = <span class=\"string\">'#BADA55'</span>;</span><br><span class=\"line\">ctx.lineJoin = <span class=\"string\">'round'</span></span><br><span class=\"line\">ctx.lineCap = <span class=\"string\">'round'</span></span><br><span class=\"line\">ctx.lineWidth = <span class=\"number\">50</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> isDrawing = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> lastX = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> lastY = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> hue = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> direction = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">draw</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!isDrawing) <span class=\"keyword\">return</span>; <span class=\"comment\">// 滑鼠沒按著就不跑這 function</span></span><br><span class=\"line\">  ctx.strokeStyle = <span class=\"string\">`hsl(<span class=\"subst\">$&#123;hue&#125;</span>, 100%, 50%)`</span></span><br><span class=\"line\">  ctx.beginPath();</span><br><span class=\"line\">  ctx.moveTo(lastX, lastY);</span><br><span class=\"line\">  ctx.lineTo(e.offsetX, e.offsetY);</span><br><span class=\"line\">  ctx.stroke();</span><br><span class=\"line\">  [lastX, lastY] = [e.offSetX, e.offSetY];</span><br><span class=\"line\">  hue++;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(hue &gt;= <span class=\"number\">360</span>)&#123;</span><br><span class=\"line\">    hue = <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(ctx.lineWidth &gt;= <span class=\"number\">100</span> || ctx.lineWidth &lt;= <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    direction = !direction;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(direction)&#123;</span><br><span class=\"line\">    ctx.lineWidth++;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    ctx.lineWidth--;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">canvas.addEventListener(<span class=\"string\">'mousemove'</span>, draw)</span><br><span class=\"line\">canvas.addEventListener(<span class=\"string\">'mousedown'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  isDrawing = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  [lastX, lastY] = [e.offSetX, e.offSetY];</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">canvas.addEventListener(<span class=\"string\">'mouseup'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123; isDrawing = <span class=\"literal\">false</span> &#125;)</span><br><span class=\"line\">canvas.addEventListener(<span class=\"string\">'mouseout'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123; isDrawing = <span class=\"literal\">false</span> &#125;)</span><br></pre></td></tr></table></figure>"},{"title":"JS30 day9 JS Console 用法","catalog":true,"toc_nav_num":true,"date":"2019-11-08T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1572996398321-5c4b5e687548?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Javascript"],"updateDate":"2019-11-08T14:26:24.000Z","_content":"\n# JS30 day08 - Fun With HTML5 Canvas\n\n## 作業內容\n\n今天只是看看在 Dev tool 裡面， console 可以搭配哪些指令使用\n\n\n## 學到什麼\n\n\n1. 不知道觸發的JS在哪裡的時候，在 Dev tool 的 DOM 物件上面點右鍵 => Break on => Attibute modifications 點擊，這樣觸發的時候就會跟你說相對應的 JS code 在哪裡\n![](https://i.imgur.com/gw8Qzq1.png)\n![](https://i.imgur.com/9O9NC0E.png)\n\n2. 可以使用  `%s` 來代替後面的字串，但目前幾乎都已經被反引號取代\nex. \n```js\nconsole.log('This is %s %s speaking', 'QOO', 'QOO2')\n//This is QOO QOO2 speaking\n```\n\n3. 可以使用 `%c` 改變 console.log 的字格式\n![](https://i.imgur.com/WlAXMhS.png)\n\n4. `console.danger()`\n![](https://i.imgur.com/7ZXZkJV.png)\n\n5. `console.error()`\n![](https://i.imgur.com/CcHPz4j.png)\n\n6. `console.clear()` 可以清除前面的 console log\n\n7. `console.assert()` 後面會接一個判斷，如果這個判斷是錯的才會輸出後面的東西，後面的第二個參數可以是 Object(key-value pair) 或者 字串\n![](https://i.imgur.com/gz804Mk.png)\n\n8. `console.dir()` 可以把一個 DOM 物件在 Dev tool 裡面做成下拉式選單的樣式，方便看出有哪些屬性跟方法可以使用\n![](https://i.imgur.com/A8oRbLc.png)\n\n9. 可以使用 `console.group()` 跟 `console.groupEnd()` 來做出群組式的下拉選單\n![](https://i.imgur.com/CTe277q.png)\n另外如果把 `console.group()` 替換成 `console.groupCollapsed()` 這個群組一開始就會是被縮起來的（看下面的圖）\n![](https://i.imgur.com/NyGc68I.png)\n\n10. `console.count()` 可以幫忙數次數\n![](https://i.imgur.com/B7uooLN.png)\n\n11. `console.time()` 搭配 `console.timeEnd()` 可以粗略算出做某件事情的時間\n![](https://i.imgur.com/LbItM7x.png)\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\n","source":"_posts/2019-11-08-JS30_day09.md","raw":"---\ntitle: \"JS30 day9 JS Console 用法\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-08 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1572996398321-5c4b5e687548?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-08 22:26:24\n# top: 1\n\n---\n\n# JS30 day08 - Fun With HTML5 Canvas\n\n## 作業內容\n\n今天只是看看在 Dev tool 裡面， console 可以搭配哪些指令使用\n\n\n## 學到什麼\n\n\n1. 不知道觸發的JS在哪裡的時候，在 Dev tool 的 DOM 物件上面點右鍵 => Break on => Attibute modifications 點擊，這樣觸發的時候就會跟你說相對應的 JS code 在哪裡\n![](https://i.imgur.com/gw8Qzq1.png)\n![](https://i.imgur.com/9O9NC0E.png)\n\n2. 可以使用  `%s` 來代替後面的字串，但目前幾乎都已經被反引號取代\nex. \n```js\nconsole.log('This is %s %s speaking', 'QOO', 'QOO2')\n//This is QOO QOO2 speaking\n```\n\n3. 可以使用 `%c` 改變 console.log 的字格式\n![](https://i.imgur.com/WlAXMhS.png)\n\n4. `console.danger()`\n![](https://i.imgur.com/7ZXZkJV.png)\n\n5. `console.error()`\n![](https://i.imgur.com/CcHPz4j.png)\n\n6. `console.clear()` 可以清除前面的 console log\n\n7. `console.assert()` 後面會接一個判斷，如果這個判斷是錯的才會輸出後面的東西，後面的第二個參數可以是 Object(key-value pair) 或者 字串\n![](https://i.imgur.com/gz804Mk.png)\n\n8. `console.dir()` 可以把一個 DOM 物件在 Dev tool 裡面做成下拉式選單的樣式，方便看出有哪些屬性跟方法可以使用\n![](https://i.imgur.com/A8oRbLc.png)\n\n9. 可以使用 `console.group()` 跟 `console.groupEnd()` 來做出群組式的下拉選單\n![](https://i.imgur.com/CTe277q.png)\n另外如果把 `console.group()` 替換成 `console.groupCollapsed()` 這個群組一開始就會是被縮起來的（看下面的圖）\n![](https://i.imgur.com/NyGc68I.png)\n\n10. `console.count()` 可以幫忙數次數\n![](https://i.imgur.com/B7uooLN.png)\n\n11. `console.time()` 搭配 `console.timeEnd()` 可以粗略算出做某件事情的時間\n![](https://i.imgur.com/LbItM7x.png)\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\n","slug":"2019-11-08-JS30_day09","published":1,"updated":"2019-11-22T07:03:22.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0eux002c2ob1j8okzqh4","content":"<h1 id=\"js30-day08-fun-with-html5-canvas\">JS30 day08 - Fun With HTML5 Canvas</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天只是看看在 Dev tool 裡面， console 可以搭配哪些指令使用</p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<ol>\n<li>\n<p>不知道觸發的JS在哪裡的時候，在 Dev tool 的 DOM 物件上面點右鍵 =&gt; Break on =&gt; Attibute modifications 點擊，這樣觸發的時候就會跟你說相對應的 JS code 在哪裡<br>\n<img src=\"https://i.imgur.com/gw8Qzq1.png\" alt=\"\"><br>\n<img src=\"https://i.imgur.com/9O9NC0E.png\" alt=\"\"></p>\n</li>\n<li>\n<p>可以使用  <code>%s</code> 來代替後面的字串，但目前幾乎都已經被反引號取代<br>\nex.</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'This is %s %s speaking'</span>, <span class=\"string\">'QOO'</span>, <span class=\"string\">'QOO2'</span>)</span><br><span class=\"line\"><span class=\"comment\">//This is QOO QOO2 speaking</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>\n<p>可以使用 <code>%c</code> 改變 console.log 的字格式<br>\n<img src=\"https://i.imgur.com/WlAXMhS.png\" alt=\"\"></p>\n</li>\n<li>\n<p><code>console.danger()</code><br>\n<img src=\"https://i.imgur.com/7ZXZkJV.png\" alt=\"\"></p>\n</li>\n<li>\n<p><code>console.error()</code><br>\n<img src=\"https://i.imgur.com/CcHPz4j.png\" alt=\"\"></p>\n</li>\n<li>\n<p><code>console.clear()</code> 可以清除前面的 console log</p>\n</li>\n<li>\n<p><code>console.assert()</code> 後面會接一個判斷，如果這個判斷是錯的才會輸出後面的東西，後面的第二個參數可以是 Object(key-value pair) 或者 字串<br>\n<img src=\"https://i.imgur.com/gz804Mk.png\" alt=\"\"></p>\n</li>\n<li>\n<p><code>console.dir()</code> 可以把一個 DOM 物件在 Dev tool 裡面做成下拉式選單的樣式，方便看出有哪些屬性跟方法可以使用<br>\n<img src=\"https://i.imgur.com/A8oRbLc.png\" alt=\"\"></p>\n</li>\n<li>\n<p>可以使用 <code>console.group()</code> 跟 <code>console.groupEnd()</code> 來做出群組式的下拉選單<br>\n<img src=\"https://i.imgur.com/CTe277q.png\" alt=\"\"><br>\n另外如果把 <code>console.group()</code> 替換成 <code>console.groupCollapsed()</code> 這個群組一開始就會是被縮起來的（看下面的圖）<br>\n<img src=\"https://i.imgur.com/NyGc68I.png\" alt=\"\"></p>\n</li>\n<li>\n<p><code>console.count()</code> 可以幫忙數次數<br>\n<img src=\"https://i.imgur.com/B7uooLN.png\" alt=\"\"></p>\n</li>\n<li>\n<p><code>console.time()</code> 搭配 <code>console.timeEnd()</code> 可以粗略算出做某件事情的時間<br>\n<img src=\"https://i.imgur.com/LbItM7x.png\" alt=\"\"></p>\n</li>\n</ol>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day08 - Fun With HTML5 Canvas</h1>\n<h2>作業內容</h2>\n<p>今天只是看看在 Dev tool 裡面， console 可以搭配哪些指令使用</p>\n<h2>學到什麼</h2>\n<ol>\n<li>\n<p>不知道觸發的JS在哪裡的時候，在 Dev tool 的 DOM 物件上面點右鍵 =&gt; Break on =&gt; Attibute modifications 點擊，這樣觸發的時候就會跟你說相對應的 JS code 在哪裡<br>\n<img src=\"https://i.imgur.com/gw8Qzq1.png\" alt=\"\"><br>\n<img src=\"https://i.imgur.com/9O9NC0E.png\" alt=\"\"></p>\n</li>\n<li>\n<p>可以使用  <code>%s</code> 來代替後面的字串，但目前幾乎都已經被反引號取代<br>\nex.</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'This is %s %s speaking'</span>, <span class=\"string\">'QOO'</span>, <span class=\"string\">'QOO2'</span>)</span><br><span class=\"line\"><span class=\"comment\">//This is QOO QOO2 speaking</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>\n<p>可以使用 <code>%c</code> 改變 console.log 的字格式<br>\n<img src=\"https://i.imgur.com/WlAXMhS.png\" alt=\"\"></p>\n</li>\n<li>\n<p><code>console.danger()</code><br>\n<img src=\"https://i.imgur.com/7ZXZkJV.png\" alt=\"\"></p>\n</li>\n<li>\n<p><code>console.error()</code><br>\n<img src=\"https://i.imgur.com/CcHPz4j.png\" alt=\"\"></p>\n</li>\n<li>\n<p><code>console.clear()</code> 可以清除前面的 console log</p>\n</li>\n<li>\n<p><code>console.assert()</code> 後面會接一個判斷，如果這個判斷是錯的才會輸出後面的東西，後面的第二個參數可以是 Object(key-value pair) 或者 字串<br>\n<img src=\"https://i.imgur.com/gz804Mk.png\" alt=\"\"></p>\n</li>\n<li>\n<p><code>console.dir()</code> 可以把一個 DOM 物件在 Dev tool 裡面做成下拉式選單的樣式，方便看出有哪些屬性跟方法可以使用<br>\n<img src=\"https://i.imgur.com/A8oRbLc.png\" alt=\"\"></p>\n</li>\n<li>\n<p>可以使用 <code>console.group()</code> 跟 <code>console.groupEnd()</code> 來做出群組式的下拉選單<br>\n<img src=\"https://i.imgur.com/CTe277q.png\" alt=\"\"><br>\n另外如果把 <code>console.group()</code> 替換成 <code>console.groupCollapsed()</code> 這個群組一開始就會是被縮起來的（看下面的圖）<br>\n<img src=\"https://i.imgur.com/NyGc68I.png\" alt=\"\"></p>\n</li>\n<li>\n<p><code>console.count()</code> 可以幫忙數次數<br>\n<img src=\"https://i.imgur.com/B7uooLN.png\" alt=\"\"></p>\n</li>\n<li>\n<p><code>console.time()</code> 搭配 <code>console.timeEnd()</code> 可以粗略算出做某件事情的時間<br>\n<img src=\"https://i.imgur.com/LbItM7x.png\" alt=\"\"></p>\n</li>\n</ol>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n"},{"title":"JS30 day10 Hold Shift to Check Multiple Checkboxes","catalog":true,"toc_nav_num":true,"date":"2019-11-10T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1573331242632-35c8a94a74da?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Javascript"],"updateDate":"2019-11-10T14:26:24.000Z","_content":"\n# JS30 day10 - Hold Shift to Check Multiple Checkboxes\n\n## 作業內容\n\n今天要做出按住 Shift 的時候可以達到同時選取好幾個 Checkbox 的效果，聽起來簡單，但邏輯上其實有點複雜（抱歉我太嫩）\n![](https://i.imgur.com/4XJRtlM.png)\n可以參考這份 [CodePen](https://codepen.io/gbvjpsln/pen/vYYaOLa)\n\n## 學到什麼\n\n\n- JS\n  1. 在 checkbox 身上加 `click` 的 event 時要記得不管是選擇或者取消都會觸發事件，如果只要選擇這個事件的話，記得要加上 `this.checked` 這個條件在後面的判斷式裡\n  2. 上次有嚐到箭頭函式跟一般 function 裡面 this 的不同，所以這次有嘗試使用 `var self = this` 來解決\n  3. 如果是在有按下 Shift 這個案件的情況下的事件，那麼這個事件本身的 `shiftKey` 屬性是 true，因此判斷式只要寫 `if(e.shiftKey...` 就可以了\n  ![](https://i.imgur.com/K3RPj6Y.png)\n  4. 這裡面邏輯比較難懂的是中間這段，為了方便理解加了 `console.log` 來輔助\n  如果其中一個 checkbox 被點選（條件一），而且是被選擇不是取消（條件二），再加上有按著 Shift 的話（條件三），Checkboxes 會開始跑回圈，先報出自己是誰，如果你是剛剛被點的這個 checkbox 或者你是 lastChecked 的話再喊聲 start\n  ```js\n  if(e.shiftKey && this.checked){\n    checkboxes.forEach(function(checkbox){\n      console.log(self)\n      if(checkbox === self || checkbox === lastChecked){\n        inBetween = !inBetween\n        console.log(\"start!\")\n      }\n\n      if(inBetween){\n        checkbox.checked = true;\n      }\n    })\n  }\n  ```\n  ![](https://i.imgur.com/4OCrPTt.png)\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\nHTML: \n```html\n<div class=\"inbox\">\n  <div class=\"item\">\n    <input type=\"checkbox\">\n    <p>This is an inbox layout.</p>\n  </div>\n  <div class=\"item\">\n    <input type=\"checkbox\">\n    <p>Check one item</p>\n  </div>\n  <div class=\"item\">\n    <input type=\"checkbox\">\n    <p>Hold down your Shift key</p>\n  </div>\n  <div class=\"item\">\n    <input type=\"checkbox\">\n    <p>Check a lower item</p>\n  </div>\n  <div class=\"item\">\n    <input type=\"checkbox\">\n    <p>Everything in between should also be set to checked</p>\n  </div>\n  <div class=\"item\">\n    <input type=\"checkbox\">\n    <p>Try to do it without any libraries</p>\n  </div>\n  <div class=\"item\">\n    <input type=\"checkbox\">\n    <p>Just regular JavaScript</p>\n  </div>\n  <div class=\"item\">\n    <input type=\"checkbox\">\n    <p>Good Luck!</p>\n  </div>\n  <div class=\"item\">\n    <input type=\"checkbox\">\n    <p>Don't forget to tweet your result!</p>\n  </div>\n</div>\n```\nCSS:\n```css\nhtml {\n  font-family: sans-serif;\n  background: #ffc600;\n}\n\n.inbox {\n  max-width: 400px;\n  margin: 50px auto;\n  background: white;\n  border-radius: 5px;\n  box-shadow: 10px 10px 0 rgba(0,0,0,0.1);\n}\n\n.item {\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid #F1F1F1;\n}\n\n.item:last-child {\n  border-bottom: 0;\n}\n\ninput:checked + p {\n  background: #F9F9F9;\n  text-decoration: line-through;\n}\n\ninput[type=\"checkbox\"] {\n  margin: 20px;\n}\n\np {\n  margin: 0;\n  padding: 20px;\n  transition: background 0.2s;\n  flex: 1;\n  font-family:'helvetica neue';\n  font-size: 20px;\n  font-weight: 200;\n  border-left: 1px solid #D1E2FF;\n}\n```\nJS:\n```js\nconst  checkboxes= document.querySelectorAll('.inbox input[type=\"checkbox\"]')\nlet lastChecked\nfunction handleCheck(e){\n  // self 是被點的 checkbox\n  let self = this \n  let inBetween = false;\n  if(e.shiftKey && this.checked){\n    checkboxes.forEach(function(checkbox){\n      if(checkbox === self || checkbox === lastChecked){\n        inBetween = !inBetween\n      }\n\n      if(inBetween){\n        checkbox.checked = true;\n      }\n    })\n  }\n  lastChecked = this;\n}\n\ncheckboxes.forEach(function(checkbox){\n  checkbox.addEventListener('click', handleCheck)\n})\n```","source":"_posts/2019-11-10-JS30_day10.md","raw":"---\ntitle: \"JS30 day10 Hold Shift to Check Multiple Checkboxes\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-10 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1573331242632-35c8a94a74da?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-10 22:26:24\n# top: 1\n\n---\n\n# JS30 day10 - Hold Shift to Check Multiple Checkboxes\n\n## 作業內容\n\n今天要做出按住 Shift 的時候可以達到同時選取好幾個 Checkbox 的效果，聽起來簡單，但邏輯上其實有點複雜（抱歉我太嫩）\n![](https://i.imgur.com/4XJRtlM.png)\n可以參考這份 [CodePen](https://codepen.io/gbvjpsln/pen/vYYaOLa)\n\n## 學到什麼\n\n\n- JS\n  1. 在 checkbox 身上加 `click` 的 event 時要記得不管是選擇或者取消都會觸發事件，如果只要選擇這個事件的話，記得要加上 `this.checked` 這個條件在後面的判斷式裡\n  2. 上次有嚐到箭頭函式跟一般 function 裡面 this 的不同，所以這次有嘗試使用 `var self = this` 來解決\n  3. 如果是在有按下 Shift 這個案件的情況下的事件，那麼這個事件本身的 `shiftKey` 屬性是 true，因此判斷式只要寫 `if(e.shiftKey...` 就可以了\n  ![](https://i.imgur.com/K3RPj6Y.png)\n  4. 這裡面邏輯比較難懂的是中間這段，為了方便理解加了 `console.log` 來輔助\n  如果其中一個 checkbox 被點選（條件一），而且是被選擇不是取消（條件二），再加上有按著 Shift 的話（條件三），Checkboxes 會開始跑回圈，先報出自己是誰，如果你是剛剛被點的這個 checkbox 或者你是 lastChecked 的話再喊聲 start\n  ```js\n  if(e.shiftKey && this.checked){\n    checkboxes.forEach(function(checkbox){\n      console.log(self)\n      if(checkbox === self || checkbox === lastChecked){\n        inBetween = !inBetween\n        console.log(\"start!\")\n      }\n\n      if(inBetween){\n        checkbox.checked = true;\n      }\n    })\n  }\n  ```\n  ![](https://i.imgur.com/4OCrPTt.png)\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\nHTML: \n```html\n<div class=\"inbox\">\n  <div class=\"item\">\n    <input type=\"checkbox\">\n    <p>This is an inbox layout.</p>\n  </div>\n  <div class=\"item\">\n    <input type=\"checkbox\">\n    <p>Check one item</p>\n  </div>\n  <div class=\"item\">\n    <input type=\"checkbox\">\n    <p>Hold down your Shift key</p>\n  </div>\n  <div class=\"item\">\n    <input type=\"checkbox\">\n    <p>Check a lower item</p>\n  </div>\n  <div class=\"item\">\n    <input type=\"checkbox\">\n    <p>Everything in between should also be set to checked</p>\n  </div>\n  <div class=\"item\">\n    <input type=\"checkbox\">\n    <p>Try to do it without any libraries</p>\n  </div>\n  <div class=\"item\">\n    <input type=\"checkbox\">\n    <p>Just regular JavaScript</p>\n  </div>\n  <div class=\"item\">\n    <input type=\"checkbox\">\n    <p>Good Luck!</p>\n  </div>\n  <div class=\"item\">\n    <input type=\"checkbox\">\n    <p>Don't forget to tweet your result!</p>\n  </div>\n</div>\n```\nCSS:\n```css\nhtml {\n  font-family: sans-serif;\n  background: #ffc600;\n}\n\n.inbox {\n  max-width: 400px;\n  margin: 50px auto;\n  background: white;\n  border-radius: 5px;\n  box-shadow: 10px 10px 0 rgba(0,0,0,0.1);\n}\n\n.item {\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid #F1F1F1;\n}\n\n.item:last-child {\n  border-bottom: 0;\n}\n\ninput:checked + p {\n  background: #F9F9F9;\n  text-decoration: line-through;\n}\n\ninput[type=\"checkbox\"] {\n  margin: 20px;\n}\n\np {\n  margin: 0;\n  padding: 20px;\n  transition: background 0.2s;\n  flex: 1;\n  font-family:'helvetica neue';\n  font-size: 20px;\n  font-weight: 200;\n  border-left: 1px solid #D1E2FF;\n}\n```\nJS:\n```js\nconst  checkboxes= document.querySelectorAll('.inbox input[type=\"checkbox\"]')\nlet lastChecked\nfunction handleCheck(e){\n  // self 是被點的 checkbox\n  let self = this \n  let inBetween = false;\n  if(e.shiftKey && this.checked){\n    checkboxes.forEach(function(checkbox){\n      if(checkbox === self || checkbox === lastChecked){\n        inBetween = !inBetween\n      }\n\n      if(inBetween){\n        checkbox.checked = true;\n      }\n    })\n  }\n  lastChecked = this;\n}\n\ncheckboxes.forEach(function(checkbox){\n  checkbox.addEventListener('click', handleCheck)\n})\n```","slug":"2019-11-10-JS30_day10","published":1,"updated":"2019-11-22T07:05:45.180Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0euy002e2ob13vmr3r4e","content":"<h1 id=\"js30-day10-hold-shift-to-check-multiple-checkboxes\">JS30 day10 - Hold Shift to Check Multiple Checkboxes</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天要做出按住 Shift 的時候可以達到同時選取好幾個 Checkbox 的效果，聽起來簡單，但邏輯上其實有點複雜（抱歉我太嫩）<br>\n<img src=\"https://i.imgur.com/4XJRtlM.png\" alt=\"\"><br>\n可以參考這份 <a href=\"https://codepen.io/gbvjpsln/pen/vYYaOLa\" target=\"_blank\" rel=\"noopener\">CodePen</a></p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li>在 checkbox 身上加 <code>click</code> 的 event 時要記得不管是選擇或者取消都會觸發事件，如果只要選擇這個事件的話，記得要加上 <code>this.checked</code> 這個條件在後面的判斷式裡</li>\n<li>上次有嚐到箭頭函式跟一般 function 裡面 this 的不同，所以這次有嘗試使用 <code>var self = this</code> 來解決</li>\n<li>如果是在有按下 Shift 這個案件的情況下的事件，那麼這個事件本身的 <code>shiftKey</code> 屬性是 true，因此判斷式只要寫 <code>if(e.shiftKey...</code> 就可以了<br>\n<img src=\"https://i.imgur.com/K3RPj6Y.png\" alt=\"\"></li>\n<li>這裡面邏輯比較難懂的是中間這段，為了方便理解加了 <code>console.log</code> 來輔助<br>\n如果其中一個 checkbox 被點選（條件一），而且是被選擇不是取消（條件二），再加上有按著 Shift 的話（條件三），Checkboxes 會開始跑回圈，先報出自己是誰，如果你是剛剛被點的這個 checkbox 或者你是 lastChecked 的話再喊聲 start</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(e.shiftKey &amp;&amp; <span class=\"keyword\">this</span>.checked)&#123;</span><br><span class=\"line\">  checkboxes.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">checkbox</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(self)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(checkbox === self || checkbox === lastChecked)&#123;</span><br><span class=\"line\">      inBetween = !inBetween</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">\"start!\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(inBetween)&#123;</span><br><span class=\"line\">      checkbox.checked = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://i.imgur.com/4OCrPTt.png\" alt=\"\"></p>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：<br>\nHTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"inbox\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>This is an inbox layout.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Check one item<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Hold down your Shift key<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Check a lower item<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Everything in between should also be set to checked<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Try to do it without any libraries<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Just regular JavaScript<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Good Luck!<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Don't forget to tweet your result!<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.inbox</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">400px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">10px</span> <span class=\"number\">10px</span> <span class=\"number\">0</span> <span class=\"built_in\">rgba</span>(0,0,0,0.1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#F1F1F1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">input</span><span class=\"selector-pseudo\">:checked</span> + <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#F9F9F9</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: line-through;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">input</span><span class=\"selector-attr\">[type=\"checkbox\"]</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: background <span class=\"number\">0.2s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>:<span class=\"string\">'helvetica neue'</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">200</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-left</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#D1E2FF</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span>  checkboxes= <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'.inbox input[type=\"checkbox\"]'</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> lastChecked</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleCheck</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// self 是被點的 checkbox</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> self = <span class=\"keyword\">this</span> </span><br><span class=\"line\">  <span class=\"keyword\">let</span> inBetween = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(e.shiftKey &amp;&amp; <span class=\"keyword\">this</span>.checked)&#123;</span><br><span class=\"line\">    checkboxes.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">checkbox</span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(checkbox === self || checkbox === lastChecked)&#123;</span><br><span class=\"line\">        inBetween = !inBetween</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(inBetween)&#123;</span><br><span class=\"line\">        checkbox.checked = <span class=\"literal\">true</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  lastChecked = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">checkboxes.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">checkbox</span>)</span>&#123;</span><br><span class=\"line\">  checkbox.addEventListener(<span class=\"string\">'click'</span>, handleCheck)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day10 - Hold Shift to Check Multiple Checkboxes</h1>\n<h2>作業內容</h2>\n<p>今天要做出按住 Shift 的時候可以達到同時選取好幾個 Checkbox 的效果，聽起來簡單，但邏輯上其實有點複雜（抱歉我太嫩）<br>\n<img src=\"https://i.imgur.com/4XJRtlM.png\" alt=\"\"><br>\n可以參考這份 <a href=\"https://codepen.io/gbvjpsln/pen/vYYaOLa\" target=\"_blank\" rel=\"noopener\">CodePen</a></p>\n<h2>學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li>在 checkbox 身上加 <code>click</code> 的 event 時要記得不管是選擇或者取消都會觸發事件，如果只要選擇這個事件的話，記得要加上 <code>this.checked</code> 這個條件在後面的判斷式裡</li>\n<li>上次有嚐到箭頭函式跟一般 function 裡面 this 的不同，所以這次有嘗試使用 <code>var self = this</code> 來解決</li>\n<li>如果是在有按下 Shift 這個案件的情況下的事件，那麼這個事件本身的 <code>shiftKey</code> 屬性是 true，因此判斷式只要寫 <code>if(e.shiftKey...</code> 就可以了<br>\n<img src=\"https://i.imgur.com/K3RPj6Y.png\" alt=\"\"></li>\n<li>這裡面邏輯比較難懂的是中間這段，為了方便理解加了 <code>console.log</code> 來輔助<br>\n如果其中一個 checkbox 被點選（條件一），而且是被選擇不是取消（條件二），再加上有按著 Shift 的話（條件三），Checkboxes 會開始跑回圈，先報出自己是誰，如果你是剛剛被點的這個 checkbox 或者你是 lastChecked 的話再喊聲 start</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(e.shiftKey &amp;&amp; <span class=\"keyword\">this</span>.checked)&#123;</span><br><span class=\"line\">  checkboxes.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">checkbox</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(self)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(checkbox === self || checkbox === lastChecked)&#123;</span><br><span class=\"line\">      inBetween = !inBetween</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">\"start!\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(inBetween)&#123;</span><br><span class=\"line\">      checkbox.checked = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://i.imgur.com/4OCrPTt.png\" alt=\"\"></p>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：<br>\nHTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"inbox\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>This is an inbox layout.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Check one item<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Hold down your Shift key<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Check a lower item<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Everything in between should also be set to checked<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Try to do it without any libraries<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Just regular JavaScript<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Good Luck!<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Don't forget to tweet your result!<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.inbox</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">400px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">10px</span> <span class=\"number\">10px</span> <span class=\"number\">0</span> <span class=\"built_in\">rgba</span>(0,0,0,0.1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#F1F1F1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">input</span><span class=\"selector-pseudo\">:checked</span> + <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#F9F9F9</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: line-through;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">input</span><span class=\"selector-attr\">[type=\"checkbox\"]</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: background <span class=\"number\">0.2s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>:<span class=\"string\">'helvetica neue'</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">200</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-left</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#D1E2FF</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span>  checkboxes= <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'.inbox input[type=\"checkbox\"]'</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> lastChecked</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleCheck</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// self 是被點的 checkbox</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> self = <span class=\"keyword\">this</span> </span><br><span class=\"line\">  <span class=\"keyword\">let</span> inBetween = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(e.shiftKey &amp;&amp; <span class=\"keyword\">this</span>.checked)&#123;</span><br><span class=\"line\">    checkboxes.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">checkbox</span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(checkbox === self || checkbox === lastChecked)&#123;</span><br><span class=\"line\">        inBetween = !inBetween</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(inBetween)&#123;</span><br><span class=\"line\">        checkbox.checked = <span class=\"literal\">true</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  lastChecked = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">checkboxes.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">checkbox</span>)</span>&#123;</span><br><span class=\"line\">  checkbox.addEventListener(<span class=\"string\">'click'</span>, handleCheck)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>"},{"title":"JS30 day12 Key Sequence Detection","catalog":true,"toc_nav_num":true,"date":"2019-11-12T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1569264167104-af07e7c1ebd9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Javascript"],"updateDate":"2019-11-12T14:26:24.000Z","_content":"\n# JS30 day12 - Key Sequence Detection\n\n## 作業內容\n\n今天的也是有點無聊，在這個網頁中只要打出某串密碼就會在畫面中跑出獨角獸＠＠\n![](https://i.imgur.com/YPkGbd5.png)\n\n\n## 學到什麼\n\n- JS\n  `splice` 的使用補充\n  splice 的參數如果是負值的話也可以，比方說我今天想要砍掉倒數第七個項目：\n  ```js\n  const arr = 'abcdefghijklmnopqrstuvwxyz'.split('');\n  arr.splice(-7, 1) // [\"t\"]\n  console.log(arr) // [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n  ```\n  話說 JS 的陣列本身找值卻不能使用負值，只能使用本身陣列長度去找\n  ```js\n  const arr = 'abcdefghijklmnopqrstuvwxyz'.split('');\n  console.log(arr[-6]) // undefined\n  console.log(arr[arr.length - 6]) // [\"u\"]\n  ```\n  然後要注意的是，第二個值如果是負的，splice 就取不到值，就不會對陣列改變\n  ```js\n  const arr = 'abcdefghijklmnopqrstuvwxyz'.split('');\n  arr.splice(-7, -1) // []\n  ```\n  在今天的例子中，寫成這樣：\n  ```js\n  pressed.splice(-passCode.length - 1, pressed.length - passCode.length)\n  ```\n  其實 `pressed.length - passCode.length` 這一段數字在陣列長度還不到密碼長度的時候是負數或者 0 ，這時候都不會刪減陣列，但是一但長度夠了之後，每次都會是 1，讓陣列的長度永遠保持密碼長度\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\nHTML:\n```html\n<script type=\"text/javascript\" src=\"https://www.cornify.com/js/cornify.js\"></script>\n```\n\nJS:\n```js\nconst arr = 'abcdefghijklmnopqrstuvwxyz'.split('');\n\nconst pressed = [];\nconst passCode = \"anthony\"\n\nwindow.addEventListener('keydown', (e) => {\n  pressed.push(e.key)\n  pressed.splice(-passCode.length - 1, pressed.length - passCode.length)\n  if(pressed.join('').includes(passCode)){\n    cornify_add()\n  }\n})\n```","source":"_posts/2019-11-12-JS30_day12.md","raw":"---\ntitle: \"JS30 day12 Key Sequence Detection\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-12 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1569264167104-af07e7c1ebd9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-12 22:26:24\n# top: 1\n\n---\n\n# JS30 day12 - Key Sequence Detection\n\n## 作業內容\n\n今天的也是有點無聊，在這個網頁中只要打出某串密碼就會在畫面中跑出獨角獸＠＠\n![](https://i.imgur.com/YPkGbd5.png)\n\n\n## 學到什麼\n\n- JS\n  `splice` 的使用補充\n  splice 的參數如果是負值的話也可以，比方說我今天想要砍掉倒數第七個項目：\n  ```js\n  const arr = 'abcdefghijklmnopqrstuvwxyz'.split('');\n  arr.splice(-7, 1) // [\"t\"]\n  console.log(arr) // [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n  ```\n  話說 JS 的陣列本身找值卻不能使用負值，只能使用本身陣列長度去找\n  ```js\n  const arr = 'abcdefghijklmnopqrstuvwxyz'.split('');\n  console.log(arr[-6]) // undefined\n  console.log(arr[arr.length - 6]) // [\"u\"]\n  ```\n  然後要注意的是，第二個值如果是負的，splice 就取不到值，就不會對陣列改變\n  ```js\n  const arr = 'abcdefghijklmnopqrstuvwxyz'.split('');\n  arr.splice(-7, -1) // []\n  ```\n  在今天的例子中，寫成這樣：\n  ```js\n  pressed.splice(-passCode.length - 1, pressed.length - passCode.length)\n  ```\n  其實 `pressed.length - passCode.length` 這一段數字在陣列長度還不到密碼長度的時候是負數或者 0 ，這時候都不會刪減陣列，但是一但長度夠了之後，每次都會是 1，讓陣列的長度永遠保持密碼長度\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\nHTML:\n```html\n<script type=\"text/javascript\" src=\"https://www.cornify.com/js/cornify.js\"></script>\n```\n\nJS:\n```js\nconst arr = 'abcdefghijklmnopqrstuvwxyz'.split('');\n\nconst pressed = [];\nconst passCode = \"anthony\"\n\nwindow.addEventListener('keydown', (e) => {\n  pressed.push(e.key)\n  pressed.splice(-passCode.length - 1, pressed.length - passCode.length)\n  if(pressed.join('').includes(passCode)){\n    cornify_add()\n  }\n})\n```","slug":"2019-11-12-JS30_day12","published":1,"updated":"2020-01-07T15:13:12.176Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0euz002g2ob1lthby1l2","content":"<h1 id=\"js30-day12-key-sequence-detection\">JS30 day12 - Key Sequence Detection</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天的也是有點無聊，在這個網頁中只要打出某串密碼就會在畫面中跑出獨角獸＠＠<br>\n<img src=\"https://i.imgur.com/YPkGbd5.png\" alt=\"\"></p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<ul>\n<li>\n<p>JS<br>\n<code>splice</code> 的使用補充<br>\nsplice 的參數如果是負值的話也可以，比方說我今天想要砍掉倒數第七個項目：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = <span class=\"string\">'abcdefghijklmnopqrstuvwxyz'</span>.split(<span class=\"string\">''</span>);</span><br><span class=\"line\">arr.splice(<span class=\"number\">-7</span>, <span class=\"number\">1</span>) <span class=\"comment\">// [\"t\"]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr) <span class=\"comment\">// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]</span></span><br></pre></td></tr></table></figure>\n<p>話說 JS 的陣列本身找值卻不能使用負值，只能使用本身陣列長度去找</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = <span class=\"string\">'abcdefghijklmnopqrstuvwxyz'</span>.split(<span class=\"string\">''</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr[<span class=\"number\">-6</span>]) <span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr[arr.length - <span class=\"number\">6</span>]) <span class=\"comment\">// [\"u\"]</span></span><br></pre></td></tr></table></figure>\n<p>然後要注意的是，第二個值如果是負的，splice 就取不到值，就不會對陣列改變</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = <span class=\"string\">'abcdefghijklmnopqrstuvwxyz'</span>.split(<span class=\"string\">''</span>);</span><br><span class=\"line\">arr.splice(<span class=\"number\">-7</span>, <span class=\"number\">-1</span>) <span class=\"comment\">// []</span></span><br></pre></td></tr></table></figure>\n<p>在今天的例子中，寫成這樣：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pressed.splice(-passCode.length - <span class=\"number\">1</span>, pressed.length - passCode.length)</span><br></pre></td></tr></table></figure>\n<p>其實 <code>pressed.length - passCode.length</code> 這一段數字在陣列長度還不到密碼長度的時候是負數或者 0 ，這時候都不會刪減陣列，但是一但長度夠了之後，每次都會是 1，讓陣列的長度永遠保持密碼長度</p>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：<br>\nHTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://www.cornify.com/js/cornify.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = <span class=\"string\">'abcdefghijklmnopqrstuvwxyz'</span>.split(<span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> pressed = [];</span><br><span class=\"line\"><span class=\"keyword\">const</span> passCode = <span class=\"string\">\"anthony\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'keydown'</span>, (e) =&gt; &#123;</span><br><span class=\"line\">  pressed.push(e.key)</span><br><span class=\"line\">  pressed.splice(-passCode.length - <span class=\"number\">1</span>, pressed.length - passCode.length)</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(pressed.join(<span class=\"string\">''</span>).includes(passCode))&#123;</span><br><span class=\"line\">    cornify_add()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day12 - Key Sequence Detection</h1>\n<h2>作業內容</h2>\n<p>今天的也是有點無聊，在這個網頁中只要打出某串密碼就會在畫面中跑出獨角獸＠＠<br>\n<img src=\"https://i.imgur.com/YPkGbd5.png\" alt=\"\"></p>\n<h2>學到什麼</h2>\n<ul>\n<li>\n<p>JS<br>\n<code>splice</code> 的使用補充<br>\nsplice 的參數如果是負值的話也可以，比方說我今天想要砍掉倒數第七個項目：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = <span class=\"string\">'abcdefghijklmnopqrstuvwxyz'</span>.split(<span class=\"string\">''</span>);</span><br><span class=\"line\">arr.splice(<span class=\"number\">-7</span>, <span class=\"number\">1</span>) <span class=\"comment\">// [\"t\"]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr) <span class=\"comment\">// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]</span></span><br></pre></td></tr></table></figure>\n<p>話說 JS 的陣列本身找值卻不能使用負值，只能使用本身陣列長度去找</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = <span class=\"string\">'abcdefghijklmnopqrstuvwxyz'</span>.split(<span class=\"string\">''</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr[<span class=\"number\">-6</span>]) <span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr[arr.length - <span class=\"number\">6</span>]) <span class=\"comment\">// [\"u\"]</span></span><br></pre></td></tr></table></figure>\n<p>然後要注意的是，第二個值如果是負的，splice 就取不到值，就不會對陣列改變</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = <span class=\"string\">'abcdefghijklmnopqrstuvwxyz'</span>.split(<span class=\"string\">''</span>);</span><br><span class=\"line\">arr.splice(<span class=\"number\">-7</span>, <span class=\"number\">-1</span>) <span class=\"comment\">// []</span></span><br></pre></td></tr></table></figure>\n<p>在今天的例子中，寫成這樣：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pressed.splice(-passCode.length - <span class=\"number\">1</span>, pressed.length - passCode.length)</span><br></pre></td></tr></table></figure>\n<p>其實 <code>pressed.length - passCode.length</code> 這一段數字在陣列長度還不到密碼長度的時候是負數或者 0 ，這時候都不會刪減陣列，但是一但長度夠了之後，每次都會是 1，讓陣列的長度永遠保持密碼長度</p>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：<br>\nHTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://www.cornify.com/js/cornify.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = <span class=\"string\">'abcdefghijklmnopqrstuvwxyz'</span>.split(<span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> pressed = [];</span><br><span class=\"line\"><span class=\"keyword\">const</span> passCode = <span class=\"string\">\"anthony\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'keydown'</span>, (e) =&gt; &#123;</span><br><span class=\"line\">  pressed.push(e.key)</span><br><span class=\"line\">  pressed.splice(-passCode.length - <span class=\"number\">1</span>, pressed.length - passCode.length)</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(pressed.join(<span class=\"string\">''</span>).includes(passCode))&#123;</span><br><span class=\"line\">    cornify_add()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>"},{"title":"JS30 day13 Slide In on Scroll","catalog":true,"toc_nav_num":true,"date":"2019-11-13T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1573648953114-ce9f86515a3d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1567&q=80","catagories":["Javascript"],"updateDate":"2019-11-13T14:26:24.000Z","_content":"\n# JS30 day13 - Slide In on Scroll\n\n## 作業內容\n\n本日作業是要做出文繞圖的頁面，但圖片會在看到的當下滑進畫面\n![](https://i.imgur.com/TLxQHob.jpg)\n可以參考這份 [CodePen](https://codepen.io/gbvjpsln/pen/oNNaBvd)\n\n## 學到什麼\n\n- JS\n  1. 在這次的教學中， debounce 這個 function 的作用是限制事件最多在某段時間內只能觸發一次 function\n  `window.addEventListener('scroll', debounce(checkSlide))`\n\n  2. `window.scrollY` 指的是當下螢幕最上面的 Y 值\n\n  3. `const isHalfShown = slideInAt > sliderImage.offsetTop` 這句表示螢幕的最下方，如果超過圖片的一半為 true ，也可以視為至少看到一半圖片的上半部\n  `const isNotScrollPast = window.scrollY < imageBottom` 這句代表螢幕的最上方，還沒超過圖片的最下方，也可以視為還沒往下滑到看不到圖片\n  所以最後綜合起來就是判斷，至少有往下滑到可以看到圖片的一半，而且還沒往下滑到看不到圖片的高度的話，就會把圖片加上 active 這個 class\n  ```js\n  const isHalfShown = slideInAt > sliderImage.offsetTop\n  const isNotScrollPast = window.scrollY < imageBottom\n  if(isHalfShown && isNotScrollPast){\n    sliderImage.classList.add(\"active\")\n  }else{\n    sliderImage.classList.remove(\"active\")\n  }\n  ```\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n  background: #ffc600;\n  font-family: 'helvetica neue';\n  font-size: 20px;\n  font-weight: 200;\n}\n\nbody {\n  margin: 0;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nh1 {\n  margin-top: 0;\n}\n\n.site-wrap {\n  max-width: 700px;\n  margin: 100px auto;\n  background: white;\n  padding: 40px;\n  text-align: justify;\n}\n\n.align-left {\n  float: left;\n  margin-right: 20px;\n}\n\n.align-right {\n  float: right;\n  margin-left: 20px;\n}\n\n.slide-in {\n  opacity: 0;\n  transition: all .5s;\n}\n\n.align-left.slide-in {\n  transform: translateX(-30%) scale(0.95);\n}\n\n.align-right.slide-in {\n  transform: translateX(30%) scale(0.95);\n}\n\n.slide-in.active {\n  opacity: 1;\n  transform: translateX(0%) scale(1);\n}\n```\nJS:\n```js\nfunction debounce(func, wait = 20, immediate = true) {\n  var timeout;\n  return function() {\n    var context = this, args = arguments;\n    var later = function() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n\nconst sliderImages = document.querySelectorAll('.slide-in')\n\nfunction checkSlide(e){\n  sliderImages.forEach(sliderImage => {\n    const slideInAt = (window.scrollY + window.innerHeight) - (sliderImage.height / 2) \n    const imageBottom = sliderImage.offsetTop + sliderImage.height\n    const isHalfShown = slideInAt > sliderImage.offsetTop\n    const isNotScrollPast = window.scrollY < imageBottom\n    if(isHalfShown && isNotScrollPast){\n      sliderImage.classList.add(\"active\")\n    }else{\n      sliderImage.classList.remove(\"active\")\n    }\n  })\n  \n}\nwindow.addEventListener('scroll', debounce(checkSlide))\n```","source":"_posts/2019-11-13-JS30_day13.md","raw":"---\ntitle: \"JS30 day13 Slide In on Scroll\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-13 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1573648953114-ce9f86515a3d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1567&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-13 22:26:24\n# top: 1\n\n---\n\n# JS30 day13 - Slide In on Scroll\n\n## 作業內容\n\n本日作業是要做出文繞圖的頁面，但圖片會在看到的當下滑進畫面\n![](https://i.imgur.com/TLxQHob.jpg)\n可以參考這份 [CodePen](https://codepen.io/gbvjpsln/pen/oNNaBvd)\n\n## 學到什麼\n\n- JS\n  1. 在這次的教學中， debounce 這個 function 的作用是限制事件最多在某段時間內只能觸發一次 function\n  `window.addEventListener('scroll', debounce(checkSlide))`\n\n  2. `window.scrollY` 指的是當下螢幕最上面的 Y 值\n\n  3. `const isHalfShown = slideInAt > sliderImage.offsetTop` 這句表示螢幕的最下方，如果超過圖片的一半為 true ，也可以視為至少看到一半圖片的上半部\n  `const isNotScrollPast = window.scrollY < imageBottom` 這句代表螢幕的最上方，還沒超過圖片的最下方，也可以視為還沒往下滑到看不到圖片\n  所以最後綜合起來就是判斷，至少有往下滑到可以看到圖片的一半，而且還沒往下滑到看不到圖片的高度的話，就會把圖片加上 active 這個 class\n  ```js\n  const isHalfShown = slideInAt > sliderImage.offsetTop\n  const isNotScrollPast = window.scrollY < imageBottom\n  if(isHalfShown && isNotScrollPast){\n    sliderImage.classList.add(\"active\")\n  }else{\n    sliderImage.classList.remove(\"active\")\n  }\n  ```\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n  background: #ffc600;\n  font-family: 'helvetica neue';\n  font-size: 20px;\n  font-weight: 200;\n}\n\nbody {\n  margin: 0;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nh1 {\n  margin-top: 0;\n}\n\n.site-wrap {\n  max-width: 700px;\n  margin: 100px auto;\n  background: white;\n  padding: 40px;\n  text-align: justify;\n}\n\n.align-left {\n  float: left;\n  margin-right: 20px;\n}\n\n.align-right {\n  float: right;\n  margin-left: 20px;\n}\n\n.slide-in {\n  opacity: 0;\n  transition: all .5s;\n}\n\n.align-left.slide-in {\n  transform: translateX(-30%) scale(0.95);\n}\n\n.align-right.slide-in {\n  transform: translateX(30%) scale(0.95);\n}\n\n.slide-in.active {\n  opacity: 1;\n  transform: translateX(0%) scale(1);\n}\n```\nJS:\n```js\nfunction debounce(func, wait = 20, immediate = true) {\n  var timeout;\n  return function() {\n    var context = this, args = arguments;\n    var later = function() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n\nconst sliderImages = document.querySelectorAll('.slide-in')\n\nfunction checkSlide(e){\n  sliderImages.forEach(sliderImage => {\n    const slideInAt = (window.scrollY + window.innerHeight) - (sliderImage.height / 2) \n    const imageBottom = sliderImage.offsetTop + sliderImage.height\n    const isHalfShown = slideInAt > sliderImage.offsetTop\n    const isNotScrollPast = window.scrollY < imageBottom\n    if(isHalfShown && isNotScrollPast){\n      sliderImage.classList.add(\"active\")\n    }else{\n      sliderImage.classList.remove(\"active\")\n    }\n  })\n  \n}\nwindow.addEventListener('scroll', debounce(checkSlide))\n```","slug":"2019-11-13-JS30_day13","published":1,"updated":"2019-11-22T07:06:36.028Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0ev0002i2ob1dflwt6p9","content":"<h1 id=\"js30-day13-slide-in-on-scroll\">JS30 day13 - Slide In on Scroll</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>本日作業是要做出文繞圖的頁面，但圖片會在看到的當下滑進畫面<br>\n<img src=\"https://i.imgur.com/TLxQHob.jpg\" alt=\"\"><br>\n可以參考這份 <a href=\"https://codepen.io/gbvjpsln/pen/oNNaBvd\" target=\"_blank\" rel=\"noopener\">CodePen</a></p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<ul>\n<li>JS\n<ol>\n<li>\n<p>在這次的教學中， debounce 這個 function 的作用是限制事件最多在某段時間內只能觸發一次 function<br>\n<code>window.addEventListener('scroll', debounce(checkSlide))</code></p>\n</li>\n<li>\n<p><code>window.scrollY</code> 指的是當下螢幕最上面的 Y 值</p>\n</li>\n<li>\n<p><code>const isHalfShown = slideInAt &gt; sliderImage.offsetTop</code> 這句表示螢幕的最下方，如果超過圖片的一半為 true ，也可以視為至少看到一半圖片的上半部<br>\n<code>const isNotScrollPast = window.scrollY &lt; imageBottom</code> 這句代表螢幕的最上方，還沒超過圖片的最下方，也可以視為還沒往下滑到看不到圖片<br>\n所以最後綜合起來就是判斷，至少有往下滑到可以看到圖片的一半，而且還沒往下滑到看不到圖片的高度的話，就會把圖片加上 active 這個 class</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> isHalfShown = slideInAt &gt; sliderImage.offsetTop</span><br><span class=\"line\"><span class=\"keyword\">const</span> isNotScrollPast = <span class=\"built_in\">window</span>.scrollY &lt; imageBottom</span><br><span class=\"line\"><span class=\"keyword\">if</span>(isHalfShown &amp;&amp; isNotScrollPast)&#123;</span><br><span class=\"line\">  sliderImage.classList.add(<span class=\"string\">\"active\"</span>)</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">  sliderImage.classList.remove(<span class=\"string\">\"active\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：<br>\nCSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'helvetica neue'</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">200</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.site-wrap</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">700px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">100px</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: justify;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.align-left</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">margin-right</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.align-right</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: right;</span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.slide-in</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all .<span class=\"number\">5s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.align-left</span><span class=\"selector-class\">.slide-in</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(-30%) <span class=\"built_in\">scale</span>(0.95);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.align-right</span><span class=\"selector-class\">.slide-in</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(30%) <span class=\"built_in\">scale</span>(0.95);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.slide-in</span><span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(0%) <span class=\"built_in\">scale</span>(1);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">debounce</span>(<span class=\"params\">func, wait = <span class=\"number\">20</span>, immediate = true</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> timeout;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> context = <span class=\"keyword\">this</span>, args = <span class=\"built_in\">arguments</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> later = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      timeout = <span class=\"literal\">null</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!immediate) func.apply(context, args);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> callNow = immediate &amp;&amp; !timeout;</span><br><span class=\"line\">    clearTimeout(timeout);</span><br><span class=\"line\">    timeout = setTimeout(later, wait);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (callNow) func.apply(context, args);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> sliderImages = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'.slide-in'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkSlide</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  sliderImages.forEach(<span class=\"function\"><span class=\"params\">sliderImage</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> slideInAt = (<span class=\"built_in\">window</span>.scrollY + <span class=\"built_in\">window</span>.innerHeight) - (sliderImage.height / <span class=\"number\">2</span>) </span><br><span class=\"line\">    <span class=\"keyword\">const</span> imageBottom = sliderImage.offsetTop + sliderImage.height</span><br><span class=\"line\">    <span class=\"keyword\">const</span> isHalfShown = slideInAt &gt; sliderImage.offsetTop</span><br><span class=\"line\">    <span class=\"keyword\">const</span> isNotScrollPast = <span class=\"built_in\">window</span>.scrollY &lt; imageBottom</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(isHalfShown &amp;&amp; isNotScrollPast)&#123;</span><br><span class=\"line\">      sliderImage.classList.add(<span class=\"string\">\"active\"</span>)</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      sliderImage.classList.remove(<span class=\"string\">\"active\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'scroll'</span>, debounce(checkSlide))</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day13 - Slide In on Scroll</h1>\n<h2>作業內容</h2>\n<p>本日作業是要做出文繞圖的頁面，但圖片會在看到的當下滑進畫面<br>\n<img src=\"https://i.imgur.com/TLxQHob.jpg\" alt=\"\"><br>\n可以參考這份 <a href=\"https://codepen.io/gbvjpsln/pen/oNNaBvd\" target=\"_blank\" rel=\"noopener\">CodePen</a></p>\n<h2>學到什麼</h2>\n<ul>\n<li>JS\n<ol>\n<li>\n<p>在這次的教學中， debounce 這個 function 的作用是限制事件最多在某段時間內只能觸發一次 function<br>\n<code>window.addEventListener('scroll', debounce(checkSlide))</code></p>\n</li>\n<li>\n<p><code>window.scrollY</code> 指的是當下螢幕最上面的 Y 值</p>\n</li>\n<li>\n<p><code>const isHalfShown = slideInAt &gt; sliderImage.offsetTop</code> 這句表示螢幕的最下方，如果超過圖片的一半為 true ，也可以視為至少看到一半圖片的上半部<br>\n<code>const isNotScrollPast = window.scrollY &lt; imageBottom</code> 這句代表螢幕的最上方，還沒超過圖片的最下方，也可以視為還沒往下滑到看不到圖片<br>\n所以最後綜合起來就是判斷，至少有往下滑到可以看到圖片的一半，而且還沒往下滑到看不到圖片的高度的話，就會把圖片加上 active 這個 class</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> isHalfShown = slideInAt &gt; sliderImage.offsetTop</span><br><span class=\"line\"><span class=\"keyword\">const</span> isNotScrollPast = <span class=\"built_in\">window</span>.scrollY &lt; imageBottom</span><br><span class=\"line\"><span class=\"keyword\">if</span>(isHalfShown &amp;&amp; isNotScrollPast)&#123;</span><br><span class=\"line\">  sliderImage.classList.add(<span class=\"string\">\"active\"</span>)</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">  sliderImage.classList.remove(<span class=\"string\">\"active\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：<br>\nCSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'helvetica neue'</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">200</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.site-wrap</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">700px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">100px</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: justify;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.align-left</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">margin-right</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.align-right</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: right;</span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.slide-in</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all .<span class=\"number\">5s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.align-left</span><span class=\"selector-class\">.slide-in</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(-30%) <span class=\"built_in\">scale</span>(0.95);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.align-right</span><span class=\"selector-class\">.slide-in</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(30%) <span class=\"built_in\">scale</span>(0.95);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.slide-in</span><span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(0%) <span class=\"built_in\">scale</span>(1);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">debounce</span>(<span class=\"params\">func, wait = <span class=\"number\">20</span>, immediate = true</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> timeout;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> context = <span class=\"keyword\">this</span>, args = <span class=\"built_in\">arguments</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> later = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      timeout = <span class=\"literal\">null</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!immediate) func.apply(context, args);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> callNow = immediate &amp;&amp; !timeout;</span><br><span class=\"line\">    clearTimeout(timeout);</span><br><span class=\"line\">    timeout = setTimeout(later, wait);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (callNow) func.apply(context, args);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> sliderImages = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'.slide-in'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkSlide</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  sliderImages.forEach(<span class=\"function\"><span class=\"params\">sliderImage</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> slideInAt = (<span class=\"built_in\">window</span>.scrollY + <span class=\"built_in\">window</span>.innerHeight) - (sliderImage.height / <span class=\"number\">2</span>) </span><br><span class=\"line\">    <span class=\"keyword\">const</span> imageBottom = sliderImage.offsetTop + sliderImage.height</span><br><span class=\"line\">    <span class=\"keyword\">const</span> isHalfShown = slideInAt &gt; sliderImage.offsetTop</span><br><span class=\"line\">    <span class=\"keyword\">const</span> isNotScrollPast = <span class=\"built_in\">window</span>.scrollY &lt; imageBottom</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(isHalfShown &amp;&amp; isNotScrollPast)&#123;</span><br><span class=\"line\">      sliderImage.classList.add(<span class=\"string\">\"active\"</span>)</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      sliderImage.classList.remove(<span class=\"string\">\"active\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'scroll'</span>, debounce(checkSlide))</span><br></pre></td></tr></table></figure>"},{"title":"JS30 day14 Reference vs Copy","catalog":true,"toc_nav_num":true,"date":"2019-11-14T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1573638504471-c08eb79a2a37?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1525&q=80","catagories":["Javascript"],"updateDate":"2019-11-14T14:26:24.000Z","_content":"# JS30 day14 - Reference vs Copy\n\n## 作業內容\n\n今天主要是在釐清 JS 裡面的基本型別 pass by value 跟 pass by reference 還有怎麼應對\n\n## 學到什麼\n\n- JS\n  1. JS 裡面的數字 / 布林值 / 字串是 pass by value，但陣列跟 Object 是 pass by reference\n  ```js\n  // 數字 字串 布林值\n  let age = 100;\n  let age2 = age;\n  console.log(age, age2); // 100 100\n  age = 200;\n  console.log(age, age2);  // 200 100\n\n  // 陣列\n  const players = ['Wes', 'Sarah', 'Ryan', 'Poppy'];\n  const team = players\n  console.log(players, team) // (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Poppy\"] (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Poppy\"]\n  team[3] = 'Lux'\n  console.log(players, team)  //(4) [\"Wes\", \"Sarah\", \"Ryan\", \"Lux\"] (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Lux\"]\n  ```\n  2. 陣列的 copy 方法\n  ```js\n  const team2 = players.slice()\n  const team3 = [].concat(players)\n  const team4 = [...players] //ES6\n  const team5 = Array.from(players)\n  ```\n  3. Object 是最麻煩的，如果只有一層你可以使用 `assign`：\n  ```js\n  const person = {\n    name: 'Wes Bos',\n    age: 80\n  };\n  const cap2 = Object.assign({}, person, { number: 99, age: 12 })\n  console.log(person, cap2)  //{name: \"Wes Bos\", age: 99} {name: \"Wes Bos\", age: 12, number: 99}\n  ```\n  問題是 assgin 是淺拷貝，兩層以上會出現一樣的問題 (WTF moment)\n  ```js\n  const wes ={\n    name: 'Wes',\n    age: 100,\n    social: {\n      twitter: 'wesbos',\n      facebook: 'developer'\n    }\n  }\n  const dev = Object.assign({}, wes)\n  dev.social.twitter = \"qoo\"\n  console.log(wes, dev)\n  ```\n  結果如下：\n  ![](https://i.imgur.com/uWBp3pG.png)\n  他這裡有介紹一種深拷貝的方法，但效能不怎麼好：\n  ```js\n  const dev2 = JSON.parse(JSON.stringify(wes));\n  ```\n  這篇文章寫得很詳細可以參考：\n  [Object深拷貝的方法](https://larry850806.github.io/2016/09/20/shallow-vs-deep-copy/)\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\n\nJS:\n```js\n// 對於字串 / 數字 / 布林值來說是 pass by value\nlet age = 100;\nlet age2 = age;\nconsole.log(age, age2); // 100 100\nage = 200;\nconsole.log(age, age2);  // 200 100\n\n// 對於陣列來說是 pass by reference\nconst players = ['Wes', 'Sarah', 'Ryan', 'Poppy'];\nconst team = players\nconsole.log(players, team) // (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Poppy\"] (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Poppy\"]\nteam[3] = 'Lux'\nconsole.log(players, team)  //(4) [\"Wes\", \"Sarah\", \"Ryan\", \"Lux\"] (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Lux\"]\n\n// 解決方法：複製一份\nconst team2 = players.slice()\nconst team3 = [].concat(players)\n\n// ES6 方法：打散\nconst team4 = [...players]\nconst team5 = Array.from(players)\n// The same thing goes for objects, let's say we have a person object\n\n// 對於 Object 來說也是 pass by reference\nconst person = {\n  name: 'Wes Bos',\n  age: 80\n};\nconst captain = person\nconsole.log(person, captain) // {name: \"Wes Bos\", age: 80} {name: \"Wes Bos\", age: 80}\ncaptain.age = 99\nconsole.log(person, captain) // {name: \"Wes Bos\", age: 99} {name: \"Wes Bos\", age: 99}\n\n// 所以也要做個複製出來\nconst cap2 = Object.assign({}, person, { number: 99, age: 12 })\nconsole.log(person, cap2)  //{name: \"Wes Bos\", age: 99} {name: \"Wes Bos\", age: 12, number: 99}\n// 然而這個 assign 方法是 shallow 的，如果有多層結構，還是會改到原本 Object\nconst wes ={\n  name: 'Wes',\n  age: 100,\n  social: {\n    twitter: 'wesbos',\n    facebook: 'developer'\n  }\n}\nconst dev = Object.assign({}, wes)\ndev.social.twitter = \"qoo\"\nconsole.log(wes, dev)\n//解決方法之一：\nconst dev2 = JSON.parse(JSON.stringify(wes));\n```","source":"_posts/2019-11-14-JS30_day14.md","raw":"---\ntitle: \"JS30 day14 Reference vs Copy\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-14 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1573638504471-c08eb79a2a37?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1525&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-14 22:26:24\n# top: 1\n\n---\n# JS30 day14 - Reference vs Copy\n\n## 作業內容\n\n今天主要是在釐清 JS 裡面的基本型別 pass by value 跟 pass by reference 還有怎麼應對\n\n## 學到什麼\n\n- JS\n  1. JS 裡面的數字 / 布林值 / 字串是 pass by value，但陣列跟 Object 是 pass by reference\n  ```js\n  // 數字 字串 布林值\n  let age = 100;\n  let age2 = age;\n  console.log(age, age2); // 100 100\n  age = 200;\n  console.log(age, age2);  // 200 100\n\n  // 陣列\n  const players = ['Wes', 'Sarah', 'Ryan', 'Poppy'];\n  const team = players\n  console.log(players, team) // (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Poppy\"] (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Poppy\"]\n  team[3] = 'Lux'\n  console.log(players, team)  //(4) [\"Wes\", \"Sarah\", \"Ryan\", \"Lux\"] (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Lux\"]\n  ```\n  2. 陣列的 copy 方法\n  ```js\n  const team2 = players.slice()\n  const team3 = [].concat(players)\n  const team4 = [...players] //ES6\n  const team5 = Array.from(players)\n  ```\n  3. Object 是最麻煩的，如果只有一層你可以使用 `assign`：\n  ```js\n  const person = {\n    name: 'Wes Bos',\n    age: 80\n  };\n  const cap2 = Object.assign({}, person, { number: 99, age: 12 })\n  console.log(person, cap2)  //{name: \"Wes Bos\", age: 99} {name: \"Wes Bos\", age: 12, number: 99}\n  ```\n  問題是 assgin 是淺拷貝，兩層以上會出現一樣的問題 (WTF moment)\n  ```js\n  const wes ={\n    name: 'Wes',\n    age: 100,\n    social: {\n      twitter: 'wesbos',\n      facebook: 'developer'\n    }\n  }\n  const dev = Object.assign({}, wes)\n  dev.social.twitter = \"qoo\"\n  console.log(wes, dev)\n  ```\n  結果如下：\n  ![](https://i.imgur.com/uWBp3pG.png)\n  他這裡有介紹一種深拷貝的方法，但效能不怎麼好：\n  ```js\n  const dev2 = JSON.parse(JSON.stringify(wes));\n  ```\n  這篇文章寫得很詳細可以參考：\n  [Object深拷貝的方法](https://larry850806.github.io/2016/09/20/shallow-vs-deep-copy/)\n\n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\n\nJS:\n```js\n// 對於字串 / 數字 / 布林值來說是 pass by value\nlet age = 100;\nlet age2 = age;\nconsole.log(age, age2); // 100 100\nage = 200;\nconsole.log(age, age2);  // 200 100\n\n// 對於陣列來說是 pass by reference\nconst players = ['Wes', 'Sarah', 'Ryan', 'Poppy'];\nconst team = players\nconsole.log(players, team) // (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Poppy\"] (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Poppy\"]\nteam[3] = 'Lux'\nconsole.log(players, team)  //(4) [\"Wes\", \"Sarah\", \"Ryan\", \"Lux\"] (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Lux\"]\n\n// 解決方法：複製一份\nconst team2 = players.slice()\nconst team3 = [].concat(players)\n\n// ES6 方法：打散\nconst team4 = [...players]\nconst team5 = Array.from(players)\n// The same thing goes for objects, let's say we have a person object\n\n// 對於 Object 來說也是 pass by reference\nconst person = {\n  name: 'Wes Bos',\n  age: 80\n};\nconst captain = person\nconsole.log(person, captain) // {name: \"Wes Bos\", age: 80} {name: \"Wes Bos\", age: 80}\ncaptain.age = 99\nconsole.log(person, captain) // {name: \"Wes Bos\", age: 99} {name: \"Wes Bos\", age: 99}\n\n// 所以也要做個複製出來\nconst cap2 = Object.assign({}, person, { number: 99, age: 12 })\nconsole.log(person, cap2)  //{name: \"Wes Bos\", age: 99} {name: \"Wes Bos\", age: 12, number: 99}\n// 然而這個 assign 方法是 shallow 的，如果有多層結構，還是會改到原本 Object\nconst wes ={\n  name: 'Wes',\n  age: 100,\n  social: {\n    twitter: 'wesbos',\n    facebook: 'developer'\n  }\n}\nconst dev = Object.assign({}, wes)\ndev.social.twitter = \"qoo\"\nconsole.log(wes, dev)\n//解決方法之一：\nconst dev2 = JSON.parse(JSON.stringify(wes));\n```","slug":"2019-11-14-JS30_day14","published":1,"updated":"2019-11-22T07:06:57.560Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0ev0002k2ob1dkp7ocb8","content":"<h1 id=\"js30-day14-reference-vs-copy\">JS30 day14 - Reference vs Copy</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天主要是在釐清 JS 裡面的基本型別 pass by value 跟 pass by reference 還有怎麼應對</p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li>JS 裡面的數字 / 布林值 / 字串是 pass by value，但陣列跟 Object 是 pass by reference</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 數字 字串 布林值</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> age = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> age2 = age;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(age, age2); <span class=\"comment\">// 100 100</span></span><br><span class=\"line\">age = <span class=\"number\">200</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(age, age2);  <span class=\"comment\">// 200 100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 陣列</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> players = [<span class=\"string\">'Wes'</span>, <span class=\"string\">'Sarah'</span>, <span class=\"string\">'Ryan'</span>, <span class=\"string\">'Poppy'</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> team = players</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(players, team) <span class=\"comment\">// (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Poppy\"] (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Poppy\"]</span></span><br><span class=\"line\">team[<span class=\"number\">3</span>] = <span class=\"string\">'Lux'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(players, team)  <span class=\"comment\">//(4) [\"Wes\", \"Sarah\", \"Ryan\", \"Lux\"] (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Lux\"]</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>陣列的 copy 方法</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> team2 = players.slice()</span><br><span class=\"line\"><span class=\"keyword\">const</span> team3 = [].concat(players)</span><br><span class=\"line\"><span class=\"keyword\">const</span> team4 = [...players] <span class=\"comment\">//ES6</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> team5 = <span class=\"built_in\">Array</span>.from(players)</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>Object 是最麻煩的，如果只有一層你可以使用 <code>assign</code>：</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> person = &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'Wes Bos'</span>,</span><br><span class=\"line\">  age: <span class=\"number\">80</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> cap2 = <span class=\"built_in\">Object</span>.assign(&#123;&#125;, person, &#123; <span class=\"attr\">number</span>: <span class=\"number\">99</span>, <span class=\"attr\">age</span>: <span class=\"number\">12</span> &#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person, cap2)  <span class=\"comment\">//&#123;name: \"Wes Bos\", age: 99&#125; &#123;name: \"Wes Bos\", age: 12, number: 99&#125;</span></span><br></pre></td></tr></table></figure>\n<p>問題是 assgin 是淺拷貝，兩層以上會出現一樣的問題 (WTF moment)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> wes =&#123;</span><br><span class=\"line\">  name: <span class=\"string\">'Wes'</span>,</span><br><span class=\"line\">  age: <span class=\"number\">100</span>,</span><br><span class=\"line\">  social: &#123;</span><br><span class=\"line\">    twitter: <span class=\"string\">'wesbos'</span>,</span><br><span class=\"line\">    facebook: <span class=\"string\">'developer'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> dev = <span class=\"built_in\">Object</span>.assign(&#123;&#125;, wes)</span><br><span class=\"line\">dev.social.twitter = <span class=\"string\">\"qoo\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(wes, dev)</span><br></pre></td></tr></table></figure>\n<p>結果如下：<br>\n<img src=\"https://i.imgur.com/uWBp3pG.png\" alt=\"\"><br>\n他這裡有介紹一種深拷貝的方法，但效能不怎麼好：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> dev2 = <span class=\"built_in\">JSON</span>.parse(<span class=\"built_in\">JSON</span>.stringify(wes));</span><br></pre></td></tr></table></figure>\n<p>這篇文章寫得很詳細可以參考：<br>\n<a href=\"https://larry850806.github.io/2016/09/20/shallow-vs-deep-copy/\" target=\"_blank\" rel=\"noopener\">Object深拷貝的方法</a></p>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：</p>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 對於字串 / 數字 / 布林值來說是 pass by value</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> age = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> age2 = age;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(age, age2); <span class=\"comment\">// 100 100</span></span><br><span class=\"line\">age = <span class=\"number\">200</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(age, age2);  <span class=\"comment\">// 200 100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 對於陣列來說是 pass by reference</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> players = [<span class=\"string\">'Wes'</span>, <span class=\"string\">'Sarah'</span>, <span class=\"string\">'Ryan'</span>, <span class=\"string\">'Poppy'</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> team = players</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(players, team) <span class=\"comment\">// (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Poppy\"] (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Poppy\"]</span></span><br><span class=\"line\">team[<span class=\"number\">3</span>] = <span class=\"string\">'Lux'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(players, team)  <span class=\"comment\">//(4) [\"Wes\", \"Sarah\", \"Ryan\", \"Lux\"] (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Lux\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 解決方法：複製一份</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> team2 = players.slice()</span><br><span class=\"line\"><span class=\"keyword\">const</span> team3 = [].concat(players)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ES6 方法：打散</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> team4 = [...players]</span><br><span class=\"line\"><span class=\"keyword\">const</span> team5 = <span class=\"built_in\">Array</span>.from(players)</span><br><span class=\"line\"><span class=\"comment\">// The same thing goes for objects, let's say we have a person object</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 對於 Object 來說也是 pass by reference</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> person = &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'Wes Bos'</span>,</span><br><span class=\"line\">  age: <span class=\"number\">80</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> captain = person</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person, captain) <span class=\"comment\">// &#123;name: \"Wes Bos\", age: 80&#125; &#123;name: \"Wes Bos\", age: 80&#125;</span></span><br><span class=\"line\">captain.age = <span class=\"number\">99</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person, captain) <span class=\"comment\">// &#123;name: \"Wes Bos\", age: 99&#125; &#123;name: \"Wes Bos\", age: 99&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 所以也要做個複製出來</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> cap2 = <span class=\"built_in\">Object</span>.assign(&#123;&#125;, person, &#123; <span class=\"attr\">number</span>: <span class=\"number\">99</span>, <span class=\"attr\">age</span>: <span class=\"number\">12</span> &#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person, cap2)  <span class=\"comment\">//&#123;name: \"Wes Bos\", age: 99&#125; &#123;name: \"Wes Bos\", age: 12, number: 99&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// 然而這個 assign 方法是 shallow 的，如果有多層結構，還是會改到原本 Object</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> wes =&#123;</span><br><span class=\"line\">  name: <span class=\"string\">'Wes'</span>,</span><br><span class=\"line\">  age: <span class=\"number\">100</span>,</span><br><span class=\"line\">  social: &#123;</span><br><span class=\"line\">    twitter: <span class=\"string\">'wesbos'</span>,</span><br><span class=\"line\">    facebook: <span class=\"string\">'developer'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> dev = <span class=\"built_in\">Object</span>.assign(&#123;&#125;, wes)</span><br><span class=\"line\">dev.social.twitter = <span class=\"string\">\"qoo\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(wes, dev)</span><br><span class=\"line\"><span class=\"comment\">//解決方法之一：</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> dev2 = <span class=\"built_in\">JSON</span>.parse(<span class=\"built_in\">JSON</span>.stringify(wes));</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day14 - Reference vs Copy</h1>\n<h2>作業內容</h2>\n<p>今天主要是在釐清 JS 裡面的基本型別 pass by value 跟 pass by reference 還有怎麼應對</p>\n<h2>學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li>JS 裡面的數字 / 布林值 / 字串是 pass by value，但陣列跟 Object 是 pass by reference</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 數字 字串 布林值</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> age = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> age2 = age;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(age, age2); <span class=\"comment\">// 100 100</span></span><br><span class=\"line\">age = <span class=\"number\">200</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(age, age2);  <span class=\"comment\">// 200 100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 陣列</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> players = [<span class=\"string\">'Wes'</span>, <span class=\"string\">'Sarah'</span>, <span class=\"string\">'Ryan'</span>, <span class=\"string\">'Poppy'</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> team = players</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(players, team) <span class=\"comment\">// (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Poppy\"] (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Poppy\"]</span></span><br><span class=\"line\">team[<span class=\"number\">3</span>] = <span class=\"string\">'Lux'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(players, team)  <span class=\"comment\">//(4) [\"Wes\", \"Sarah\", \"Ryan\", \"Lux\"] (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Lux\"]</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>陣列的 copy 方法</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> team2 = players.slice()</span><br><span class=\"line\"><span class=\"keyword\">const</span> team3 = [].concat(players)</span><br><span class=\"line\"><span class=\"keyword\">const</span> team4 = [...players] <span class=\"comment\">//ES6</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> team5 = <span class=\"built_in\">Array</span>.from(players)</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>Object 是最麻煩的，如果只有一層你可以使用 <code>assign</code>：</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> person = &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'Wes Bos'</span>,</span><br><span class=\"line\">  age: <span class=\"number\">80</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> cap2 = <span class=\"built_in\">Object</span>.assign(&#123;&#125;, person, &#123; <span class=\"attr\">number</span>: <span class=\"number\">99</span>, <span class=\"attr\">age</span>: <span class=\"number\">12</span> &#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person, cap2)  <span class=\"comment\">//&#123;name: \"Wes Bos\", age: 99&#125; &#123;name: \"Wes Bos\", age: 12, number: 99&#125;</span></span><br></pre></td></tr></table></figure>\n<p>問題是 assgin 是淺拷貝，兩層以上會出現一樣的問題 (WTF moment)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> wes =&#123;</span><br><span class=\"line\">  name: <span class=\"string\">'Wes'</span>,</span><br><span class=\"line\">  age: <span class=\"number\">100</span>,</span><br><span class=\"line\">  social: &#123;</span><br><span class=\"line\">    twitter: <span class=\"string\">'wesbos'</span>,</span><br><span class=\"line\">    facebook: <span class=\"string\">'developer'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> dev = <span class=\"built_in\">Object</span>.assign(&#123;&#125;, wes)</span><br><span class=\"line\">dev.social.twitter = <span class=\"string\">\"qoo\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(wes, dev)</span><br></pre></td></tr></table></figure>\n<p>結果如下：<br>\n<img src=\"https://i.imgur.com/uWBp3pG.png\" alt=\"\"><br>\n他這裡有介紹一種深拷貝的方法，但效能不怎麼好：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> dev2 = <span class=\"built_in\">JSON</span>.parse(<span class=\"built_in\">JSON</span>.stringify(wes));</span><br></pre></td></tr></table></figure>\n<p>這篇文章寫得很詳細可以參考：<br>\n<a href=\"https://larry850806.github.io/2016/09/20/shallow-vs-deep-copy/\" target=\"_blank\" rel=\"noopener\">Object深拷貝的方法</a></p>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：</p>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 對於字串 / 數字 / 布林值來說是 pass by value</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> age = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> age2 = age;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(age, age2); <span class=\"comment\">// 100 100</span></span><br><span class=\"line\">age = <span class=\"number\">200</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(age, age2);  <span class=\"comment\">// 200 100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 對於陣列來說是 pass by reference</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> players = [<span class=\"string\">'Wes'</span>, <span class=\"string\">'Sarah'</span>, <span class=\"string\">'Ryan'</span>, <span class=\"string\">'Poppy'</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> team = players</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(players, team) <span class=\"comment\">// (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Poppy\"] (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Poppy\"]</span></span><br><span class=\"line\">team[<span class=\"number\">3</span>] = <span class=\"string\">'Lux'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(players, team)  <span class=\"comment\">//(4) [\"Wes\", \"Sarah\", \"Ryan\", \"Lux\"] (4) [\"Wes\", \"Sarah\", \"Ryan\", \"Lux\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 解決方法：複製一份</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> team2 = players.slice()</span><br><span class=\"line\"><span class=\"keyword\">const</span> team3 = [].concat(players)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ES6 方法：打散</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> team4 = [...players]</span><br><span class=\"line\"><span class=\"keyword\">const</span> team5 = <span class=\"built_in\">Array</span>.from(players)</span><br><span class=\"line\"><span class=\"comment\">// The same thing goes for objects, let's say we have a person object</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 對於 Object 來說也是 pass by reference</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> person = &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'Wes Bos'</span>,</span><br><span class=\"line\">  age: <span class=\"number\">80</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> captain = person</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person, captain) <span class=\"comment\">// &#123;name: \"Wes Bos\", age: 80&#125; &#123;name: \"Wes Bos\", age: 80&#125;</span></span><br><span class=\"line\">captain.age = <span class=\"number\">99</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person, captain) <span class=\"comment\">// &#123;name: \"Wes Bos\", age: 99&#125; &#123;name: \"Wes Bos\", age: 99&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 所以也要做個複製出來</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> cap2 = <span class=\"built_in\">Object</span>.assign(&#123;&#125;, person, &#123; <span class=\"attr\">number</span>: <span class=\"number\">99</span>, <span class=\"attr\">age</span>: <span class=\"number\">12</span> &#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person, cap2)  <span class=\"comment\">//&#123;name: \"Wes Bos\", age: 99&#125; &#123;name: \"Wes Bos\", age: 12, number: 99&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// 然而這個 assign 方法是 shallow 的，如果有多層結構，還是會改到原本 Object</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> wes =&#123;</span><br><span class=\"line\">  name: <span class=\"string\">'Wes'</span>,</span><br><span class=\"line\">  age: <span class=\"number\">100</span>,</span><br><span class=\"line\">  social: &#123;</span><br><span class=\"line\">    twitter: <span class=\"string\">'wesbos'</span>,</span><br><span class=\"line\">    facebook: <span class=\"string\">'developer'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> dev = <span class=\"built_in\">Object</span>.assign(&#123;&#125;, wes)</span><br><span class=\"line\">dev.social.twitter = <span class=\"string\">\"qoo\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(wes, dev)</span><br><span class=\"line\"><span class=\"comment\">//解決方法之一：</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> dev2 = <span class=\"built_in\">JSON</span>.parse(<span class=\"built_in\">JSON</span>.stringify(wes));</span><br></pre></td></tr></table></figure>"},{"title":"JS30 day15 Local Storage and Event delegation","catalog":true,"toc_nav_num":true,"date":"2019-11-15T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1573761608477-786bcf22db23?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Javascript"],"updateDate":"2019-11-15T14:26:24.000Z","_content":"\n# JS30 day15 - JS30 day15 Local Storage and Event delegation\n\n## 作業內容\n\n今天的內容在講說如何使用 Local Storage 還有如果要指定監聽的對象是動態變化的應該怎麼處理，網頁的部分是透過一個菜單來實作\n\n## 學到什麼\n\n- JS\n  1. `preventDefault()`\n  參考資料：https://ithelp.ithome.com.tw/articles/10198999\n  2. 使用屬性來當作選擇器 `this.querySelector('[name=item]')`\n  ```html\n  <input type=\"text\" name=\"item\" placeholder=\"Item Name\" required=\"\">\n  ```\n  3. 使用 `this.reset();` 重置表單\n  4. 在標籤裡面動態插入 `<li>`標籤：\n  ```js\n  function populateList(plates = [], plateList){\n    plateList.innerHTML = plates.map((plate, i) => {\n      return `\n        <li>\n          <label for=\"\">${plate.text}</label>\n        </li>\n      `\n    }).join(\"\");\n  }\n  ```\n  5. 在 html 裡面，如果有一個 checkbox 的 input\n  以下三種狀況都還是會讓他呈現 checked:true 的狀態\n  ```html\n  <input type=\"checkbox\" checked>\n  <input type=\"checkbox\" checked=\"qq\">\n  <input type=\"checkbox\" checked=false>\n  ```\n  所以如果要根據屬性不同做出不同的 checked 狀態，只能加入 checked 或是空白字元\n  ```js\n  //寫在 js 裡面\n  <input type=\"checkbox\" data-index=${i} id=\"item${i}\" ${plate.done ? 'checked' : ''}>\n  ```\n  6. `localStorage` 是個可以把資料儲存在瀏覽器的空間，不過要記得只能存字串\n  ```js\n  localStorage.setItem(\"items\", items) //第一個參數是 key 的名字，第二個參數是要存的東西\n  localStorage.getItem()\n  localStorage.removeItem()\n  ```\n  而一開始的 items 就可以改為先試著從 localStorage 抓資料，沒有的話才給空陣列\n  ```js\n  const items = JSON.parse(localStorage.getItem('items')) || [];\n  ```\n  7. 我們要去捕捉每一個新長出來的 list 去監聽事件，對這種動態元素，最好的方式是去**用他的父元素監聽**，利用冒泡機制，所以父元素也會監聽到\n  ```js\n  function toggleDone(e){\n    console.log(e.target)\n  }\n  itemsList.addEventListener('click', toggleDone)\n  ```\n  但這樣會產生另一個問題，從 console log 可以看到每次都會出現兩個事件，所以必須再去濾除條件\n  ![](https://i.imgur.com/n3RrCBF.png)\n  ```js\n  function toggleDone(e){\n  if(!e.target.matches('input')) return;\n  }\n  ```\n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\n\nHTML:\n```html\n<div class=\"wrapper\">\n  <h2>LOCAL TAPAS</h2>\n  <p></p>\n  <ul class=\"plates\">\n    <li>Loading Tapas...</li>\n  </ul>\n  <form class=\"add-items\">\n    <input type=\"text\" name=\"item\" placeholder=\"Item Name\" required>\n    <input type=\"submit\" value=\"+ Add Item\">\n  </form>\n</div>\n```\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n  background: url('http://wes.io/hx9M/oh-la-la.jpg') center no-repeat;\n  background-size: cover;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  font-family: Futura,\"Trebuchet MS\",Arial,sans-serif;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit; \n}\n\nsvg {\n  fill:white;\n  background: rgba(0,0,0,0.1);\n  padding: 20px;\n  border-radius: 50%;\n  width: 200px;\n  margin-bottom: 50px;\n}\n\n.wrapper {\n  padding: 20px;\n  max-width: 350px;\n  background: rgba(255,255,255,0.95);\n  box-shadow: 0 0 0 10px rgba(0,0,0,0.1);\n}\n\nh2 {\n  text-align: center;\n  margin: 0;\n  font-weight: 200;\n}\n\n.plates {\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  list-style: none;\n}\n\n.plates li {\n  border-bottom: 1px solid rgba(0,0,0,0.2);\n  padding: 10px 0;\n  font-weight: 100;\n  display: flex;\n}\n\n.plates label {\n  flex: 1;\n  cursor: pointer;\n}\n\n.plates input {\n  display: none;\n}\n\n.plates input + label:before {\n  content: '⬜️';\n  margin-right: 10px;\n}\n\n.plates input:checked + label:before {\n  content: '🌮';\n}\n\n.add-items {\n  margin-top: 20px;\n}\n\n.add-items input {\n  padding: 10px;\n  outline: 0;\n  border: 1px solid rgba(0,0,0,0.1);\n}\n```\nJS:\n```js\nconst addItems = document.querySelector('.add-items');\nconst itemsList = document.querySelector('.plates');\nconst items = JSON.parse(localStorage.getItem('items')) || [];\n\nfunction addItem(e){\n  e.preventDefault();\n  const text = (this.querySelector('[name=item]')).value;\n  const item = {\n    text: text,\n    done: false\n  }\n  items.push(item);\n  populateList(items, itemsList)\n  localStorage.setItem(\"items\", JSON.stringify(items))\n  this.reset();\n}\n\nfunction populateList(plates = [], plateList){\n  plateList.innerHTML = plates.map((plate, i) => {\n    return `\n      <li>\n        <input type=\"checkbox\" data-index=${i} id=\"item${i}\" ${plate.done ? 'checked' : ''}>\n        <label for=\"item${i}\">${plate.text}</label>\n      </li>\n    `\n  }).join(\"\");\n}\n\nfunction toggleDone(e){\n  if(!e.target.matches('input')) return;\n  const el = e.target;\n  const index = el.dataset.index;\n  items[index].done = !items[index].done\n  localStorage.setItem(\"items\", JSON.stringify(items))\n}\n\naddItems.addEventListener('submit', addItem)\nitemsList.addEventListener('click', toggleDone)\npopulateList(items, itemsList) // 上面那一列是表單送出才會發生作用，這一列是重新整理或者重新進到這個網頁都會發生作用\n```","source":"_posts/2019-11-15-JS30_day15.md","raw":"---\ntitle: \"JS30 day15 Local Storage and Event delegation\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-15 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1573761608477-786bcf22db23?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-15 22:26:24\n# top: 1\n\n---\n\n# JS30 day15 - JS30 day15 Local Storage and Event delegation\n\n## 作業內容\n\n今天的內容在講說如何使用 Local Storage 還有如果要指定監聽的對象是動態變化的應該怎麼處理，網頁的部分是透過一個菜單來實作\n\n## 學到什麼\n\n- JS\n  1. `preventDefault()`\n  參考資料：https://ithelp.ithome.com.tw/articles/10198999\n  2. 使用屬性來當作選擇器 `this.querySelector('[name=item]')`\n  ```html\n  <input type=\"text\" name=\"item\" placeholder=\"Item Name\" required=\"\">\n  ```\n  3. 使用 `this.reset();` 重置表單\n  4. 在標籤裡面動態插入 `<li>`標籤：\n  ```js\n  function populateList(plates = [], plateList){\n    plateList.innerHTML = plates.map((plate, i) => {\n      return `\n        <li>\n          <label for=\"\">${plate.text}</label>\n        </li>\n      `\n    }).join(\"\");\n  }\n  ```\n  5. 在 html 裡面，如果有一個 checkbox 的 input\n  以下三種狀況都還是會讓他呈現 checked:true 的狀態\n  ```html\n  <input type=\"checkbox\" checked>\n  <input type=\"checkbox\" checked=\"qq\">\n  <input type=\"checkbox\" checked=false>\n  ```\n  所以如果要根據屬性不同做出不同的 checked 狀態，只能加入 checked 或是空白字元\n  ```js\n  //寫在 js 裡面\n  <input type=\"checkbox\" data-index=${i} id=\"item${i}\" ${plate.done ? 'checked' : ''}>\n  ```\n  6. `localStorage` 是個可以把資料儲存在瀏覽器的空間，不過要記得只能存字串\n  ```js\n  localStorage.setItem(\"items\", items) //第一個參數是 key 的名字，第二個參數是要存的東西\n  localStorage.getItem()\n  localStorage.removeItem()\n  ```\n  而一開始的 items 就可以改為先試著從 localStorage 抓資料，沒有的話才給空陣列\n  ```js\n  const items = JSON.parse(localStorage.getItem('items')) || [];\n  ```\n  7. 我們要去捕捉每一個新長出來的 list 去監聽事件，對這種動態元素，最好的方式是去**用他的父元素監聽**，利用冒泡機制，所以父元素也會監聽到\n  ```js\n  function toggleDone(e){\n    console.log(e.target)\n  }\n  itemsList.addEventListener('click', toggleDone)\n  ```\n  但這樣會產生另一個問題，從 console log 可以看到每次都會出現兩個事件，所以必須再去濾除條件\n  ![](https://i.imgur.com/n3RrCBF.png)\n  ```js\n  function toggleDone(e){\n  if(!e.target.matches('input')) return;\n  }\n  ```\n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\n\nHTML:\n```html\n<div class=\"wrapper\">\n  <h2>LOCAL TAPAS</h2>\n  <p></p>\n  <ul class=\"plates\">\n    <li>Loading Tapas...</li>\n  </ul>\n  <form class=\"add-items\">\n    <input type=\"text\" name=\"item\" placeholder=\"Item Name\" required>\n    <input type=\"submit\" value=\"+ Add Item\">\n  </form>\n</div>\n```\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n  background: url('http://wes.io/hx9M/oh-la-la.jpg') center no-repeat;\n  background-size: cover;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  font-family: Futura,\"Trebuchet MS\",Arial,sans-serif;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit; \n}\n\nsvg {\n  fill:white;\n  background: rgba(0,0,0,0.1);\n  padding: 20px;\n  border-radius: 50%;\n  width: 200px;\n  margin-bottom: 50px;\n}\n\n.wrapper {\n  padding: 20px;\n  max-width: 350px;\n  background: rgba(255,255,255,0.95);\n  box-shadow: 0 0 0 10px rgba(0,0,0,0.1);\n}\n\nh2 {\n  text-align: center;\n  margin: 0;\n  font-weight: 200;\n}\n\n.plates {\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  list-style: none;\n}\n\n.plates li {\n  border-bottom: 1px solid rgba(0,0,0,0.2);\n  padding: 10px 0;\n  font-weight: 100;\n  display: flex;\n}\n\n.plates label {\n  flex: 1;\n  cursor: pointer;\n}\n\n.plates input {\n  display: none;\n}\n\n.plates input + label:before {\n  content: '⬜️';\n  margin-right: 10px;\n}\n\n.plates input:checked + label:before {\n  content: '🌮';\n}\n\n.add-items {\n  margin-top: 20px;\n}\n\n.add-items input {\n  padding: 10px;\n  outline: 0;\n  border: 1px solid rgba(0,0,0,0.1);\n}\n```\nJS:\n```js\nconst addItems = document.querySelector('.add-items');\nconst itemsList = document.querySelector('.plates');\nconst items = JSON.parse(localStorage.getItem('items')) || [];\n\nfunction addItem(e){\n  e.preventDefault();\n  const text = (this.querySelector('[name=item]')).value;\n  const item = {\n    text: text,\n    done: false\n  }\n  items.push(item);\n  populateList(items, itemsList)\n  localStorage.setItem(\"items\", JSON.stringify(items))\n  this.reset();\n}\n\nfunction populateList(plates = [], plateList){\n  plateList.innerHTML = plates.map((plate, i) => {\n    return `\n      <li>\n        <input type=\"checkbox\" data-index=${i} id=\"item${i}\" ${plate.done ? 'checked' : ''}>\n        <label for=\"item${i}\">${plate.text}</label>\n      </li>\n    `\n  }).join(\"\");\n}\n\nfunction toggleDone(e){\n  if(!e.target.matches('input')) return;\n  const el = e.target;\n  const index = el.dataset.index;\n  items[index].done = !items[index].done\n  localStorage.setItem(\"items\", JSON.stringify(items))\n}\n\naddItems.addEventListener('submit', addItem)\nitemsList.addEventListener('click', toggleDone)\npopulateList(items, itemsList) // 上面那一列是表單送出才會發生作用，這一列是重新整理或者重新進到這個網頁都會發生作用\n```","slug":"2019-11-15-JS30_day15","published":1,"updated":"2019-11-22T07:07:22.241Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0ev1002m2ob1vi4b900g","content":"<h1 id=\"js30-day15-js30-day15-local-storage-and-event-delegation\">JS30 day15 - JS30 day15 Local Storage and Event delegation</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天的內容在講說如何使用 Local Storage 還有如果要指定監聽的對象是動態變化的應該怎麼處理，網頁的部分是透過一個菜單來實作</p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li><code>preventDefault()</code><br>\n參考資料：<a href=\"https://ithelp.ithome.com.tw/articles/10198999\" target=\"_blank\" rel=\"noopener\">https://ithelp.ithome.com.tw/articles/10198999</a></li>\n<li>使用屬性來當作選擇器 <code>this.querySelector('[name=item]')</code></li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"item\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"Item Name\"</span> <span class=\"attr\">required</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>使用 <code>this.reset();</code> 重置表單</li>\n<li>在標籤裡面動態插入 <code>&lt;li&gt;</code>標籤：</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">populateList</span>(<span class=\"params\">plates = [], plateList</span>)</span>&#123;</span><br><span class=\"line\">  plateList.innerHTML = plates.map(<span class=\"function\">(<span class=\"params\">plate, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">      &lt;li&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;label for=\"\"&gt;<span class=\"subst\">$&#123;plate.text&#125;</span>&lt;/label&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">    `</span></span><br><span class=\"line\">  &#125;).join(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>在 html 裡面，如果有一個 checkbox 的 input<br>\n以下三種狀況都還是會讓他呈現 checked:true 的狀態</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">checked</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">checked</span>=<span class=\"string\">\"qq\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">checked</span>=<span class=\"string\">false</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>所以如果要根據屬性不同做出不同的 checked 狀態，只能加入 checked 或是空白字元</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//寫在 js 裡面</span></span><br><span class=\"line\">&lt;input type=<span class=\"string\">\"checkbox\"</span> data-index=$&#123;i&#125; id=<span class=\"string\">\"item$&#123;i&#125;\"</span> $&#123;plate.done ? <span class=\"string\">'checked'</span> : <span class=\"string\">''</span>&#125;&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li><code>localStorage</code> 是個可以把資料儲存在瀏覽器的空間，不過要記得只能存字串</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">localStorage.setItem(<span class=\"string\">\"items\"</span>, items) <span class=\"comment\">//第一個參數是 key 的名字，第二個參數是要存的東西</span></span><br><span class=\"line\">localStorage.getItem()</span><br><span class=\"line\">localStorage.removeItem()</span><br></pre></td></tr></table></figure>\n<p>而一開始的 items 就可以改為先試著從 localStorage 抓資料，沒有的話才給空陣列</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> items = <span class=\"built_in\">JSON</span>.parse(localStorage.getItem(<span class=\"string\">'items'</span>)) || [];</span><br></pre></td></tr></table></figure>\n<ol start=\"7\">\n<li>我們要去捕捉每一個新長出來的 list 去監聽事件，對這種動態元素，最好的方式是去<strong>用他的父元素監聽</strong>，利用冒泡機制，所以父元素也會監聽到</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toggleDone</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(e.target)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">itemsList.addEventListener(<span class=\"string\">'click'</span>, toggleDone)</span><br></pre></td></tr></table></figure>\n<p>但這樣會產生另一個問題，從 console log 可以看到每次都會出現兩個事件，所以必須再去濾除條件<br>\n<img src=\"https://i.imgur.com/n3RrCBF.png\" alt=\"\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toggleDone</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(!e.target.matches(<span class=\"string\">'input'</span>)) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：</p>\n<p>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrapper\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>LOCAL TAPAS<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"plates\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Loading Tapas...<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">class</span>=<span class=\"string\">\"add-items\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"item\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"Item Name\"</span> <span class=\"attr\">required</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"+ Add Item\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(<span class=\"string\">'http://wes.io/hx9M/oh-la-la.jpg'</span>) center no-repeat;</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: cover;</span><br><span class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: Futura,<span class=\"string\">\"Trebuchet MS\"</span>,Arial,sans-serif;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">svg</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">fill</span>:white;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(0,0,0,0.1);</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.wrapper</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">350px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(255,255,255,0.95);</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"built_in\">rgba</span>(0,0,0,0.1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">h2</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">200</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.plates</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.plates</span> <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"built_in\">rgba</span>(0,0,0,0.2);</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">100</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.plates</span> <span class=\"selector-tag\">label</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.plates</span> <span class=\"selector-tag\">input</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.plates</span> <span class=\"selector-tag\">input</span> + <span class=\"selector-tag\">label</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">'⬜️'</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-right</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.plates</span> <span class=\"selector-tag\">input</span><span class=\"selector-pseudo\">:checked</span> + <span class=\"selector-tag\">label</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">'🌮'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.add-items</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.add-items</span> <span class=\"selector-tag\">input</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">outline</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"built_in\">rgba</span>(0,0,0,0.1);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> addItems = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.add-items'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> itemsList = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.plates'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> items = <span class=\"built_in\">JSON</span>.parse(localStorage.getItem(<span class=\"string\">'items'</span>)) || [];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addItem</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> text = (<span class=\"keyword\">this</span>.querySelector(<span class=\"string\">'[name=item]'</span>)).value;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> item = &#123;</span><br><span class=\"line\">    text: text,</span><br><span class=\"line\">    done: <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  items.push(item);</span><br><span class=\"line\">  populateList(items, itemsList)</span><br><span class=\"line\">  localStorage.setItem(<span class=\"string\">\"items\"</span>, <span class=\"built_in\">JSON</span>.stringify(items))</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.reset();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">populateList</span>(<span class=\"params\">plates = [], plateList</span>)</span>&#123;</span><br><span class=\"line\">  plateList.innerHTML = plates.map(<span class=\"function\">(<span class=\"params\">plate, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">      &lt;li&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;input type=\"checkbox\" data-index=<span class=\"subst\">$&#123;i&#125;</span> id=\"item<span class=\"subst\">$&#123;i&#125;</span>\" <span class=\"subst\">$&#123;plate.done ? <span class=\"string\">'checked'</span> : <span class=\"string\">''</span>&#125;</span>&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;label for=\"item<span class=\"subst\">$&#123;i&#125;</span>\"&gt;<span class=\"subst\">$&#123;plate.text&#125;</span>&lt;/label&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">    `</span></span><br><span class=\"line\">  &#125;).join(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toggleDone</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!e.target.matches(<span class=\"string\">'input'</span>)) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> el = e.target;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> index = el.dataset.index;</span><br><span class=\"line\">  items[index].done = !items[index].done</span><br><span class=\"line\">  localStorage.setItem(<span class=\"string\">\"items\"</span>, <span class=\"built_in\">JSON</span>.stringify(items))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">addItems.addEventListener(<span class=\"string\">'submit'</span>, addItem)</span><br><span class=\"line\">itemsList.addEventListener(<span class=\"string\">'click'</span>, toggleDone)</span><br><span class=\"line\">populateList(items, itemsList) <span class=\"comment\">// 上面那一列是表單送出才會發生作用，這一列是重新整理或者重新進到這個網頁都會發生作用</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day15 - JS30 day15 Local Storage and Event delegation</h1>\n<h2>作業內容</h2>\n<p>今天的內容在講說如何使用 Local Storage 還有如果要指定監聽的對象是動態變化的應該怎麼處理，網頁的部分是透過一個菜單來實作</p>\n<h2>學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li><code>preventDefault()</code><br>\n參考資料：<a href=\"https://ithelp.ithome.com.tw/articles/10198999\" target=\"_blank\" rel=\"noopener\">https://ithelp.ithome.com.tw/articles/10198999</a></li>\n<li>使用屬性來當作選擇器 <code>this.querySelector('[name=item]')</code></li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"item\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"Item Name\"</span> <span class=\"attr\">required</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>使用 <code>this.reset();</code> 重置表單</li>\n<li>在標籤裡面動態插入 <code>&lt;li&gt;</code>標籤：</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">populateList</span>(<span class=\"params\">plates = [], plateList</span>)</span>&#123;</span><br><span class=\"line\">  plateList.innerHTML = plates.map(<span class=\"function\">(<span class=\"params\">plate, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">      &lt;li&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;label for=\"\"&gt;<span class=\"subst\">$&#123;plate.text&#125;</span>&lt;/label&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">    `</span></span><br><span class=\"line\">  &#125;).join(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>在 html 裡面，如果有一個 checkbox 的 input<br>\n以下三種狀況都還是會讓他呈現 checked:true 的狀態</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">checked</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">checked</span>=<span class=\"string\">\"qq\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">checked</span>=<span class=\"string\">false</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>所以如果要根據屬性不同做出不同的 checked 狀態，只能加入 checked 或是空白字元</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//寫在 js 裡面</span></span><br><span class=\"line\">&lt;input type=<span class=\"string\">\"checkbox\"</span> data-index=$&#123;i&#125; id=<span class=\"string\">\"item$&#123;i&#125;\"</span> $&#123;plate.done ? <span class=\"string\">'checked'</span> : <span class=\"string\">''</span>&#125;&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li><code>localStorage</code> 是個可以把資料儲存在瀏覽器的空間，不過要記得只能存字串</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">localStorage.setItem(<span class=\"string\">\"items\"</span>, items) <span class=\"comment\">//第一個參數是 key 的名字，第二個參數是要存的東西</span></span><br><span class=\"line\">localStorage.getItem()</span><br><span class=\"line\">localStorage.removeItem()</span><br></pre></td></tr></table></figure>\n<p>而一開始的 items 就可以改為先試著從 localStorage 抓資料，沒有的話才給空陣列</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> items = <span class=\"built_in\">JSON</span>.parse(localStorage.getItem(<span class=\"string\">'items'</span>)) || [];</span><br></pre></td></tr></table></figure>\n<ol start=\"7\">\n<li>我們要去捕捉每一個新長出來的 list 去監聽事件，對這種動態元素，最好的方式是去<strong>用他的父元素監聽</strong>，利用冒泡機制，所以父元素也會監聽到</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toggleDone</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(e.target)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">itemsList.addEventListener(<span class=\"string\">'click'</span>, toggleDone)</span><br></pre></td></tr></table></figure>\n<p>但這樣會產生另一個問題，從 console log 可以看到每次都會出現兩個事件，所以必須再去濾除條件<br>\n<img src=\"https://i.imgur.com/n3RrCBF.png\" alt=\"\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toggleDone</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(!e.target.matches(<span class=\"string\">'input'</span>)) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：</p>\n<p>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrapper\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>LOCAL TAPAS<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"plates\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Loading Tapas...<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">class</span>=<span class=\"string\">\"add-items\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"item\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"Item Name\"</span> <span class=\"attr\">required</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"+ Add Item\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(<span class=\"string\">'http://wes.io/hx9M/oh-la-la.jpg'</span>) center no-repeat;</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: cover;</span><br><span class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: Futura,<span class=\"string\">\"Trebuchet MS\"</span>,Arial,sans-serif;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">svg</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">fill</span>:white;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(0,0,0,0.1);</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.wrapper</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">350px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(255,255,255,0.95);</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"built_in\">rgba</span>(0,0,0,0.1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">h2</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">200</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.plates</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.plates</span> <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"built_in\">rgba</span>(0,0,0,0.2);</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">100</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.plates</span> <span class=\"selector-tag\">label</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.plates</span> <span class=\"selector-tag\">input</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.plates</span> <span class=\"selector-tag\">input</span> + <span class=\"selector-tag\">label</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">'⬜️'</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-right</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.plates</span> <span class=\"selector-tag\">input</span><span class=\"selector-pseudo\">:checked</span> + <span class=\"selector-tag\">label</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">'🌮'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.add-items</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.add-items</span> <span class=\"selector-tag\">input</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">outline</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"built_in\">rgba</span>(0,0,0,0.1);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> addItems = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.add-items'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> itemsList = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.plates'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> items = <span class=\"built_in\">JSON</span>.parse(localStorage.getItem(<span class=\"string\">'items'</span>)) || [];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addItem</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> text = (<span class=\"keyword\">this</span>.querySelector(<span class=\"string\">'[name=item]'</span>)).value;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> item = &#123;</span><br><span class=\"line\">    text: text,</span><br><span class=\"line\">    done: <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  items.push(item);</span><br><span class=\"line\">  populateList(items, itemsList)</span><br><span class=\"line\">  localStorage.setItem(<span class=\"string\">\"items\"</span>, <span class=\"built_in\">JSON</span>.stringify(items))</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.reset();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">populateList</span>(<span class=\"params\">plates = [], plateList</span>)</span>&#123;</span><br><span class=\"line\">  plateList.innerHTML = plates.map(<span class=\"function\">(<span class=\"params\">plate, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">      &lt;li&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;input type=\"checkbox\" data-index=<span class=\"subst\">$&#123;i&#125;</span> id=\"item<span class=\"subst\">$&#123;i&#125;</span>\" <span class=\"subst\">$&#123;plate.done ? <span class=\"string\">'checked'</span> : <span class=\"string\">''</span>&#125;</span>&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;label for=\"item<span class=\"subst\">$&#123;i&#125;</span>\"&gt;<span class=\"subst\">$&#123;plate.text&#125;</span>&lt;/label&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">    `</span></span><br><span class=\"line\">  &#125;).join(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toggleDone</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!e.target.matches(<span class=\"string\">'input'</span>)) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> el = e.target;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> index = el.dataset.index;</span><br><span class=\"line\">  items[index].done = !items[index].done</span><br><span class=\"line\">  localStorage.setItem(<span class=\"string\">\"items\"</span>, <span class=\"built_in\">JSON</span>.stringify(items))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">addItems.addEventListener(<span class=\"string\">'submit'</span>, addItem)</span><br><span class=\"line\">itemsList.addEventListener(<span class=\"string\">'click'</span>, toggleDone)</span><br><span class=\"line\">populateList(items, itemsList) <span class=\"comment\">// 上面那一列是表單送出才會發生作用，這一列是重新整理或者重新進到這個網頁都會發生作用</span></span><br></pre></td></tr></table></figure>"},{"title":"JS30 day16 Text Shadow Mouse Move Effect","catalog":true,"toc_nav_num":true,"date":"2019-11-16T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1573770273825-ee235e3a9fb1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1526&q=80","catagories":["Javascript"],"updateDate":"2019-11-16T14:26:24.000Z","_content":"# JS30 day16 - JS30 day16 Text Shadow Mouse Move Effect\n\n## 作業內容\n\n今天教學的內容是根據滑鼠的移動來讓文字的陰影跟著移動，在這裡面我目前認為還有很難發現的雷 (this 跟 e.target 不同)，整體而言我覺得效果滿酷的！\n可以看看這個[CodePen](https://codepen.io/gbvjpsln/pen/eYYQjKW)\n\n## 學到什麼\n\n- JS\n  1. ES6 語法糖：\n  ```js\n  const width = hero.offsetWidth\n  const height = hero.offsetHeight\n  // ES6 語法上面兩行可以變成下面這樣\n  const { offsetWidth: width, offsetHeight: height } = hero\n  ```\n\n  2. 一開始的 JS 長這樣：\n  \n  ```js\n  const hero = document.querySelector('.hero')\n  const text = document.querySelector('h1')\n\n  function shadow(e){\n    const { offsetWidth: width, offsetHeight: height } = hero\n    let { offsetX: x, offsetY: y } = e\n    console.log(x,y)\n  }\n\n  hero.addEventListener('mousemove', shadow)\n  ```\n  奇怪的是這時候如果把滑鼠移到 h1 左上方，座標會接近 0\n  ![](https://i.imgur.com/ugWGwtR.png)\n  **這是因為這時候我們的 event taget 是 h1 而不是 hero!**\n  ```js\n  console.log(this, e.target)\n  function shadow(e){\n    console.log(this, e.target) // 如果在 h1 上面的話，this 仍然是 hero，但 e.target 是 h1\n  }\n  ```\n  因此方法要改寫成  \n  ```js\n  function shadow(e){\n    const { offsetWidth: width, offsetHeight: height } = hero\n    let { offsetX: x, offsetY: y } = e\n    if(this !== e.target){\n      x = x + e.target.offsetLeft\n      y = y + e.target.offsetTop\n    }\n  }\n  ```\n  這樣寫的話，如果 target 變成 h1 就會加上 h1 左上角的 x 跟 y 座標，達到統一效果\n  \n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\n\nHTML:\n```html\n<div class=\"hero\">\n  <h1 contenteditable>🔥WOAH!</h1>\n</div>\n```\nCSS:\n```css\nhtml {\n  color: black;\n  font-family: sans-serif;\n}\n\nbody {\n  margin: 0;\n}\n\n.hero {\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: black;\n}\n\nh1 {\n  text-shadow: 10px 10px 0 rgba(0,0,0,1);\n  font-size: 100px;\n}\n```\nJS:\n```js\nconst hero = document.querySelector('.hero')\nconst text = document.querySelector('h1')\nconst walk = 100; //100px\n\nfunction shadow(e){\n  const { offsetWidth: width, offsetHeight: height } = hero\n  let { offsetX: x, offsetY: y } = e\n\n  if(this !== e.target){\n    x = x + e.target.offsetLeft\n    y = y + e.target.offsetTop\n  }\n  \n  const xWalk = Math.round((x / width * walk) - (walk / 2))\n  const yWalk = Math.round((y / height * walk) - (walk / 2))\n  \n  text.style.textShadow = `${xWalk}px ${yWalk}px 0 red`\n}\n\nhero.addEventListener('mousemove', shadow)\n```","source":"_posts/2019-11-16-JS30_day16.md","raw":"---\ntitle: \"JS30 day16 Text Shadow Mouse Move Effect\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-16 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1573770273825-ee235e3a9fb1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1526&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-16 22:26:24\n# top: 1\n\n---\n# JS30 day16 - JS30 day16 Text Shadow Mouse Move Effect\n\n## 作業內容\n\n今天教學的內容是根據滑鼠的移動來讓文字的陰影跟著移動，在這裡面我目前認為還有很難發現的雷 (this 跟 e.target 不同)，整體而言我覺得效果滿酷的！\n可以看看這個[CodePen](https://codepen.io/gbvjpsln/pen/eYYQjKW)\n\n## 學到什麼\n\n- JS\n  1. ES6 語法糖：\n  ```js\n  const width = hero.offsetWidth\n  const height = hero.offsetHeight\n  // ES6 語法上面兩行可以變成下面這樣\n  const { offsetWidth: width, offsetHeight: height } = hero\n  ```\n\n  2. 一開始的 JS 長這樣：\n  \n  ```js\n  const hero = document.querySelector('.hero')\n  const text = document.querySelector('h1')\n\n  function shadow(e){\n    const { offsetWidth: width, offsetHeight: height } = hero\n    let { offsetX: x, offsetY: y } = e\n    console.log(x,y)\n  }\n\n  hero.addEventListener('mousemove', shadow)\n  ```\n  奇怪的是這時候如果把滑鼠移到 h1 左上方，座標會接近 0\n  ![](https://i.imgur.com/ugWGwtR.png)\n  **這是因為這時候我們的 event taget 是 h1 而不是 hero!**\n  ```js\n  console.log(this, e.target)\n  function shadow(e){\n    console.log(this, e.target) // 如果在 h1 上面的話，this 仍然是 hero，但 e.target 是 h1\n  }\n  ```\n  因此方法要改寫成  \n  ```js\n  function shadow(e){\n    const { offsetWidth: width, offsetHeight: height } = hero\n    let { offsetX: x, offsetY: y } = e\n    if(this !== e.target){\n      x = x + e.target.offsetLeft\n      y = y + e.target.offsetTop\n    }\n  }\n  ```\n  這樣寫的話，如果 target 變成 h1 就會加上 h1 左上角的 x 跟 y 座標，達到統一效果\n  \n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\n\nHTML:\n```html\n<div class=\"hero\">\n  <h1 contenteditable>🔥WOAH!</h1>\n</div>\n```\nCSS:\n```css\nhtml {\n  color: black;\n  font-family: sans-serif;\n}\n\nbody {\n  margin: 0;\n}\n\n.hero {\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: black;\n}\n\nh1 {\n  text-shadow: 10px 10px 0 rgba(0,0,0,1);\n  font-size: 100px;\n}\n```\nJS:\n```js\nconst hero = document.querySelector('.hero')\nconst text = document.querySelector('h1')\nconst walk = 100; //100px\n\nfunction shadow(e){\n  const { offsetWidth: width, offsetHeight: height } = hero\n  let { offsetX: x, offsetY: y } = e\n\n  if(this !== e.target){\n    x = x + e.target.offsetLeft\n    y = y + e.target.offsetTop\n  }\n  \n  const xWalk = Math.round((x / width * walk) - (walk / 2))\n  const yWalk = Math.round((y / height * walk) - (walk / 2))\n  \n  text.style.textShadow = `${xWalk}px ${yWalk}px 0 red`\n}\n\nhero.addEventListener('mousemove', shadow)\n```","slug":"2019-11-16-JS30_day16","published":1,"updated":"2019-11-22T07:07:50.335Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0ev2002o2ob1nzefz62u","content":"<h1 id=\"js30-day16-js30-day16-text-shadow-mouse-move-effect\">JS30 day16 - JS30 day16 Text Shadow Mouse Move Effect</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天教學的內容是根據滑鼠的移動來讓文字的陰影跟著移動，在這裡面我目前認為還有很難發現的雷 (this 跟 e.target 不同)，整體而言我覺得效果滿酷的！<br>\n可以看看這個<a href=\"https://codepen.io/gbvjpsln/pen/eYYQjKW\" target=\"_blank\" rel=\"noopener\">CodePen</a></p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li>ES6 語法糖：</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> width = hero.offsetWidth</span><br><span class=\"line\"><span class=\"keyword\">const</span> height = hero.offsetHeight</span><br><span class=\"line\"><span class=\"comment\">// ES6 語法上面兩行可以變成下面這樣</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"attr\">offsetWidth</span>: width, <span class=\"attr\">offsetHeight</span>: height &#125; = hero</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>一開始的 JS 長這樣：</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> hero = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.hero'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> text = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'h1'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">shadow</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; <span class=\"attr\">offsetWidth</span>: width, <span class=\"attr\">offsetHeight</span>: height &#125; = hero</span><br><span class=\"line\">  <span class=\"keyword\">let</span> &#123; <span class=\"attr\">offsetX</span>: x, <span class=\"attr\">offsetY</span>: y &#125; = e</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(x,y)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">hero.addEventListener(<span class=\"string\">'mousemove'</span>, shadow)</span><br></pre></td></tr></table></figure>\n<p>奇怪的是這時候如果把滑鼠移到 h1 左上方，座標會接近 0<br>\n<img src=\"https://i.imgur.com/ugWGwtR.png\" alt=\"\"><br>\n<strong>這是因為這時候我們的 event taget 是 h1 而不是 hero!</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>, e.target)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">shadow</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>, e.target) <span class=\"comment\">// 如果在 h1 上面的話，this 仍然是 hero，但 e.target 是 h1</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>因此方法要改寫成</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">shadow</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; <span class=\"attr\">offsetWidth</span>: width, <span class=\"attr\">offsetHeight</span>: height &#125; = hero</span><br><span class=\"line\">  <span class=\"keyword\">let</span> &#123; <span class=\"attr\">offsetX</span>: x, <span class=\"attr\">offsetY</span>: y &#125; = e</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span> !== e.target)&#123;</span><br><span class=\"line\">    x = x + e.target.offsetLeft</span><br><span class=\"line\">    y = y + e.target.offsetTop</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>這樣寫的話，如果 target 變成 h1 就會加上 h1 左上角的 x 跟 y 座標，達到統一效果</p>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：</p>\n<p>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hero\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">contenteditable</span>&gt;</span>🔥WOAH!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: sans-serif;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.hero</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-shadow</span>: <span class=\"number\">10px</span> <span class=\"number\">10px</span> <span class=\"number\">0</span> <span class=\"built_in\">rgba</span>(0,0,0,1);</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> hero = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.hero'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> text = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'h1'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> walk = <span class=\"number\">100</span>; <span class=\"comment\">//100px</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">shadow</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; <span class=\"attr\">offsetWidth</span>: width, <span class=\"attr\">offsetHeight</span>: height &#125; = hero</span><br><span class=\"line\">  <span class=\"keyword\">let</span> &#123; <span class=\"attr\">offsetX</span>: x, <span class=\"attr\">offsetY</span>: y &#125; = e</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span> !== e.target)&#123;</span><br><span class=\"line\">    x = x + e.target.offsetLeft</span><br><span class=\"line\">    y = y + e.target.offsetTop</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">const</span> xWalk = <span class=\"built_in\">Math</span>.round((x / width * walk) - (walk / <span class=\"number\">2</span>))</span><br><span class=\"line\">  <span class=\"keyword\">const</span> yWalk = <span class=\"built_in\">Math</span>.round((y / height * walk) - (walk / <span class=\"number\">2</span>))</span><br><span class=\"line\">  </span><br><span class=\"line\">  text.style.textShadow = <span class=\"string\">`<span class=\"subst\">$&#123;xWalk&#125;</span>px <span class=\"subst\">$&#123;yWalk&#125;</span>px 0 red`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">hero.addEventListener(<span class=\"string\">'mousemove'</span>, shadow)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day16 - JS30 day16 Text Shadow Mouse Move Effect</h1>\n<h2>作業內容</h2>\n<p>今天教學的內容是根據滑鼠的移動來讓文字的陰影跟著移動，在這裡面我目前認為還有很難發現的雷 (this 跟 e.target 不同)，整體而言我覺得效果滿酷的！<br>\n可以看看這個<a href=\"https://codepen.io/gbvjpsln/pen/eYYQjKW\" target=\"_blank\" rel=\"noopener\">CodePen</a></p>\n<h2>學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li>ES6 語法糖：</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> width = hero.offsetWidth</span><br><span class=\"line\"><span class=\"keyword\">const</span> height = hero.offsetHeight</span><br><span class=\"line\"><span class=\"comment\">// ES6 語法上面兩行可以變成下面這樣</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"attr\">offsetWidth</span>: width, <span class=\"attr\">offsetHeight</span>: height &#125; = hero</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>一開始的 JS 長這樣：</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> hero = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.hero'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> text = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'h1'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">shadow</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; <span class=\"attr\">offsetWidth</span>: width, <span class=\"attr\">offsetHeight</span>: height &#125; = hero</span><br><span class=\"line\">  <span class=\"keyword\">let</span> &#123; <span class=\"attr\">offsetX</span>: x, <span class=\"attr\">offsetY</span>: y &#125; = e</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(x,y)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">hero.addEventListener(<span class=\"string\">'mousemove'</span>, shadow)</span><br></pre></td></tr></table></figure>\n<p>奇怪的是這時候如果把滑鼠移到 h1 左上方，座標會接近 0<br>\n<img src=\"https://i.imgur.com/ugWGwtR.png\" alt=\"\"><br>\n<strong>這是因為這時候我們的 event taget 是 h1 而不是 hero!</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>, e.target)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">shadow</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>, e.target) <span class=\"comment\">// 如果在 h1 上面的話，this 仍然是 hero，但 e.target 是 h1</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>因此方法要改寫成</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">shadow</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; <span class=\"attr\">offsetWidth</span>: width, <span class=\"attr\">offsetHeight</span>: height &#125; = hero</span><br><span class=\"line\">  <span class=\"keyword\">let</span> &#123; <span class=\"attr\">offsetX</span>: x, <span class=\"attr\">offsetY</span>: y &#125; = e</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span> !== e.target)&#123;</span><br><span class=\"line\">    x = x + e.target.offsetLeft</span><br><span class=\"line\">    y = y + e.target.offsetTop</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>這樣寫的話，如果 target 變成 h1 就會加上 h1 左上角的 x 跟 y 座標，達到統一效果</p>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：</p>\n<p>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hero\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">contenteditable</span>&gt;</span>🔥WOAH!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: sans-serif;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.hero</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-shadow</span>: <span class=\"number\">10px</span> <span class=\"number\">10px</span> <span class=\"number\">0</span> <span class=\"built_in\">rgba</span>(0,0,0,1);</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> hero = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.hero'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> text = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'h1'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> walk = <span class=\"number\">100</span>; <span class=\"comment\">//100px</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">shadow</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; <span class=\"attr\">offsetWidth</span>: width, <span class=\"attr\">offsetHeight</span>: height &#125; = hero</span><br><span class=\"line\">  <span class=\"keyword\">let</span> &#123; <span class=\"attr\">offsetX</span>: x, <span class=\"attr\">offsetY</span>: y &#125; = e</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span> !== e.target)&#123;</span><br><span class=\"line\">    x = x + e.target.offsetLeft</span><br><span class=\"line\">    y = y + e.target.offsetTop</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">const</span> xWalk = <span class=\"built_in\">Math</span>.round((x / width * walk) - (walk / <span class=\"number\">2</span>))</span><br><span class=\"line\">  <span class=\"keyword\">const</span> yWalk = <span class=\"built_in\">Math</span>.round((y / height * walk) - (walk / <span class=\"number\">2</span>))</span><br><span class=\"line\">  </span><br><span class=\"line\">  text.style.textShadow = <span class=\"string\">`<span class=\"subst\">$&#123;xWalk&#125;</span>px <span class=\"subst\">$&#123;yWalk&#125;</span>px 0 red`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">hero.addEventListener(<span class=\"string\">'mousemove'</span>, shadow)</span><br></pre></td></tr></table></figure>"},{"title":"JS30 day17 Sorting Band Names","catalog":true,"toc_nav_num":true,"date":"2019-11-16T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1573867368999-5388ba407550?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80","catagories":["Javascript"],"updateDate":"2019-11-16T14:26:24.000Z","_content":"# JS30 day17 - Sorting Band Names\n\n## 作業內容\n\n今天內容頗簡單的，只是要把某陣列排序之後塞到 DOM node 裡面而已，反而是花很多時間在查 JS 的方法ＸＤ\n可以看看這個[CodePen](https://codepen.io/gbvjpsln/pen/ExxGVbm)\n\n## 學到什麼\n\n- JS\n  1. `replace()`裡面第一個參數可以放字串或者 regular expression，但要記得如果放字串他只會替換一次，如果是 regular expression 後面只要放個 g 就是 global，可以替換全部的\n  ```js\n  name = 'Word Word';\n\n  uw=name.replace(/Word/g, \"QQ\")\n  console.log(uw) // \"QQ QQ\"\n\n  uw=name.replace(/Word/, \"QQ\")\n  console.log(uw) // \"QQ Word\"\n\n  uw=name.replace(\"Word\", \"QQ\")\n  console.log(uw) // \"QQ Word\"\n  ```\n  除此之外，第二個參數也可以放 function，比方說今天要把某段字串的第一個都換成大寫\n\n  ```js\n  name = 'aaa bbb ccc';\n  uw=name.replace(/\\b\\w+\\b/g, function(word){\n    return word.substring(0,1).toUpperCase()+word.substring(1);\n  });\n  ```\n  參考資料：https://www.opencli.com/php/javascript-search-and-replace\n  參考資料2：https://www.w3school.com.cn/jsref/jsref_replace.asp\n\n  2. `substr()` / `substring()` / `slice()` 的差異：\n  **如果都只有一個參數，他會代表起始值的 index**，這時候沒差異\n  ```js\n  var NewStr=\"Welcome to wibibi.\";\n\n  console.log(NewStr.substr(3)); // \"come to wibibi.\"\n  console.log(NewStr.substring(3)); //\"come to wibibi.\"\n  console.log(NewStr.slice(3)); //\"come to wibibi.\"\n  ```\n  但是如果有兩個參數的話， **`substr()`的第二個參數代表長度，`substring()` 跟 `slice()` 的第二個參數代表結束的 index (不包含)**\n  ```js\n  var NewStr=\"Welcome to wibibi.\";\n  // 如果算長度的話，從 3 的 index (c) 算 6 位是到 \"t\" 結束\n  // 如果算 index 的話，是到 'e' 結束 (不包含)\n  console.log(NewStr.substr(3, 6)); // \"come t\"\n  console.log(NewStr.substring(3, 6)); //\"com\"\n  console.log(NewStr.slice(3, 6)); //\"com\"\n  ```\n  另外，ECMAscript並沒有將`substr()`納入標準，因此不建議使用\n\n  那麼 `substring()` / `slice()` 的差異在哪呢？？\n\n  答案是 **`substring()` 支援往前取值，但 `slice()` 不行**\n  ```js\n  var NewStr=\"Welcome to wibibi.\";\n\n  console.log(NewStr.substring(3, 1)); //\"el\"\n  console.log(NewStr.slice(3, 1)); // \"\"\n  ```\n\n\n  參考資料： \n  https://www.wibibi.com/info.php?tid=315\n  https://www.foolegg.com/what-is-the-difference-between-substr-substring-and-slice-in-javascript/\n\n  2. `trim()` 是可以回傳某段字串去除掉前後空白字元的值\n  ```js\n  var NewStr=\"  Welcome to wibibi.  \";\n\n  console.log(NewStr.trim()); // \"Welcome to wibibi.\"\n  ```\n  \n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\n\nHTML:\n```html\n<ul id=\"bands\"></ul>\n```\nCSS:\n```css\nbody {\n  margin: 0;\n  font-family: sans-serif;\n  background: url(\"https://source.unsplash.com/nDqA4d5NL0k/2000x2000\");\n  background-size: cover;\n  display: flex;\n  align-items: center;\n  min-height: 100vh;\n}\n\n#bands {\n  list-style: inside square;\n  font-size: 20px;\n  background: white;\n  width: 500px;\n  margin: auto;\n  padding: 0;\n  box-shadow: 0 0 0 20px rgba(0, 0, 0, 0.05);\n}\n\n#bands li {\n  border-bottom: 1px solid #efefef;\n  padding: 20px;\n}\n\n#bands li:last-child {\n  border-bottom: 0;\n}\n\na {\n  color: #ffc600;\n  text-decoration: none;\n}\n```\nJS:\n```js\nconst bands = ['The Plot in You', 'The Devil Wears Prada', 'Pierce the Veil', 'Norma Jean', 'The Bled', 'Say Anything', 'The Midway State', 'We Came as Romans', 'Counterparts', 'Oh, Sleeper', 'A Skylit Drive', 'Anywhere But Here', 'An Old Dog'];\nconst container = document.querySelector('#bands')\n\nfunction strip(bandName){\n  return bandName.replace(/^a |the |an /i, '').trim()\n}\n\nconst sortedBands = bands.sort(function(a, b){\n  if(strip(a) > strip(b)){\n    return 1;\n  }else{\n    return -1;\n  }\n})\n\nconst lists = sortedBands.map(function(band){\n  return `\n    <li>${band}</li>\n  `\n}).join(\"\")\ncontainer.innerHTML = lists\n```","source":"_posts/2019-11-17-JS30_day17.md","raw":"---\ntitle: \"JS30 day17 Sorting Band Names\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-16 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1573867368999-5388ba407550?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-16 22:26:24\n# top: 1\n\n---\n# JS30 day17 - Sorting Band Names\n\n## 作業內容\n\n今天內容頗簡單的，只是要把某陣列排序之後塞到 DOM node 裡面而已，反而是花很多時間在查 JS 的方法ＸＤ\n可以看看這個[CodePen](https://codepen.io/gbvjpsln/pen/ExxGVbm)\n\n## 學到什麼\n\n- JS\n  1. `replace()`裡面第一個參數可以放字串或者 regular expression，但要記得如果放字串他只會替換一次，如果是 regular expression 後面只要放個 g 就是 global，可以替換全部的\n  ```js\n  name = 'Word Word';\n\n  uw=name.replace(/Word/g, \"QQ\")\n  console.log(uw) // \"QQ QQ\"\n\n  uw=name.replace(/Word/, \"QQ\")\n  console.log(uw) // \"QQ Word\"\n\n  uw=name.replace(\"Word\", \"QQ\")\n  console.log(uw) // \"QQ Word\"\n  ```\n  除此之外，第二個參數也可以放 function，比方說今天要把某段字串的第一個都換成大寫\n\n  ```js\n  name = 'aaa bbb ccc';\n  uw=name.replace(/\\b\\w+\\b/g, function(word){\n    return word.substring(0,1).toUpperCase()+word.substring(1);\n  });\n  ```\n  參考資料：https://www.opencli.com/php/javascript-search-and-replace\n  參考資料2：https://www.w3school.com.cn/jsref/jsref_replace.asp\n\n  2. `substr()` / `substring()` / `slice()` 的差異：\n  **如果都只有一個參數，他會代表起始值的 index**，這時候沒差異\n  ```js\n  var NewStr=\"Welcome to wibibi.\";\n\n  console.log(NewStr.substr(3)); // \"come to wibibi.\"\n  console.log(NewStr.substring(3)); //\"come to wibibi.\"\n  console.log(NewStr.slice(3)); //\"come to wibibi.\"\n  ```\n  但是如果有兩個參數的話， **`substr()`的第二個參數代表長度，`substring()` 跟 `slice()` 的第二個參數代表結束的 index (不包含)**\n  ```js\n  var NewStr=\"Welcome to wibibi.\";\n  // 如果算長度的話，從 3 的 index (c) 算 6 位是到 \"t\" 結束\n  // 如果算 index 的話，是到 'e' 結束 (不包含)\n  console.log(NewStr.substr(3, 6)); // \"come t\"\n  console.log(NewStr.substring(3, 6)); //\"com\"\n  console.log(NewStr.slice(3, 6)); //\"com\"\n  ```\n  另外，ECMAscript並沒有將`substr()`納入標準，因此不建議使用\n\n  那麼 `substring()` / `slice()` 的差異在哪呢？？\n\n  答案是 **`substring()` 支援往前取值，但 `slice()` 不行**\n  ```js\n  var NewStr=\"Welcome to wibibi.\";\n\n  console.log(NewStr.substring(3, 1)); //\"el\"\n  console.log(NewStr.slice(3, 1)); // \"\"\n  ```\n\n\n  參考資料： \n  https://www.wibibi.com/info.php?tid=315\n  https://www.foolegg.com/what-is-the-difference-between-substr-substring-and-slice-in-javascript/\n\n  2. `trim()` 是可以回傳某段字串去除掉前後空白字元的值\n  ```js\n  var NewStr=\"  Welcome to wibibi.  \";\n\n  console.log(NewStr.trim()); // \"Welcome to wibibi.\"\n  ```\n  \n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\n\nHTML:\n```html\n<ul id=\"bands\"></ul>\n```\nCSS:\n```css\nbody {\n  margin: 0;\n  font-family: sans-serif;\n  background: url(\"https://source.unsplash.com/nDqA4d5NL0k/2000x2000\");\n  background-size: cover;\n  display: flex;\n  align-items: center;\n  min-height: 100vh;\n}\n\n#bands {\n  list-style: inside square;\n  font-size: 20px;\n  background: white;\n  width: 500px;\n  margin: auto;\n  padding: 0;\n  box-shadow: 0 0 0 20px rgba(0, 0, 0, 0.05);\n}\n\n#bands li {\n  border-bottom: 1px solid #efefef;\n  padding: 20px;\n}\n\n#bands li:last-child {\n  border-bottom: 0;\n}\n\na {\n  color: #ffc600;\n  text-decoration: none;\n}\n```\nJS:\n```js\nconst bands = ['The Plot in You', 'The Devil Wears Prada', 'Pierce the Veil', 'Norma Jean', 'The Bled', 'Say Anything', 'The Midway State', 'We Came as Romans', 'Counterparts', 'Oh, Sleeper', 'A Skylit Drive', 'Anywhere But Here', 'An Old Dog'];\nconst container = document.querySelector('#bands')\n\nfunction strip(bandName){\n  return bandName.replace(/^a |the |an /i, '').trim()\n}\n\nconst sortedBands = bands.sort(function(a, b){\n  if(strip(a) > strip(b)){\n    return 1;\n  }else{\n    return -1;\n  }\n})\n\nconst lists = sortedBands.map(function(band){\n  return `\n    <li>${band}</li>\n  `\n}).join(\"\")\ncontainer.innerHTML = lists\n```","slug":"2019-11-17-JS30_day17","published":1,"updated":"2019-11-22T07:08:18.385Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0ev3002q2ob14r6u2ugm","content":"<h1 id=\"js30-day17-sorting-band-names\">JS30 day17 - Sorting Band Names</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天內容頗簡單的，只是要把某陣列排序之後塞到 DOM node 裡面而已，反而是花很多時間在查 JS 的方法ＸＤ<br>\n可以看看這個<a href=\"https://codepen.io/gbvjpsln/pen/ExxGVbm\" target=\"_blank\" rel=\"noopener\">CodePen</a></p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li><code>replace()</code>裡面第一個參數可以放字串或者 regular expression，但要記得如果放字串他只會替換一次，如果是 regular expression 後面只要放個 g 就是 global，可以替換全部的</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = <span class=\"string\">'Word Word'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">uw=name.replace(<span class=\"regexp\">/Word/g</span>, <span class=\"string\">\"QQ\"</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(uw) <span class=\"comment\">// \"QQ QQ\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">uw=name.replace(<span class=\"regexp\">/Word/</span>, <span class=\"string\">\"QQ\"</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(uw) <span class=\"comment\">// \"QQ Word\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">uw=name.replace(<span class=\"string\">\"Word\"</span>, <span class=\"string\">\"QQ\"</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(uw) <span class=\"comment\">// \"QQ Word\"</span></span><br></pre></td></tr></table></figure>\n<p>除此之外，第二個參數也可以放 function，比方說今天要把某段字串的第一個都換成大寫</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = <span class=\"string\">'aaa bbb ccc'</span>;</span><br><span class=\"line\">uw=name.replace(<span class=\"regexp\">/\\b\\w+\\b/g</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">word</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> word.substring(<span class=\"number\">0</span>,<span class=\"number\">1</span>).toUpperCase()+word.substring(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>參考資料：<a href=\"https://www.opencli.com/php/javascript-search-and-replace\" target=\"_blank\" rel=\"noopener\">https://www.opencli.com/php/javascript-search-and-replace</a><br>\n參考資料2：<a href=\"https://www.w3school.com.cn/jsref/jsref_replace.asp\" target=\"_blank\" rel=\"noopener\">https://www.w3school.com.cn/jsref/jsref_replace.asp</a></p>\n<ol start=\"2\">\n<li><code>substr()</code> / <code>substring()</code> / <code>slice()</code> 的差異：<br>\n<strong>如果都只有一個參數，他會代表起始值的 index</strong>，這時候沒差異</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> NewStr=<span class=\"string\">\"Welcome to wibibi.\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(NewStr.substr(<span class=\"number\">3</span>)); <span class=\"comment\">// \"come to wibibi.\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(NewStr.substring(<span class=\"number\">3</span>)); <span class=\"comment\">//\"come to wibibi.\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(NewStr.slice(<span class=\"number\">3</span>)); <span class=\"comment\">//\"come to wibibi.\"</span></span><br></pre></td></tr></table></figure>\n<p>但是如果有兩個參數的話， <strong><code>substr()</code>的第二個參數代表長度，<code>substring()</code> 跟 <code>slice()</code> 的第二個參數代表結束的 index (不包含)</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> NewStr=<span class=\"string\">\"Welcome to wibibi.\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 如果算長度的話，從 3 的 index (c) 算 6 位是到 \"t\" 結束</span></span><br><span class=\"line\"><span class=\"comment\">// 如果算 index 的話，是到 'e' 結束 (不包含)</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(NewStr.substr(<span class=\"number\">3</span>, <span class=\"number\">6</span>)); <span class=\"comment\">// \"come t\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(NewStr.substring(<span class=\"number\">3</span>, <span class=\"number\">6</span>)); <span class=\"comment\">//\"com\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(NewStr.slice(<span class=\"number\">3</span>, <span class=\"number\">6</span>)); <span class=\"comment\">//\"com\"</span></span><br></pre></td></tr></table></figure>\n<p>另外，ECMAscript並沒有將<code>substr()</code>納入標準，因此不建議使用</p>\n<p>那麼 <code>substring()</code> / <code>slice()</code> 的差異在哪呢？？</p>\n<p>答案是 <strong><code>substring()</code> 支援往前取值，但 <code>slice()</code> 不行</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> NewStr=<span class=\"string\">\"Welcome to wibibi.\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(NewStr.substring(<span class=\"number\">3</span>, <span class=\"number\">1</span>)); <span class=\"comment\">//\"el\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(NewStr.slice(<span class=\"number\">3</span>, <span class=\"number\">1</span>)); <span class=\"comment\">// \"\"</span></span><br></pre></td></tr></table></figure>\n<p>參考資料：<br>\n<a href=\"https://www.wibibi.com/info.php?tid=315\" target=\"_blank\" rel=\"noopener\">https://www.wibibi.com/info.php?tid=315</a><br>\n<a href=\"https://www.foolegg.com/what-is-the-difference-between-substr-substring-and-slice-in-javascript/\" target=\"_blank\" rel=\"noopener\">https://www.foolegg.com/what-is-the-difference-between-substr-substring-and-slice-in-javascript/</a></p>\n<ol start=\"2\">\n<li><code>trim()</code> 是可以回傳某段字串去除掉前後空白字元的值</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> NewStr=<span class=\"string\">\"  Welcome to wibibi.  \"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(NewStr.trim()); <span class=\"comment\">// \"Welcome to wibibi.\"</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：</p>\n<p>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"bands\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(<span class=\"string\">\"https://source.unsplash.com/nDqA4d5NL0k/2000x2000\"</span>);</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: cover;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#bands</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: inside square;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: auto;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">20px</span> <span class=\"built_in\">rgba</span>(0, 0, 0, 0.05);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#bands</span> <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#efefef</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#bands</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> bands = [<span class=\"string\">'The Plot in You'</span>, <span class=\"string\">'The Devil Wears Prada'</span>, <span class=\"string\">'Pierce the Veil'</span>, <span class=\"string\">'Norma Jean'</span>, <span class=\"string\">'The Bled'</span>, <span class=\"string\">'Say Anything'</span>, <span class=\"string\">'The Midway State'</span>, <span class=\"string\">'We Came as Romans'</span>, <span class=\"string\">'Counterparts'</span>, <span class=\"string\">'Oh, Sleeper'</span>, <span class=\"string\">'A Skylit Drive'</span>, <span class=\"string\">'Anywhere But Here'</span>, <span class=\"string\">'An Old Dog'</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> container = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#bands'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">strip</span>(<span class=\"params\">bandName</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> bandName.replace(<span class=\"regexp\">/^a |the |an /i</span>, <span class=\"string\">''</span>).trim()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> sortedBands = bands.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(strip(a) &gt; strip(b))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> lists = sortedBands.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">band</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">    &lt;li&gt;<span class=\"subst\">$&#123;band&#125;</span>&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">  `</span></span><br><span class=\"line\">&#125;).join(<span class=\"string\">\"\"</span>)</span><br><span class=\"line\">container.innerHTML = lists</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day17 - Sorting Band Names</h1>\n<h2>作業內容</h2>\n<p>今天內容頗簡單的，只是要把某陣列排序之後塞到 DOM node 裡面而已，反而是花很多時間在查 JS 的方法ＸＤ<br>\n可以看看這個<a href=\"https://codepen.io/gbvjpsln/pen/ExxGVbm\" target=\"_blank\" rel=\"noopener\">CodePen</a></p>\n<h2>學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li><code>replace()</code>裡面第一個參數可以放字串或者 regular expression，但要記得如果放字串他只會替換一次，如果是 regular expression 後面只要放個 g 就是 global，可以替換全部的</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = <span class=\"string\">'Word Word'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">uw=name.replace(<span class=\"regexp\">/Word/g</span>, <span class=\"string\">\"QQ\"</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(uw) <span class=\"comment\">// \"QQ QQ\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">uw=name.replace(<span class=\"regexp\">/Word/</span>, <span class=\"string\">\"QQ\"</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(uw) <span class=\"comment\">// \"QQ Word\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">uw=name.replace(<span class=\"string\">\"Word\"</span>, <span class=\"string\">\"QQ\"</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(uw) <span class=\"comment\">// \"QQ Word\"</span></span><br></pre></td></tr></table></figure>\n<p>除此之外，第二個參數也可以放 function，比方說今天要把某段字串的第一個都換成大寫</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = <span class=\"string\">'aaa bbb ccc'</span>;</span><br><span class=\"line\">uw=name.replace(<span class=\"regexp\">/\\b\\w+\\b/g</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">word</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> word.substring(<span class=\"number\">0</span>,<span class=\"number\">1</span>).toUpperCase()+word.substring(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>參考資料：<a href=\"https://www.opencli.com/php/javascript-search-and-replace\" target=\"_blank\" rel=\"noopener\">https://www.opencli.com/php/javascript-search-and-replace</a><br>\n參考資料2：<a href=\"https://www.w3school.com.cn/jsref/jsref_replace.asp\" target=\"_blank\" rel=\"noopener\">https://www.w3school.com.cn/jsref/jsref_replace.asp</a></p>\n<ol start=\"2\">\n<li><code>substr()</code> / <code>substring()</code> / <code>slice()</code> 的差異：<br>\n<strong>如果都只有一個參數，他會代表起始值的 index</strong>，這時候沒差異</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> NewStr=<span class=\"string\">\"Welcome to wibibi.\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(NewStr.substr(<span class=\"number\">3</span>)); <span class=\"comment\">// \"come to wibibi.\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(NewStr.substring(<span class=\"number\">3</span>)); <span class=\"comment\">//\"come to wibibi.\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(NewStr.slice(<span class=\"number\">3</span>)); <span class=\"comment\">//\"come to wibibi.\"</span></span><br></pre></td></tr></table></figure>\n<p>但是如果有兩個參數的話， <strong><code>substr()</code>的第二個參數代表長度，<code>substring()</code> 跟 <code>slice()</code> 的第二個參數代表結束的 index (不包含)</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> NewStr=<span class=\"string\">\"Welcome to wibibi.\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 如果算長度的話，從 3 的 index (c) 算 6 位是到 \"t\" 結束</span></span><br><span class=\"line\"><span class=\"comment\">// 如果算 index 的話，是到 'e' 結束 (不包含)</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(NewStr.substr(<span class=\"number\">3</span>, <span class=\"number\">6</span>)); <span class=\"comment\">// \"come t\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(NewStr.substring(<span class=\"number\">3</span>, <span class=\"number\">6</span>)); <span class=\"comment\">//\"com\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(NewStr.slice(<span class=\"number\">3</span>, <span class=\"number\">6</span>)); <span class=\"comment\">//\"com\"</span></span><br></pre></td></tr></table></figure>\n<p>另外，ECMAscript並沒有將<code>substr()</code>納入標準，因此不建議使用</p>\n<p>那麼 <code>substring()</code> / <code>slice()</code> 的差異在哪呢？？</p>\n<p>答案是 <strong><code>substring()</code> 支援往前取值，但 <code>slice()</code> 不行</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> NewStr=<span class=\"string\">\"Welcome to wibibi.\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(NewStr.substring(<span class=\"number\">3</span>, <span class=\"number\">1</span>)); <span class=\"comment\">//\"el\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(NewStr.slice(<span class=\"number\">3</span>, <span class=\"number\">1</span>)); <span class=\"comment\">// \"\"</span></span><br></pre></td></tr></table></figure>\n<p>參考資料：<br>\n<a href=\"https://www.wibibi.com/info.php?tid=315\" target=\"_blank\" rel=\"noopener\">https://www.wibibi.com/info.php?tid=315</a><br>\n<a href=\"https://www.foolegg.com/what-is-the-difference-between-substr-substring-and-slice-in-javascript/\" target=\"_blank\" rel=\"noopener\">https://www.foolegg.com/what-is-the-difference-between-substr-substring-and-slice-in-javascript/</a></p>\n<ol start=\"2\">\n<li><code>trim()</code> 是可以回傳某段字串去除掉前後空白字元的值</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> NewStr=<span class=\"string\">\"  Welcome to wibibi.  \"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(NewStr.trim()); <span class=\"comment\">// \"Welcome to wibibi.\"</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：</p>\n<p>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"bands\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(<span class=\"string\">\"https://source.unsplash.com/nDqA4d5NL0k/2000x2000\"</span>);</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: cover;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#bands</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: inside square;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: auto;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">20px</span> <span class=\"built_in\">rgba</span>(0, 0, 0, 0.05);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#bands</span> <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#efefef</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#bands</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> bands = [<span class=\"string\">'The Plot in You'</span>, <span class=\"string\">'The Devil Wears Prada'</span>, <span class=\"string\">'Pierce the Veil'</span>, <span class=\"string\">'Norma Jean'</span>, <span class=\"string\">'The Bled'</span>, <span class=\"string\">'Say Anything'</span>, <span class=\"string\">'The Midway State'</span>, <span class=\"string\">'We Came as Romans'</span>, <span class=\"string\">'Counterparts'</span>, <span class=\"string\">'Oh, Sleeper'</span>, <span class=\"string\">'A Skylit Drive'</span>, <span class=\"string\">'Anywhere But Here'</span>, <span class=\"string\">'An Old Dog'</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> container = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#bands'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">strip</span>(<span class=\"params\">bandName</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> bandName.replace(<span class=\"regexp\">/^a |the |an /i</span>, <span class=\"string\">''</span>).trim()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> sortedBands = bands.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(strip(a) &gt; strip(b))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> lists = sortedBands.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">band</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">    &lt;li&gt;<span class=\"subst\">$&#123;band&#125;</span>&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">  `</span></span><br><span class=\"line\">&#125;).join(<span class=\"string\">\"\"</span>)</span><br><span class=\"line\">container.innerHTML = lists</span><br></pre></td></tr></table></figure>"},{"title":"JS30 day18 Tally String Times with Reduce","catalog":true,"toc_nav_num":true,"date":"2019-11-18T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1573900100953-1e08492fba5c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Javascript"],"updateDate":"2019-11-18T14:26:24.000Z","_content":"# JS30 day18 - Tally String Times with Reduce\n\n## 作業內容\n\n今天也是主要在練習 JS 的 map / reduce 這兩種方法，要把影片的總時間加總，練習字串轉時間的過程\n\n## 學到什麼\n\n- JS\n  1. nodeList 不能使用 map，只有 array 可以\n  把 nodeList 轉換成 array: `Array.from(<nodeList>)` 或者 `[...<nodeList>]`\n  \n  2. 如果要使用一個方法把一個陣列的項目全部轉換的話，可以直接使用 `arr.map(function)\n  ```js\n  time = \"1:56\"\n  splited_time = time.split(\":\").map(parseFloat)\n  console.log(splited_time)\n\n  time = \"1:56\"\n  splited_time = time\n                    .split(\":\")\n                    .map((timeCode)=>{ \n                      return parseFloat(timeCode) \n                    })\n  console.log(splited_time)\n  ```\n  \n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\nHTML:\n```html\n<ul class=\"videos\">\n  <li data-time=\"5:43\">\n    Video 1\n  </li>\n  <li data-time=\"2:33\">\n    Video 2\n  </li>\n  <li data-time=\"3:45\">\n    Video 3\n  </li>\n  <li data-time=\"0:47\">\n    Video 4\n  </li>\n  <li data-time=\"5:21\">\n    Video 5\n  </li>\n  ...\n```\nJS:\n```js\nconst timeNodes = [...document.querySelectorAll('[data-time]')]\n\nconst seconds = timeNodes\n                      .map((node)=>node.dataset.time)\n                      .map((timeCode) => {\n                        const [min, seconds] = timeCode.split(\":\").map(parseFloat);\n                        return (min * 60 + seconds)\n                      })\n                      .reduce((sum, videoTime)=>{ return sum + videoTime } )\nlet secondsLeft = seconds\n\nlet hours = Math.floor(secondsLeft / 3600)\nsecondsLeft = secondsLeft % 3600\n\nlet minutes = Math.floor(secondsLeft / 60)\nsecondsLeft = secondsLeft % 60\n\nconsole.log(hours, minutes, secondsLeft)\n```","source":"_posts/2019-11-18-JS30_day18.md","raw":"---\ntitle: \"JS30 day18 Tally String Times with Reduce\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-18 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1573900100953-1e08492fba5c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-18 22:26:24\n# top: 1\n\n---\n# JS30 day18 - Tally String Times with Reduce\n\n## 作業內容\n\n今天也是主要在練習 JS 的 map / reduce 這兩種方法，要把影片的總時間加總，練習字串轉時間的過程\n\n## 學到什麼\n\n- JS\n  1. nodeList 不能使用 map，只有 array 可以\n  把 nodeList 轉換成 array: `Array.from(<nodeList>)` 或者 `[...<nodeList>]`\n  \n  2. 如果要使用一個方法把一個陣列的項目全部轉換的話，可以直接使用 `arr.map(function)\n  ```js\n  time = \"1:56\"\n  splited_time = time.split(\":\").map(parseFloat)\n  console.log(splited_time)\n\n  time = \"1:56\"\n  splited_time = time\n                    .split(\":\")\n                    .map((timeCode)=>{ \n                      return parseFloat(timeCode) \n                    })\n  console.log(splited_time)\n  ```\n  \n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\nHTML:\n```html\n<ul class=\"videos\">\n  <li data-time=\"5:43\">\n    Video 1\n  </li>\n  <li data-time=\"2:33\">\n    Video 2\n  </li>\n  <li data-time=\"3:45\">\n    Video 3\n  </li>\n  <li data-time=\"0:47\">\n    Video 4\n  </li>\n  <li data-time=\"5:21\">\n    Video 5\n  </li>\n  ...\n```\nJS:\n```js\nconst timeNodes = [...document.querySelectorAll('[data-time]')]\n\nconst seconds = timeNodes\n                      .map((node)=>node.dataset.time)\n                      .map((timeCode) => {\n                        const [min, seconds] = timeCode.split(\":\").map(parseFloat);\n                        return (min * 60 + seconds)\n                      })\n                      .reduce((sum, videoTime)=>{ return sum + videoTime } )\nlet secondsLeft = seconds\n\nlet hours = Math.floor(secondsLeft / 3600)\nsecondsLeft = secondsLeft % 3600\n\nlet minutes = Math.floor(secondsLeft / 60)\nsecondsLeft = secondsLeft % 60\n\nconsole.log(hours, minutes, secondsLeft)\n```","slug":"2019-11-18-JS30_day18","published":1,"updated":"2019-11-22T07:08:37.592Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0ev4002s2ob11y8muajb","content":"<h1 id=\"js30-day18-tally-string-times-with-reduce\">JS30 day18 - Tally String Times with Reduce</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天也是主要在練習 JS 的 map / reduce 這兩種方法，要把影片的總時間加總，練習字串轉時間的過程</p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<ul>\n<li>JS\n<ol>\n<li>\n<p>nodeList 不能使用 map，只有 array 可以<br>\n把 nodeList 轉換成 array: <code>Array.from(&lt;nodeList&gt;)</code> 或者 <code>[...&lt;nodeList&gt;]</code></p>\n</li>\n<li>\n<p>如果要使用一個方法把一個陣列的項目全部轉換的話，可以直接使用 `arr.map(function)</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">time = <span class=\"string\">\"1:56\"</span></span><br><span class=\"line\">splited_time = time.split(<span class=\"string\">\":\"</span>).map(<span class=\"built_in\">parseFloat</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(splited_time)</span><br><span class=\"line\"></span><br><span class=\"line\">time = <span class=\"string\">\"1:56\"</span></span><br><span class=\"line\">splited_time = time</span><br><span class=\"line\">                  .split(<span class=\"string\">\":\"</span>)</span><br><span class=\"line\">                  .map(<span class=\"function\">(<span class=\"params\">timeCode</span>)=&gt;</span>&#123; </span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"built_in\">parseFloat</span>(timeCode) </span><br><span class=\"line\">                  &#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(splited_time)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：<br>\nHTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"videos\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">data-time</span>=<span class=\"string\">\"5:43\"</span>&gt;</span></span><br><span class=\"line\">    Video 1</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">data-time</span>=<span class=\"string\">\"2:33\"</span>&gt;</span></span><br><span class=\"line\">    Video 2</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">data-time</span>=<span class=\"string\">\"3:45\"</span>&gt;</span></span><br><span class=\"line\">    Video 3</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">data-time</span>=<span class=\"string\">\"0:47\"</span>&gt;</span></span><br><span class=\"line\">    Video 4</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">data-time</span>=<span class=\"string\">\"5:21\"</span>&gt;</span></span><br><span class=\"line\">    Video 5</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  ...</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> timeNodes = [...document.querySelectorAll(<span class=\"string\">'[data-time]'</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> seconds = timeNodes</span><br><span class=\"line\">                      .map(<span class=\"function\">(<span class=\"params\">node</span>)=&gt;</span>node.dataset.time)</span><br><span class=\"line\">                      .map(<span class=\"function\">(<span class=\"params\">timeCode</span>) =&gt;</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">const</span> [min, seconds] = timeCode.split(<span class=\"string\">\":\"</span>).map(<span class=\"built_in\">parseFloat</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> (min * <span class=\"number\">60</span> + seconds)</span><br><span class=\"line\">                      &#125;)</span><br><span class=\"line\">                      .reduce(<span class=\"function\">(<span class=\"params\">sum, videoTime</span>)=&gt;</span>&#123; <span class=\"keyword\">return</span> sum + videoTime &#125; )</span><br><span class=\"line\"><span class=\"keyword\">let</span> secondsLeft = seconds</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> hours = <span class=\"built_in\">Math</span>.floor(secondsLeft / <span class=\"number\">3600</span>)</span><br><span class=\"line\">secondsLeft = secondsLeft % <span class=\"number\">3600</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> minutes = <span class=\"built_in\">Math</span>.floor(secondsLeft / <span class=\"number\">60</span>)</span><br><span class=\"line\">secondsLeft = secondsLeft % <span class=\"number\">60</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(hours, minutes, secondsLeft)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day18 - Tally String Times with Reduce</h1>\n<h2>作業內容</h2>\n<p>今天也是主要在練習 JS 的 map / reduce 這兩種方法，要把影片的總時間加總，練習字串轉時間的過程</p>\n<h2>學到什麼</h2>\n<ul>\n<li>JS\n<ol>\n<li>\n<p>nodeList 不能使用 map，只有 array 可以<br>\n把 nodeList 轉換成 array: <code>Array.from(&lt;nodeList&gt;)</code> 或者 <code>[...&lt;nodeList&gt;]</code></p>\n</li>\n<li>\n<p>如果要使用一個方法把一個陣列的項目全部轉換的話，可以直接使用 `arr.map(function)</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">time = <span class=\"string\">\"1:56\"</span></span><br><span class=\"line\">splited_time = time.split(<span class=\"string\">\":\"</span>).map(<span class=\"built_in\">parseFloat</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(splited_time)</span><br><span class=\"line\"></span><br><span class=\"line\">time = <span class=\"string\">\"1:56\"</span></span><br><span class=\"line\">splited_time = time</span><br><span class=\"line\">                  .split(<span class=\"string\">\":\"</span>)</span><br><span class=\"line\">                  .map(<span class=\"function\">(<span class=\"params\">timeCode</span>)=&gt;</span>&#123; </span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"built_in\">parseFloat</span>(timeCode) </span><br><span class=\"line\">                  &#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(splited_time)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：<br>\nHTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"videos\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">data-time</span>=<span class=\"string\">\"5:43\"</span>&gt;</span></span><br><span class=\"line\">    Video 1</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">data-time</span>=<span class=\"string\">\"2:33\"</span>&gt;</span></span><br><span class=\"line\">    Video 2</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">data-time</span>=<span class=\"string\">\"3:45\"</span>&gt;</span></span><br><span class=\"line\">    Video 3</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">data-time</span>=<span class=\"string\">\"0:47\"</span>&gt;</span></span><br><span class=\"line\">    Video 4</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">data-time</span>=<span class=\"string\">\"5:21\"</span>&gt;</span></span><br><span class=\"line\">    Video 5</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  ...</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> timeNodes = [...document.querySelectorAll(<span class=\"string\">'[data-time]'</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> seconds = timeNodes</span><br><span class=\"line\">                      .map(<span class=\"function\">(<span class=\"params\">node</span>)=&gt;</span>node.dataset.time)</span><br><span class=\"line\">                      .map(<span class=\"function\">(<span class=\"params\">timeCode</span>) =&gt;</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">const</span> [min, seconds] = timeCode.split(<span class=\"string\">\":\"</span>).map(<span class=\"built_in\">parseFloat</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> (min * <span class=\"number\">60</span> + seconds)</span><br><span class=\"line\">                      &#125;)</span><br><span class=\"line\">                      .reduce(<span class=\"function\">(<span class=\"params\">sum, videoTime</span>)=&gt;</span>&#123; <span class=\"keyword\">return</span> sum + videoTime &#125; )</span><br><span class=\"line\"><span class=\"keyword\">let</span> secondsLeft = seconds</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> hours = <span class=\"built_in\">Math</span>.floor(secondsLeft / <span class=\"number\">3600</span>)</span><br><span class=\"line\">secondsLeft = secondsLeft % <span class=\"number\">3600</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> minutes = <span class=\"built_in\">Math</span>.floor(secondsLeft / <span class=\"number\">60</span>)</span><br><span class=\"line\">secondsLeft = secondsLeft % <span class=\"number\">60</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(hours, minutes, secondsLeft)</span><br></pre></td></tr></table></figure>"},{"title":"JS30 day20 Speech Recognition","catalog":true,"toc_nav_num":true,"date":"2019-11-21T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1574279667513-5e66c54b5d2d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Javascript"],"updateDate":"2019-11-21T14:26:24.000Z","_content":"# JS30 day20 - Speech Recognition\n\n## 作業內容\n\n今天的作業內容我也覺得很有趣，是語音辨識！把講出來的話直接印在網頁上！\n![](https://i.imgur.com/jeCyDS0.png)\n\n## 學到什麼\n\n- JS\n  1. 語音辨識目前似乎只有桌機版的 Chrome 有實作，原作者這樣寫的目的好像是為了抓到 FireFox 實作的語音辨識，但我們其實用下面的寫法就好了\n  ```js\n  window.SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n\n  const recognition = new SpeechRecognition()\n  // 上面可以直接改成這樣 (只適用在 Chrome)\n  const recognition = new webkitSpeechRecognition()\n  ```\n  2. 這個物件比較常用的兩個屬性分別是決定語言還有是否即時辨識\n  ```js\n  const recognition = new SpeechRecognition()\n  recognition.interimResults = true //即時辨識 false 代表講完話才開始辨識\n  recognition.lang = 'en-US';\n  ```\n  3. 語音物件的格式滿複雜的，我們要的東西(文字)藏在 event 的 results 第一個項目的 transcript 中，所以我們先把它轉陣列用 map 方法取出，最後轉成字串\n  `result` 這個 event 只存在 `SpeechRecognition` 物件中，只要有文字被辨識出並回傳到 app 就會觸發這個事件\n  ```js\n  recognition.addEventListener('result', e =>{\n    const transcript = Array.from(e.results)\n      .map(result => result[0])\n      .map(result => result.transcript)\n      .join('')\n  })\n  ```\n  下面這張圖表示 e.results 的格式\n  ![](https://i.imgur.com/1uobHkz.png)\n  參考資料： [SpeechRecognition: result event](https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/result_event)\n\n  4. 用 `isFinal` 這個屬性看這個結果是不是最後回傳值，如果是 false 表示這個結果只是暫時的，還會繼續被更新\n  ```js\n  p.textContent = transcript\n  if(e.results[0].isFinal){\n    p = document.createElement('p')\n    words.appendChild(p)\n  }\n  console.log(transcript)\n  ```\n  參考資料：[SpeechRecognitionResult.isFinal](https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionResult/isFinal)\n  \n  5. 如果單單只有一行 `recognition.start()` ，在聽完一句話就結束了，必須去監聽 `end` 事件\n  `end` 事件是當語音識別物件與語音識別伺服器結束連結時觸發，因此才可以讓監聽的效果一直不間斷\n  ```js\n  recognition.addEventListener('end', recognition.start)\n  recognition.start();\n  ```\n  參考資料： https://ithelp.ithome.com.tw/articles/10196487\n  \n\n  \n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\nHTML:\n```html\n<div class=\"words\" contenteditable></div>\n```\nCSS:\n```css\nhtml {\n  font-size: 10px;\n}\n\nbody {\n  background: #ffc600;\n  font-family: 'helvetica neue';\n  font-weight: 200;\n  font-size: 20px;\n}\n\n.words {\n  max-width: 500px;\n  margin: 50px auto;\n  background: white;\n  border-radius: 5px;\n  box-shadow: 10px 10px 0 rgba(0,0,0,0.1);\n  padding: 1rem 2rem 1rem 5rem;\n  background: -webkit-gradient(linear, 0 0, 0 100%, from(#d9eaf3), color-stop(4%, #fff)) 0 4px;\n  background-size: 100% 3rem;\n  position: relative;\n  line-height: 3rem;\n}\n\np {\n  margin: 0 0 3rem;\n}\n\n.words:before {\n  content: '';\n  position: absolute;\n  width: 4px;\n  top: 0;\n  left: 30px;\n  bottom: 0;\n  border: 1px solid;\n  border-color: transparent #efe4e4;\n}\n```\nJS:\n```js\nwindow.SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n\nconst recognition = new SpeechRecognition()\nrecognition.interimResults = true //即時辨識 false 代表講完話才開始辨識\nrecognition.lang = 'en-US';\n\nlet p = document.createElement('p')\nconst words = document.querySelector('.words')\nwords.appendChild(p)\n\nrecognition.addEventListener('result', e =>{\n  // console.log(e.results);\n  const transcript = Array.from(e.results)\n    .map(result => result[0])\n    .map(result => result.transcript)\n    .join('')\n\n  p.textContent = transcript\n  if(e.results[0].isFinal){\n    p = document.createElement('p')\n    words.appendChild(p)\n  }\n  console.log(transcript)\n})\nrecognition.addEventListener('end', recognition.start)\nrecognition.start();\n```","source":"_posts/2019-11-21-JS30_day20.md","raw":"---\ntitle: \"JS30 day20 Speech Recognition\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-21 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1574279667513-5e66c54b5d2d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-21 22:26:24\n# top: 1\n\n---\n# JS30 day20 - Speech Recognition\n\n## 作業內容\n\n今天的作業內容我也覺得很有趣，是語音辨識！把講出來的話直接印在網頁上！\n![](https://i.imgur.com/jeCyDS0.png)\n\n## 學到什麼\n\n- JS\n  1. 語音辨識目前似乎只有桌機版的 Chrome 有實作，原作者這樣寫的目的好像是為了抓到 FireFox 實作的語音辨識，但我們其實用下面的寫法就好了\n  ```js\n  window.SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n\n  const recognition = new SpeechRecognition()\n  // 上面可以直接改成這樣 (只適用在 Chrome)\n  const recognition = new webkitSpeechRecognition()\n  ```\n  2. 這個物件比較常用的兩個屬性分別是決定語言還有是否即時辨識\n  ```js\n  const recognition = new SpeechRecognition()\n  recognition.interimResults = true //即時辨識 false 代表講完話才開始辨識\n  recognition.lang = 'en-US';\n  ```\n  3. 語音物件的格式滿複雜的，我們要的東西(文字)藏在 event 的 results 第一個項目的 transcript 中，所以我們先把它轉陣列用 map 方法取出，最後轉成字串\n  `result` 這個 event 只存在 `SpeechRecognition` 物件中，只要有文字被辨識出並回傳到 app 就會觸發這個事件\n  ```js\n  recognition.addEventListener('result', e =>{\n    const transcript = Array.from(e.results)\n      .map(result => result[0])\n      .map(result => result.transcript)\n      .join('')\n  })\n  ```\n  下面這張圖表示 e.results 的格式\n  ![](https://i.imgur.com/1uobHkz.png)\n  參考資料： [SpeechRecognition: result event](https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/result_event)\n\n  4. 用 `isFinal` 這個屬性看這個結果是不是最後回傳值，如果是 false 表示這個結果只是暫時的，還會繼續被更新\n  ```js\n  p.textContent = transcript\n  if(e.results[0].isFinal){\n    p = document.createElement('p')\n    words.appendChild(p)\n  }\n  console.log(transcript)\n  ```\n  參考資料：[SpeechRecognitionResult.isFinal](https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionResult/isFinal)\n  \n  5. 如果單單只有一行 `recognition.start()` ，在聽完一句話就結束了，必須去監聽 `end` 事件\n  `end` 事件是當語音識別物件與語音識別伺服器結束連結時觸發，因此才可以讓監聽的效果一直不間斷\n  ```js\n  recognition.addEventListener('end', recognition.start)\n  recognition.start();\n  ```\n  參考資料： https://ithelp.ithome.com.tw/articles/10196487\n  \n\n  \n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\nHTML:\n```html\n<div class=\"words\" contenteditable></div>\n```\nCSS:\n```css\nhtml {\n  font-size: 10px;\n}\n\nbody {\n  background: #ffc600;\n  font-family: 'helvetica neue';\n  font-weight: 200;\n  font-size: 20px;\n}\n\n.words {\n  max-width: 500px;\n  margin: 50px auto;\n  background: white;\n  border-radius: 5px;\n  box-shadow: 10px 10px 0 rgba(0,0,0,0.1);\n  padding: 1rem 2rem 1rem 5rem;\n  background: -webkit-gradient(linear, 0 0, 0 100%, from(#d9eaf3), color-stop(4%, #fff)) 0 4px;\n  background-size: 100% 3rem;\n  position: relative;\n  line-height: 3rem;\n}\n\np {\n  margin: 0 0 3rem;\n}\n\n.words:before {\n  content: '';\n  position: absolute;\n  width: 4px;\n  top: 0;\n  left: 30px;\n  bottom: 0;\n  border: 1px solid;\n  border-color: transparent #efe4e4;\n}\n```\nJS:\n```js\nwindow.SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n\nconst recognition = new SpeechRecognition()\nrecognition.interimResults = true //即時辨識 false 代表講完話才開始辨識\nrecognition.lang = 'en-US';\n\nlet p = document.createElement('p')\nconst words = document.querySelector('.words')\nwords.appendChild(p)\n\nrecognition.addEventListener('result', e =>{\n  // console.log(e.results);\n  const transcript = Array.from(e.results)\n    .map(result => result[0])\n    .map(result => result.transcript)\n    .join('')\n\n  p.textContent = transcript\n  if(e.results[0].isFinal){\n    p = document.createElement('p')\n    words.appendChild(p)\n  }\n  console.log(transcript)\n})\nrecognition.addEventListener('end', recognition.start)\nrecognition.start();\n```","slug":"2019-11-21-JS30_day20","published":1,"updated":"2019-11-22T07:09:21.868Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0ev6002u2ob1n6nl1qr9","content":"<h1 id=\"js30-day20-speech-recognition\">JS30 day20 - Speech Recognition</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天的作業內容我也覺得很有趣，是語音辨識！把講出來的話直接印在網頁上！<br>\n<img src=\"https://i.imgur.com/jeCyDS0.png\" alt=\"\"></p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li>語音辨識目前似乎只有桌機版的 Chrome 有實作，原作者這樣寫的目的好像是為了抓到 FireFox 實作的語音辨識，但我們其實用下面的寫法就好了</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.SpeechRecognition = <span class=\"built_in\">window</span>.SpeechRecognition || <span class=\"built_in\">window</span>.webkitSpeechRecognition;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> recognition = <span class=\"keyword\">new</span> SpeechRecognition()</span><br><span class=\"line\"><span class=\"comment\">// 上面可以直接改成這樣 (只適用在 Chrome)</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> recognition = <span class=\"keyword\">new</span> webkitSpeechRecognition()</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>這個物件比較常用的兩個屬性分別是決定語言還有是否即時辨識</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> recognition = <span class=\"keyword\">new</span> SpeechRecognition()</span><br><span class=\"line\">recognition.interimResults = <span class=\"literal\">true</span> <span class=\"comment\">//即時辨識 false 代表講完話才開始辨識</span></span><br><span class=\"line\">recognition.lang = <span class=\"string\">'en-US'</span>;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>語音物件的格式滿複雜的，我們要的東西(文字)藏在 event 的 results 第一個項目的 transcript 中，所以我們先把它轉陣列用 map 方法取出，最後轉成字串<br>\n<code>result</code> 這個 event 只存在 <code>SpeechRecognition</code> 物件中，只要有文字被辨識出並回傳到 app 就會觸發這個事件</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">recognition.addEventListener(<span class=\"string\">'result'</span>, e =&gt;&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> transcript = <span class=\"built_in\">Array</span>.from(e.results)</span><br><span class=\"line\">    .map(<span class=\"function\"><span class=\"params\">result</span> =&gt;</span> result[<span class=\"number\">0</span>])</span><br><span class=\"line\">    .map(<span class=\"function\"><span class=\"params\">result</span> =&gt;</span> result.transcript)</span><br><span class=\"line\">    .join(<span class=\"string\">''</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>下面這張圖表示 e.results 的格式<br>\n<img src=\"https://i.imgur.com/1uobHkz.png\" alt=\"\"><br>\n參考資料： <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/result_event\" target=\"_blank\" rel=\"noopener\">SpeechRecognition: result event</a></p>\n<ol start=\"4\">\n<li>用 <code>isFinal</code> 這個屬性看這個結果是不是最後回傳值，如果是 false 表示這個結果只是暫時的，還會繼續被更新</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p.textContent = transcript</span><br><span class=\"line\"><span class=\"keyword\">if</span>(e.results[<span class=\"number\">0</span>].isFinal)&#123;</span><br><span class=\"line\">  p = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'p'</span>)</span><br><span class=\"line\">  words.appendChild(p)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(transcript)</span><br></pre></td></tr></table></figure>\n<p>參考資料：<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionResult/isFinal\" target=\"_blank\" rel=\"noopener\">SpeechRecognitionResult.isFinal</a></p>\n<ol start=\"5\">\n<li>如果單單只有一行 <code>recognition.start()</code> ，在聽完一句話就結束了，必須去監聽 <code>end</code> 事件<br>\n<code>end</code> 事件是當語音識別物件與語音識別伺服器結束連結時觸發，因此才可以讓監聽的效果一直不間斷</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">recognition.addEventListener(<span class=\"string\">'end'</span>, recognition.start)</span><br><span class=\"line\">recognition.start();</span><br></pre></td></tr></table></figure>\n<p>參考資料： <a href=\"https://ithelp.ithome.com.tw/articles/10196487\" target=\"_blank\" rel=\"noopener\">https://ithelp.ithome.com.tw/articles/10196487</a></p>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：<br>\nHTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"words\"</span> <span class=\"attr\">contenteditable</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'helvetica neue'</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">200</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.words</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">10px</span> <span class=\"number\">10px</span> <span class=\"number\">0</span> <span class=\"built_in\">rgba</span>(0,0,0,0.1);</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">1rem</span> <span class=\"number\">2rem</span> <span class=\"number\">1rem</span> <span class=\"number\">5rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">-webkit-gradient</span>(linear, 0 0, 0 100%, from(#d9eaf3), <span class=\"built_in\">color-stop</span>(4%, #fff)) <span class=\"number\">0</span> <span class=\"number\">4px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: <span class=\"number\">100%</span> <span class=\"number\">3rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">3rem</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">3rem</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.words</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">4px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid;</span><br><span class=\"line\">  <span class=\"attribute\">border-color</span>: transparent <span class=\"number\">#efe4e4</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.SpeechRecognition = <span class=\"built_in\">window</span>.SpeechRecognition || <span class=\"built_in\">window</span>.webkitSpeechRecognition;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> recognition = <span class=\"keyword\">new</span> SpeechRecognition()</span><br><span class=\"line\">recognition.interimResults = <span class=\"literal\">true</span> <span class=\"comment\">//即時辨識 false 代表講完話才開始辨識</span></span><br><span class=\"line\">recognition.lang = <span class=\"string\">'en-US'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> p = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'p'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> words = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.words'</span>)</span><br><span class=\"line\">words.appendChild(p)</span><br><span class=\"line\"></span><br><span class=\"line\">recognition.addEventListener(<span class=\"string\">'result'</span>, e =&gt;&#123;</span><br><span class=\"line\">  <span class=\"comment\">// console.log(e.results);</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> transcript = <span class=\"built_in\">Array</span>.from(e.results)</span><br><span class=\"line\">    .map(<span class=\"function\"><span class=\"params\">result</span> =&gt;</span> result[<span class=\"number\">0</span>])</span><br><span class=\"line\">    .map(<span class=\"function\"><span class=\"params\">result</span> =&gt;</span> result.transcript)</span><br><span class=\"line\">    .join(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  p.textContent = transcript</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(e.results[<span class=\"number\">0</span>].isFinal)&#123;</span><br><span class=\"line\">    p = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'p'</span>)</span><br><span class=\"line\">    words.appendChild(p)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(transcript)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">recognition.addEventListener(<span class=\"string\">'end'</span>, recognition.start)</span><br><span class=\"line\">recognition.start();</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day20 - Speech Recognition</h1>\n<h2>作業內容</h2>\n<p>今天的作業內容我也覺得很有趣，是語音辨識！把講出來的話直接印在網頁上！<br>\n<img src=\"https://i.imgur.com/jeCyDS0.png\" alt=\"\"></p>\n<h2>學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li>語音辨識目前似乎只有桌機版的 Chrome 有實作，原作者這樣寫的目的好像是為了抓到 FireFox 實作的語音辨識，但我們其實用下面的寫法就好了</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.SpeechRecognition = <span class=\"built_in\">window</span>.SpeechRecognition || <span class=\"built_in\">window</span>.webkitSpeechRecognition;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> recognition = <span class=\"keyword\">new</span> SpeechRecognition()</span><br><span class=\"line\"><span class=\"comment\">// 上面可以直接改成這樣 (只適用在 Chrome)</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> recognition = <span class=\"keyword\">new</span> webkitSpeechRecognition()</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>這個物件比較常用的兩個屬性分別是決定語言還有是否即時辨識</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> recognition = <span class=\"keyword\">new</span> SpeechRecognition()</span><br><span class=\"line\">recognition.interimResults = <span class=\"literal\">true</span> <span class=\"comment\">//即時辨識 false 代表講完話才開始辨識</span></span><br><span class=\"line\">recognition.lang = <span class=\"string\">'en-US'</span>;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>語音物件的格式滿複雜的，我們要的東西(文字)藏在 event 的 results 第一個項目的 transcript 中，所以我們先把它轉陣列用 map 方法取出，最後轉成字串<br>\n<code>result</code> 這個 event 只存在 <code>SpeechRecognition</code> 物件中，只要有文字被辨識出並回傳到 app 就會觸發這個事件</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">recognition.addEventListener(<span class=\"string\">'result'</span>, e =&gt;&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> transcript = <span class=\"built_in\">Array</span>.from(e.results)</span><br><span class=\"line\">    .map(<span class=\"function\"><span class=\"params\">result</span> =&gt;</span> result[<span class=\"number\">0</span>])</span><br><span class=\"line\">    .map(<span class=\"function\"><span class=\"params\">result</span> =&gt;</span> result.transcript)</span><br><span class=\"line\">    .join(<span class=\"string\">''</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>下面這張圖表示 e.results 的格式<br>\n<img src=\"https://i.imgur.com/1uobHkz.png\" alt=\"\"><br>\n參考資料： <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/result_event\" target=\"_blank\" rel=\"noopener\">SpeechRecognition: result event</a></p>\n<ol start=\"4\">\n<li>用 <code>isFinal</code> 這個屬性看這個結果是不是最後回傳值，如果是 false 表示這個結果只是暫時的，還會繼續被更新</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p.textContent = transcript</span><br><span class=\"line\"><span class=\"keyword\">if</span>(e.results[<span class=\"number\">0</span>].isFinal)&#123;</span><br><span class=\"line\">  p = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'p'</span>)</span><br><span class=\"line\">  words.appendChild(p)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(transcript)</span><br></pre></td></tr></table></figure>\n<p>參考資料：<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionResult/isFinal\" target=\"_blank\" rel=\"noopener\">SpeechRecognitionResult.isFinal</a></p>\n<ol start=\"5\">\n<li>如果單單只有一行 <code>recognition.start()</code> ，在聽完一句話就結束了，必須去監聽 <code>end</code> 事件<br>\n<code>end</code> 事件是當語音識別物件與語音識別伺服器結束連結時觸發，因此才可以讓監聽的效果一直不間斷</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">recognition.addEventListener(<span class=\"string\">'end'</span>, recognition.start)</span><br><span class=\"line\">recognition.start();</span><br></pre></td></tr></table></figure>\n<p>參考資料： <a href=\"https://ithelp.ithome.com.tw/articles/10196487\" target=\"_blank\" rel=\"noopener\">https://ithelp.ithome.com.tw/articles/10196487</a></p>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：<br>\nHTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"words\"</span> <span class=\"attr\">contenteditable</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'helvetica neue'</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">200</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.words</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">10px</span> <span class=\"number\">10px</span> <span class=\"number\">0</span> <span class=\"built_in\">rgba</span>(0,0,0,0.1);</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">1rem</span> <span class=\"number\">2rem</span> <span class=\"number\">1rem</span> <span class=\"number\">5rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">-webkit-gradient</span>(linear, 0 0, 0 100%, from(#d9eaf3), <span class=\"built_in\">color-stop</span>(4%, #fff)) <span class=\"number\">0</span> <span class=\"number\">4px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: <span class=\"number\">100%</span> <span class=\"number\">3rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">3rem</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">3rem</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.words</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">4px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid;</span><br><span class=\"line\">  <span class=\"attribute\">border-color</span>: transparent <span class=\"number\">#efe4e4</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.SpeechRecognition = <span class=\"built_in\">window</span>.SpeechRecognition || <span class=\"built_in\">window</span>.webkitSpeechRecognition;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> recognition = <span class=\"keyword\">new</span> SpeechRecognition()</span><br><span class=\"line\">recognition.interimResults = <span class=\"literal\">true</span> <span class=\"comment\">//即時辨識 false 代表講完話才開始辨識</span></span><br><span class=\"line\">recognition.lang = <span class=\"string\">'en-US'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> p = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'p'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> words = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.words'</span>)</span><br><span class=\"line\">words.appendChild(p)</span><br><span class=\"line\"></span><br><span class=\"line\">recognition.addEventListener(<span class=\"string\">'result'</span>, e =&gt;&#123;</span><br><span class=\"line\">  <span class=\"comment\">// console.log(e.results);</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> transcript = <span class=\"built_in\">Array</span>.from(e.results)</span><br><span class=\"line\">    .map(<span class=\"function\"><span class=\"params\">result</span> =&gt;</span> result[<span class=\"number\">0</span>])</span><br><span class=\"line\">    .map(<span class=\"function\"><span class=\"params\">result</span> =&gt;</span> result.transcript)</span><br><span class=\"line\">    .join(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  p.textContent = transcript</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(e.results[<span class=\"number\">0</span>].isFinal)&#123;</span><br><span class=\"line\">    p = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'p'</span>)</span><br><span class=\"line\">    words.appendChild(p)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(transcript)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">recognition.addEventListener(<span class=\"string\">'end'</span>, recognition.start)</span><br><span class=\"line\">recognition.start();</span><br></pre></td></tr></table></figure>"},{"title":"JS30 day22 Follow Along Links","catalog":true,"toc_nav_num":true,"date":"2019-11-23T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1574360376206-c44b208ffd62?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Javascript"],"updateDate":"2019-11-23T14:26:24.000Z","_content":"# JS30 day22 - Follow Along Links\n\n## 作業內容\n\n為什麼不是繼續寫 21 而是跳到 22 呢？ 因為作業 21 需要哀鳳支援，這可能要稍微去借一下ＸＤ\n今天的內容是要讓網頁的連結被指到的時候，出現白色背景，跟 hover 不同的是這個邊匡會在超連結之間移動！如果不明白我的意思可以看 [CodePen 連結](https://codepen.io/gbvjpsln/pen/VwwNVVP)ＸＤ\n![](https://i.imgur.com/Ykh5j44.jpg)\n\n## 學到什麼\n\n1. `mouseenter` 跟 `mouseover`這兩個事件的差異在於 `mouseenter` 不支援事件冒泡 \n[這個例子可以了解](https://qianlongo.github.io/zepto-analysis/example/event/mouseEnter-mouseOver.html)\n\n2. `getBoundingClientRect()` 可以抓到綁定物件的 DOMRect 物件的長寬高座標等等資訊\n所以我們現在先可以做到右上角的 span 元素長寬高，會隨著我們指到的超連結變換長寬\n![](https://i.imgur.com/Ly42pMF.jpg)\n``` js\nfunction highlightLink(){\n  const linkCoords = this.getBoundingClientRect()\n  highlight.style.width = `${linkCoords.width}px`\n  highlight.style.height = `${linkCoords.height}px`\n}\n```\n\n3. 我們要怎麼移動這個 span 呢？ 我們可以使用下面的方式\n```js\n`highlight.style.transform = `translate(${linkCoords.left}px, ${linkCoords.top}px)`\n```\n所以整個 function 變成下面這樣子\n``` js\nfunction highlightLink(){\n  const linkCoords = this.getBoundingClientRect()\n  highlight.style.width = `${linkCoords.width}px`\n  highlight.style.height = `${linkCoords.height}px`\n  highlight.style.transform = `translate(${linkCoords.left}px, ${linkCoords.top}px)`\n}\n```\n但這會有一個問題，一旦我們捲動螢幕，他的座標會跑掉，像下面這樣\n![](https://i.imgur.com/jSenuY6.jpg)\n這是因為沒有把捲動的座標考慮進來，使用 `window.scrollX` 還有 `window.scrollY` 來得到這個座標\n\n```js\nfunction highlightLink(){\n  const linkCoords = this.getBoundingClientRect()\n  const coords = {\n    width: linkCoords.width,\n    height: linkCoords.height,\n    top: linkCoords.top + window.scrollY,\n    left: linkCoords.left + window.scrollX,\n  } \n\n  highlight.style.width = `${coords.width}px`\n  highlight.style.height = `${coords.height}px`\n  highlight.style.transform = `translate(${coords.left}px, ${coords.top}px)`\n}\n```\n  \n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\nHTML:\n```html\n<nav>\n  <ul class=\"menu\">\n    <li><a href=\"\">Home</a></li>\n    <li><a href=\"\">Order Status</a></li>\n    <li><a href=\"\">Tweets</a></li>\n    <li><a href=\"\">Read Our History</a></li>\n    <li><a href=\"\">Contact Us</a></li>\n  </ul>\n</nav>\n\n<div class=\"wrapper\">\n  <p>Lorem ipsum dolor sit amet, <a href=\"\">consectetur</a> adipisicing elit. Est <a href=\"\">explicabo</a> unde natus necessitatibus esse obcaecati distinctio, aut itaque, qui vitae!</p>\n  <p>Aspernatur sapiente quae sint <a href=\"\">soluta</a> modi, atque praesentium laborum pariatur earum <a href=\"\">quaerat</a> cupiditate consequuntur facilis ullam dignissimos, aperiam quam veniam.</p>\n  <p>Cum ipsam quod, incidunt sit ex <a href=\"\">tempore</a> placeat maxime <a href=\"\">corrupti</a> possimus <a href=\"\">veritatis</a> ipsum fugit recusandae est doloremque? Hic, <a href=\"\">quibusdam</a>, nulla.</p>\n  <p>Esse quibusdam, ad, ducimus cupiditate <a href=\"\">nulla</a>, quae magni odit <a href=\"\">totam</a> ut consequatur eveniet sunt quam provident sapiente dicta neque quod.</p>\n  <p>Aliquam <a href=\"\">dicta</a> sequi culpa fugiat <a href=\"\">consequuntur</a> pariatur optio ad minima, maxime <a href=\"\">odio</a>, distinctio magni impedit tempore enim repellendus <a href=\"\">repudiandae</a> quas!</p>\n</div>\n```\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nbody {\n  min-height: 100vh;\n  margin: 0; /* Important! */\n  font-family: sans-serif;\n  background:\n    linear-gradient(45deg, hsla(340, 100%, 55%, 1) 0%, hsla(340, 100%, 55%, 0) 70%),\n    linear-gradient(135deg, hsla(225, 95%, 50%, 1) 10%, hsla(225, 95%, 50%, 0) 80%),\n    linear-gradient(225deg, hsla(140, 90%, 50%, 1) 10%, hsla(140, 90%, 50%, 0) 80%),\n    linear-gradient(315deg, hsla(35, 95%, 55%, 1) 100%, hsla(35, 95%, 55%, 0) 70%);\n}\n\n.wrapper {\n  margin: 0 auto;\n  max-width: 500px;\n  font-size: 20px;\n  line-height: 2;\n  position: relative;\n}\n\na {\n  text-decoration: none;\n  color: black;\n  background: rgba(0,0,0,0.05);\n  border-radius: 20px;\n}\n\n.highlight {\n  transition: all 0.2s;\n  border-bottom: 2px solid white;\n  position: absolute;\n  top: 0;\n  background: white;\n  left: 0;\n  z-index: -1;\n  border-radius: 20px;\n  display: block;\n  box-shadow: 0 0 10px rgba(0,0,0,0.2);\n}\n\n.menu {\n  padding: 0;\n  display: flex;\n  list-style: none;\n  justify-content: center;\n  margin:100px 0;\n}\n\n.menu a {\n  display: inline-block;\n  padding: 5px;\n  margin: 0 20px;\n  color: black;\n}\n\n```\nJS:\n```js\nconst triggers = document.querySelectorAll('a')\nconst highlight = document.createElement('span')\nhighlight.classList.add('highlight')\ndocument.body.append(highlight)\n\nfunction highlightLink(){\n  const linkCoords = this.getBoundingClientRect()\n  const coords = {\n    width: linkCoords.width,\n    height: linkCoords.height,\n    top: linkCoords.top + window.scrollY,\n    left: linkCoords.left + window.scrollX,\n  } \n\n  highlight.style.width = `${coords.width}px`\n  highlight.style.height = `${coords.height}px`\n  highlight.style.transform = `translate(${coords.left}px, ${coords.top}px)`\n}\n\n\ntriggers.forEach(trigger =>{\n  trigger.addEventListener('mouseenter', highlightLink)\n})\n```","source":"_posts/2019-11-23-JS30_day22.md","raw":"---\ntitle: \"JS30 day22 Follow Along Links\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-23 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1574360376206-c44b208ffd62?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-23 22:26:24\n# top: 1\n\n---\n# JS30 day22 - Follow Along Links\n\n## 作業內容\n\n為什麼不是繼續寫 21 而是跳到 22 呢？ 因為作業 21 需要哀鳳支援，這可能要稍微去借一下ＸＤ\n今天的內容是要讓網頁的連結被指到的時候，出現白色背景，跟 hover 不同的是這個邊匡會在超連結之間移動！如果不明白我的意思可以看 [CodePen 連結](https://codepen.io/gbvjpsln/pen/VwwNVVP)ＸＤ\n![](https://i.imgur.com/Ykh5j44.jpg)\n\n## 學到什麼\n\n1. `mouseenter` 跟 `mouseover`這兩個事件的差異在於 `mouseenter` 不支援事件冒泡 \n[這個例子可以了解](https://qianlongo.github.io/zepto-analysis/example/event/mouseEnter-mouseOver.html)\n\n2. `getBoundingClientRect()` 可以抓到綁定物件的 DOMRect 物件的長寬高座標等等資訊\n所以我們現在先可以做到右上角的 span 元素長寬高，會隨著我們指到的超連結變換長寬\n![](https://i.imgur.com/Ly42pMF.jpg)\n``` js\nfunction highlightLink(){\n  const linkCoords = this.getBoundingClientRect()\n  highlight.style.width = `${linkCoords.width}px`\n  highlight.style.height = `${linkCoords.height}px`\n}\n```\n\n3. 我們要怎麼移動這個 span 呢？ 我們可以使用下面的方式\n```js\n`highlight.style.transform = `translate(${linkCoords.left}px, ${linkCoords.top}px)`\n```\n所以整個 function 變成下面這樣子\n``` js\nfunction highlightLink(){\n  const linkCoords = this.getBoundingClientRect()\n  highlight.style.width = `${linkCoords.width}px`\n  highlight.style.height = `${linkCoords.height}px`\n  highlight.style.transform = `translate(${linkCoords.left}px, ${linkCoords.top}px)`\n}\n```\n但這會有一個問題，一旦我們捲動螢幕，他的座標會跑掉，像下面這樣\n![](https://i.imgur.com/jSenuY6.jpg)\n這是因為沒有把捲動的座標考慮進來，使用 `window.scrollX` 還有 `window.scrollY` 來得到這個座標\n\n```js\nfunction highlightLink(){\n  const linkCoords = this.getBoundingClientRect()\n  const coords = {\n    width: linkCoords.width,\n    height: linkCoords.height,\n    top: linkCoords.top + window.scrollY,\n    left: linkCoords.left + window.scrollX,\n  } \n\n  highlight.style.width = `${coords.width}px`\n  highlight.style.height = `${coords.height}px`\n  highlight.style.transform = `translate(${coords.left}px, ${coords.top}px)`\n}\n```\n  \n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\nHTML:\n```html\n<nav>\n  <ul class=\"menu\">\n    <li><a href=\"\">Home</a></li>\n    <li><a href=\"\">Order Status</a></li>\n    <li><a href=\"\">Tweets</a></li>\n    <li><a href=\"\">Read Our History</a></li>\n    <li><a href=\"\">Contact Us</a></li>\n  </ul>\n</nav>\n\n<div class=\"wrapper\">\n  <p>Lorem ipsum dolor sit amet, <a href=\"\">consectetur</a> adipisicing elit. Est <a href=\"\">explicabo</a> unde natus necessitatibus esse obcaecati distinctio, aut itaque, qui vitae!</p>\n  <p>Aspernatur sapiente quae sint <a href=\"\">soluta</a> modi, atque praesentium laborum pariatur earum <a href=\"\">quaerat</a> cupiditate consequuntur facilis ullam dignissimos, aperiam quam veniam.</p>\n  <p>Cum ipsam quod, incidunt sit ex <a href=\"\">tempore</a> placeat maxime <a href=\"\">corrupti</a> possimus <a href=\"\">veritatis</a> ipsum fugit recusandae est doloremque? Hic, <a href=\"\">quibusdam</a>, nulla.</p>\n  <p>Esse quibusdam, ad, ducimus cupiditate <a href=\"\">nulla</a>, quae magni odit <a href=\"\">totam</a> ut consequatur eveniet sunt quam provident sapiente dicta neque quod.</p>\n  <p>Aliquam <a href=\"\">dicta</a> sequi culpa fugiat <a href=\"\">consequuntur</a> pariatur optio ad minima, maxime <a href=\"\">odio</a>, distinctio magni impedit tempore enim repellendus <a href=\"\">repudiandae</a> quas!</p>\n</div>\n```\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nbody {\n  min-height: 100vh;\n  margin: 0; /* Important! */\n  font-family: sans-serif;\n  background:\n    linear-gradient(45deg, hsla(340, 100%, 55%, 1) 0%, hsla(340, 100%, 55%, 0) 70%),\n    linear-gradient(135deg, hsla(225, 95%, 50%, 1) 10%, hsla(225, 95%, 50%, 0) 80%),\n    linear-gradient(225deg, hsla(140, 90%, 50%, 1) 10%, hsla(140, 90%, 50%, 0) 80%),\n    linear-gradient(315deg, hsla(35, 95%, 55%, 1) 100%, hsla(35, 95%, 55%, 0) 70%);\n}\n\n.wrapper {\n  margin: 0 auto;\n  max-width: 500px;\n  font-size: 20px;\n  line-height: 2;\n  position: relative;\n}\n\na {\n  text-decoration: none;\n  color: black;\n  background: rgba(0,0,0,0.05);\n  border-radius: 20px;\n}\n\n.highlight {\n  transition: all 0.2s;\n  border-bottom: 2px solid white;\n  position: absolute;\n  top: 0;\n  background: white;\n  left: 0;\n  z-index: -1;\n  border-radius: 20px;\n  display: block;\n  box-shadow: 0 0 10px rgba(0,0,0,0.2);\n}\n\n.menu {\n  padding: 0;\n  display: flex;\n  list-style: none;\n  justify-content: center;\n  margin:100px 0;\n}\n\n.menu a {\n  display: inline-block;\n  padding: 5px;\n  margin: 0 20px;\n  color: black;\n}\n\n```\nJS:\n```js\nconst triggers = document.querySelectorAll('a')\nconst highlight = document.createElement('span')\nhighlight.classList.add('highlight')\ndocument.body.append(highlight)\n\nfunction highlightLink(){\n  const linkCoords = this.getBoundingClientRect()\n  const coords = {\n    width: linkCoords.width,\n    height: linkCoords.height,\n    top: linkCoords.top + window.scrollY,\n    left: linkCoords.left + window.scrollX,\n  } \n\n  highlight.style.width = `${coords.width}px`\n  highlight.style.height = `${coords.height}px`\n  highlight.style.transform = `translate(${coords.left}px, ${coords.top}px)`\n}\n\n\ntriggers.forEach(trigger =>{\n  trigger.addEventListener('mouseenter', highlightLink)\n})\n```","slug":"2019-11-23-JS30_day22","published":1,"updated":"2019-11-23T07:16:34.379Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0ev6002w2ob1zts06vsx","content":"<h1 id=\"js30-day22-follow-along-links\">JS30 day22 - Follow Along Links</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>為什麼不是繼續寫 21 而是跳到 22 呢？ 因為作業 21 需要哀鳳支援，這可能要稍微去借一下ＸＤ<br>\n今天的內容是要讓網頁的連結被指到的時候，出現白色背景，跟 hover 不同的是這個邊匡會在超連結之間移動！如果不明白我的意思可以看 <a href=\"https://codepen.io/gbvjpsln/pen/VwwNVVP\" target=\"_blank\" rel=\"noopener\">CodePen 連結</a>ＸＤ<br>\n<img src=\"https://i.imgur.com/Ykh5j44.jpg\" alt=\"\"></p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<ol>\n<li>\n<p><code>mouseenter</code> 跟 <code>mouseover</code>這兩個事件的差異在於 <code>mouseenter</code> 不支援事件冒泡<br>\n<a href=\"https://qianlongo.github.io/zepto-analysis/example/event/mouseEnter-mouseOver.html\" target=\"_blank\" rel=\"noopener\">這個例子可以了解</a></p>\n</li>\n<li>\n<p><code>getBoundingClientRect()</code> 可以抓到綁定物件的 DOMRect 物件的長寬高座標等等資訊<br>\n所以我們現在先可以做到右上角的 span 元素長寬高，會隨著我們指到的超連結變換長寬<br>\n<img src=\"https://i.imgur.com/Ly42pMF.jpg\" alt=\"\"></p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">highlightLink</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> linkCoords = <span class=\"keyword\">this</span>.getBoundingClientRect()</span><br><span class=\"line\">  highlight.style.width = <span class=\"string\">`<span class=\"subst\">$&#123;linkCoords.width&#125;</span>px`</span></span><br><span class=\"line\">  highlight.style.height = <span class=\"string\">`<span class=\"subst\">$&#123;linkCoords.height&#125;</span>px`</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>我們要怎麼移動這個 span 呢？ 我們可以使用下面的方式</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">`highlight.style.transform = `</span>translate($&#123;linkCoords.left&#125;px, $&#123;linkCoords.top&#125;px)<span class=\"string\">`</span></span><br></pre></td></tr></table></figure>\n<p>所以整個 function 變成下面這樣子</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">highlightLink</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> linkCoords = <span class=\"keyword\">this</span>.getBoundingClientRect()</span><br><span class=\"line\">  highlight.style.width = <span class=\"string\">`<span class=\"subst\">$&#123;linkCoords.width&#125;</span>px`</span></span><br><span class=\"line\">  highlight.style.height = <span class=\"string\">`<span class=\"subst\">$&#123;linkCoords.height&#125;</span>px`</span></span><br><span class=\"line\">  highlight.style.transform = <span class=\"string\">`translate(<span class=\"subst\">$&#123;linkCoords.left&#125;</span>px, <span class=\"subst\">$&#123;linkCoords.top&#125;</span>px)`</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>但這會有一個問題，一旦我們捲動螢幕，他的座標會跑掉，像下面這樣<br>\n<img src=\"https://i.imgur.com/jSenuY6.jpg\" alt=\"\"><br>\n這是因為沒有把捲動的座標考慮進來，使用 <code>window.scrollX</code> 還有 <code>window.scrollY</code> 來得到這個座標</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">highlightLink</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> linkCoords = <span class=\"keyword\">this</span>.getBoundingClientRect()</span><br><span class=\"line\">  <span class=\"keyword\">const</span> coords = &#123;</span><br><span class=\"line\">    width: linkCoords.width,</span><br><span class=\"line\">    height: linkCoords.height,</span><br><span class=\"line\">    top: linkCoords.top + <span class=\"built_in\">window</span>.scrollY,</span><br><span class=\"line\">    left: linkCoords.left + <span class=\"built_in\">window</span>.scrollX,</span><br><span class=\"line\">  &#125; </span><br><span class=\"line\"></span><br><span class=\"line\">  highlight.style.width = <span class=\"string\">`<span class=\"subst\">$&#123;coords.width&#125;</span>px`</span></span><br><span class=\"line\">  highlight.style.height = <span class=\"string\">`<span class=\"subst\">$&#123;coords.height&#125;</span>px`</span></span><br><span class=\"line\">  highlight.style.transform = <span class=\"string\">`translate(<span class=\"subst\">$&#123;coords.left&#125;</span>px, <span class=\"subst\">$&#123;coords.top&#125;</span>px)`</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：<br>\nHTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>Order Status<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>Tweets<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>Read Our History<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>Contact Us<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrapper\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Lorem ipsum dolor sit amet, <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>consectetur<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> adipisicing elit. Est <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>explicabo<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> unde natus necessitatibus esse obcaecati distinctio, aut itaque, qui vitae!<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Aspernatur sapiente quae sint <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>soluta<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> modi, atque praesentium laborum pariatur earum <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>quaerat<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> cupiditate consequuntur facilis ullam dignissimos, aperiam quam veniam.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Cum ipsam quod, incidunt sit ex <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>tempore<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> placeat maxime <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>corrupti<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> possimus <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>veritatis<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> ipsum fugit recusandae est doloremque? Hic, <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>quibusdam<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>, nulla.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Esse quibusdam, ad, ducimus cupiditate <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>nulla<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>, quae magni odit <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>totam<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> ut consequatur eveniet sunt quam provident sapiente dicta neque quod.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Aliquam <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>dicta<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> sequi culpa fugiat <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>consequuntur<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> pariatur optio ad minima, maxime <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>odio<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>, distinctio magni impedit tempore enim repellendus <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>repudiandae<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> quas!<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>; <span class=\"comment\">/* Important! */</span></span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>:</span><br><span class=\"line\">    <span class=\"built_in\">linear-gradient</span>(45deg, hsla(340, 100%, 55%, 1) <span class=\"number\">0%</span>, <span class=\"built_in\">hsla</span>(340, 100%, 55%, 0) <span class=\"number\">70%</span>),</span><br><span class=\"line\">    <span class=\"built_in\">linear-gradient</span>(135deg, hsla(225, 95%, 50%, 1) <span class=\"number\">10%</span>, <span class=\"built_in\">hsla</span>(225, 95%, 50%, 0) <span class=\"number\">80%</span>),</span><br><span class=\"line\">    <span class=\"built_in\">linear-gradient</span>(225deg, hsla(140, 90%, 50%, 1) <span class=\"number\">10%</span>, <span class=\"built_in\">hsla</span>(140, 90%, 50%, 0) <span class=\"number\">80%</span>),</span><br><span class=\"line\">    <span class=\"built_in\">linear-gradient</span>(315deg, hsla(35, 95%, 55%, 1) <span class=\"number\">100%</span>, <span class=\"built_in\">hsla</span>(35, 95%, 55%, 0) <span class=\"number\">70%</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.wrapper</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(0,0,0,0.05);</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.highlight</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.2s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">2px</span> solid white;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: -<span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"built_in\">rgba</span>(0,0,0,0.2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>:<span class=\"number\">100px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> triggers = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'a'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> highlight = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'span'</span>)</span><br><span class=\"line\">highlight.classList.add(<span class=\"string\">'highlight'</span>)</span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.append(highlight)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">highlightLink</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> linkCoords = <span class=\"keyword\">this</span>.getBoundingClientRect()</span><br><span class=\"line\">  <span class=\"keyword\">const</span> coords = &#123;</span><br><span class=\"line\">    width: linkCoords.width,</span><br><span class=\"line\">    height: linkCoords.height,</span><br><span class=\"line\">    top: linkCoords.top + <span class=\"built_in\">window</span>.scrollY,</span><br><span class=\"line\">    left: linkCoords.left + <span class=\"built_in\">window</span>.scrollX,</span><br><span class=\"line\">  &#125; </span><br><span class=\"line\"></span><br><span class=\"line\">  highlight.style.width = <span class=\"string\">`<span class=\"subst\">$&#123;coords.width&#125;</span>px`</span></span><br><span class=\"line\">  highlight.style.height = <span class=\"string\">`<span class=\"subst\">$&#123;coords.height&#125;</span>px`</span></span><br><span class=\"line\">  highlight.style.transform = <span class=\"string\">`translate(<span class=\"subst\">$&#123;coords.left&#125;</span>px, <span class=\"subst\">$&#123;coords.top&#125;</span>px)`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">triggers.forEach(<span class=\"function\"><span class=\"params\">trigger</span> =&gt;</span>&#123;</span><br><span class=\"line\">  trigger.addEventListener(<span class=\"string\">'mouseenter'</span>, highlightLink)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day22 - Follow Along Links</h1>\n<h2>作業內容</h2>\n<p>為什麼不是繼續寫 21 而是跳到 22 呢？ 因為作業 21 需要哀鳳支援，這可能要稍微去借一下ＸＤ<br>\n今天的內容是要讓網頁的連結被指到的時候，出現白色背景，跟 hover 不同的是這個邊匡會在超連結之間移動！如果不明白我的意思可以看 <a href=\"https://codepen.io/gbvjpsln/pen/VwwNVVP\" target=\"_blank\" rel=\"noopener\">CodePen 連結</a>ＸＤ<br>\n<img src=\"https://i.imgur.com/Ykh5j44.jpg\" alt=\"\"></p>\n<h2>學到什麼</h2>\n<ol>\n<li>\n<p><code>mouseenter</code> 跟 <code>mouseover</code>這兩個事件的差異在於 <code>mouseenter</code> 不支援事件冒泡<br>\n<a href=\"https://qianlongo.github.io/zepto-analysis/example/event/mouseEnter-mouseOver.html\" target=\"_blank\" rel=\"noopener\">這個例子可以了解</a></p>\n</li>\n<li>\n<p><code>getBoundingClientRect()</code> 可以抓到綁定物件的 DOMRect 物件的長寬高座標等等資訊<br>\n所以我們現在先可以做到右上角的 span 元素長寬高，會隨著我們指到的超連結變換長寬<br>\n<img src=\"https://i.imgur.com/Ly42pMF.jpg\" alt=\"\"></p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">highlightLink</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> linkCoords = <span class=\"keyword\">this</span>.getBoundingClientRect()</span><br><span class=\"line\">  highlight.style.width = <span class=\"string\">`<span class=\"subst\">$&#123;linkCoords.width&#125;</span>px`</span></span><br><span class=\"line\">  highlight.style.height = <span class=\"string\">`<span class=\"subst\">$&#123;linkCoords.height&#125;</span>px`</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>我們要怎麼移動這個 span 呢？ 我們可以使用下面的方式</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">`highlight.style.transform = `</span>translate($&#123;linkCoords.left&#125;px, $&#123;linkCoords.top&#125;px)<span class=\"string\">`</span></span><br></pre></td></tr></table></figure>\n<p>所以整個 function 變成下面這樣子</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">highlightLink</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> linkCoords = <span class=\"keyword\">this</span>.getBoundingClientRect()</span><br><span class=\"line\">  highlight.style.width = <span class=\"string\">`<span class=\"subst\">$&#123;linkCoords.width&#125;</span>px`</span></span><br><span class=\"line\">  highlight.style.height = <span class=\"string\">`<span class=\"subst\">$&#123;linkCoords.height&#125;</span>px`</span></span><br><span class=\"line\">  highlight.style.transform = <span class=\"string\">`translate(<span class=\"subst\">$&#123;linkCoords.left&#125;</span>px, <span class=\"subst\">$&#123;linkCoords.top&#125;</span>px)`</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>但這會有一個問題，一旦我們捲動螢幕，他的座標會跑掉，像下面這樣<br>\n<img src=\"https://i.imgur.com/jSenuY6.jpg\" alt=\"\"><br>\n這是因為沒有把捲動的座標考慮進來，使用 <code>window.scrollX</code> 還有 <code>window.scrollY</code> 來得到這個座標</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">highlightLink</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> linkCoords = <span class=\"keyword\">this</span>.getBoundingClientRect()</span><br><span class=\"line\">  <span class=\"keyword\">const</span> coords = &#123;</span><br><span class=\"line\">    width: linkCoords.width,</span><br><span class=\"line\">    height: linkCoords.height,</span><br><span class=\"line\">    top: linkCoords.top + <span class=\"built_in\">window</span>.scrollY,</span><br><span class=\"line\">    left: linkCoords.left + <span class=\"built_in\">window</span>.scrollX,</span><br><span class=\"line\">  &#125; </span><br><span class=\"line\"></span><br><span class=\"line\">  highlight.style.width = <span class=\"string\">`<span class=\"subst\">$&#123;coords.width&#125;</span>px`</span></span><br><span class=\"line\">  highlight.style.height = <span class=\"string\">`<span class=\"subst\">$&#123;coords.height&#125;</span>px`</span></span><br><span class=\"line\">  highlight.style.transform = <span class=\"string\">`translate(<span class=\"subst\">$&#123;coords.left&#125;</span>px, <span class=\"subst\">$&#123;coords.top&#125;</span>px)`</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：<br>\nHTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>Order Status<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>Tweets<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>Read Our History<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>Contact Us<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrapper\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Lorem ipsum dolor sit amet, <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>consectetur<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> adipisicing elit. Est <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>explicabo<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> unde natus necessitatibus esse obcaecati distinctio, aut itaque, qui vitae!<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Aspernatur sapiente quae sint <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>soluta<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> modi, atque praesentium laborum pariatur earum <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>quaerat<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> cupiditate consequuntur facilis ullam dignissimos, aperiam quam veniam.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Cum ipsam quod, incidunt sit ex <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>tempore<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> placeat maxime <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>corrupti<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> possimus <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>veritatis<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> ipsum fugit recusandae est doloremque? Hic, <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>quibusdam<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>, nulla.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Esse quibusdam, ad, ducimus cupiditate <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>nulla<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>, quae magni odit <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>totam<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> ut consequatur eveniet sunt quam provident sapiente dicta neque quod.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Aliquam <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>dicta<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> sequi culpa fugiat <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>consequuntur<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> pariatur optio ad minima, maxime <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>odio<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>, distinctio magni impedit tempore enim repellendus <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>repudiandae<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> quas!<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>; <span class=\"comment\">/* Important! */</span></span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>:</span><br><span class=\"line\">    <span class=\"built_in\">linear-gradient</span>(45deg, hsla(340, 100%, 55%, 1) <span class=\"number\">0%</span>, <span class=\"built_in\">hsla</span>(340, 100%, 55%, 0) <span class=\"number\">70%</span>),</span><br><span class=\"line\">    <span class=\"built_in\">linear-gradient</span>(135deg, hsla(225, 95%, 50%, 1) <span class=\"number\">10%</span>, <span class=\"built_in\">hsla</span>(225, 95%, 50%, 0) <span class=\"number\">80%</span>),</span><br><span class=\"line\">    <span class=\"built_in\">linear-gradient</span>(225deg, hsla(140, 90%, 50%, 1) <span class=\"number\">10%</span>, <span class=\"built_in\">hsla</span>(140, 90%, 50%, 0) <span class=\"number\">80%</span>),</span><br><span class=\"line\">    <span class=\"built_in\">linear-gradient</span>(315deg, hsla(35, 95%, 55%, 1) <span class=\"number\">100%</span>, <span class=\"built_in\">hsla</span>(35, 95%, 55%, 0) <span class=\"number\">70%</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.wrapper</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(0,0,0,0.05);</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.highlight</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.2s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">2px</span> solid white;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: -<span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"built_in\">rgba</span>(0,0,0,0.2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>:<span class=\"number\">100px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> triggers = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'a'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> highlight = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'span'</span>)</span><br><span class=\"line\">highlight.classList.add(<span class=\"string\">'highlight'</span>)</span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.append(highlight)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">highlightLink</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> linkCoords = <span class=\"keyword\">this</span>.getBoundingClientRect()</span><br><span class=\"line\">  <span class=\"keyword\">const</span> coords = &#123;</span><br><span class=\"line\">    width: linkCoords.width,</span><br><span class=\"line\">    height: linkCoords.height,</span><br><span class=\"line\">    top: linkCoords.top + <span class=\"built_in\">window</span>.scrollY,</span><br><span class=\"line\">    left: linkCoords.left + <span class=\"built_in\">window</span>.scrollX,</span><br><span class=\"line\">  &#125; </span><br><span class=\"line\"></span><br><span class=\"line\">  highlight.style.width = <span class=\"string\">`<span class=\"subst\">$&#123;coords.width&#125;</span>px`</span></span><br><span class=\"line\">  highlight.style.height = <span class=\"string\">`<span class=\"subst\">$&#123;coords.height&#125;</span>px`</span></span><br><span class=\"line\">  highlight.style.transform = <span class=\"string\">`translate(<span class=\"subst\">$&#123;coords.left&#125;</span>px, <span class=\"subst\">$&#123;coords.top&#125;</span>px)`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">triggers.forEach(<span class=\"function\"><span class=\"params\">trigger</span> =&gt;</span>&#123;</span><br><span class=\"line\">  trigger.addEventListener(<span class=\"string\">'mouseenter'</span>, highlightLink)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>"},{"title":"JS30 day24 Sticky Nav","catalog":true,"toc_nav_num":true,"date":"2019-11-25T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1557804950-27e280a8121c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Javascript"],"updateDate":"2019-11-25T14:26:24.000Z","_content":"# JS30 day24 - Sticky Nav\n\n## 作業內容\n\n今天的作業相較之下簡單多了，但還滿實用的！就是頁面往下滑動，碰到導覽列之後導覽列會繼續往下滑動不會消失\n可以參考這份[CodePen](https://codepen.io/gbvjpsln/pen/zYYQERR)的效果\n一開始是這樣：\n![](https://i.imgur.com/2Z42QXN.jpg)\n往下滑會變成這樣：\n![](https://i.imgur.com/cJbXlKJ.png)\n## 學到什麼\n\n- CSS\n  1. 一般直覺上會想要在產生效果的時候，如果要做的是固定 navbar，會直接在 navbar 上面加上 class，但他比較特別的是把 body 本身加上 `fixed-nav` 的 class，這樣一來其他要產生效果的地方，比方說 logo 跟 文章本體就不用在另外加上 class 是個比較好的做法\n  ```css\n  .fixed-nav nav{\n    position: fixed;\n    box-shadow: 0 5px rgba(0,0,0,0.1)\n  }\n  .fixed-nav li.logo{\n    max-width: 500px;\n  }\n  .fixed-nav .site-wrap{\n    transform: scale(1);\n  }\n  ```\n- JS\n  1. 這次在 JS 上面的程式碼倒是很簡單，主要在於細節的部分，像是在 nav 變成 fixed 的當下，文章會往上跳，因為 fixed 物件是不佔空間的，文章會往上跳 nav 的高度的空間，所以我們必須當下把他加回來\n  ```js\n  function fixNav(){\n    if (window.scrollY >= topOfNav){\n      document.body.classList.add('fixed-nav')\n      document.body.style.paddingTop = `${nav.offsetHeight}px`\n    }else{\n      document.body.classList.remove('fixed-nav')\n      document.body.style.paddingTop = 0\n    }\n  }\n  ```\n  \n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\n## code 內容：\nHTML:\n```html\n  <header>\n    <h1>A story about getting lost.</h1>\n  </header>\n\n  <nav id=\"main\">\n    <ul>\n      <li class=\"logo\"><a href=\"#\">LOST.</a></li>\n      <li><a href=\"#\">Home</a></li>\n      <li><a href=\"#\">About</a></li>\n      <li><a href=\"#\">Images</a></li>\n      <li><a href=\"#\">Locations</a></li>\n      <li><a href=\"#\">Maps</a></li>\n    </ul>\n  </nav>\n\n  <div class=\"site-wrap\">\n    <p> ... </p>\n  </div>\n```\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n  background: #eeeeee;\n  font-family: 'helvetica neue';\n  font-size: 20px;\n  font-weight: 200;\n}\n\nbody {\n  margin: 0;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\n.site-wrap {\n  max-width: 700px;\n  margin: 70px auto;\n  background: white;\n  padding: 40px;\n  text-align: justify;\n  box-shadow: 0 0 10px 5px rgba(0, 0, 0, 0.05);\n  transform: scale(0.98);\n  transition: transform 0.5s;\n}\n\n.fixed-nav .site-wrap{\n  transform: scale(1);\n}\n\nheader {\n  text-align: center;\n  height: 50vh;\n  background: url(http://wes.io/iEgP/wow-so-deep.jpg) bottom center no-repeat;\n  background-size: cover;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\nh1 {\n  color: white;\n  font-size: 7vw;\n  text-shadow: 3px 4px 0 rgba(0,0,0,0.2);\n}\n\nnav {\n  background: black;\n  top: 0;\n  width: 100%;\n  transition: all 0.5s;\n  position: relative;\n  z-index: 1;\n}\n\n.fixed-nav nav{\n  position: fixed;\n  box-shadow: 0 5px rgba(0,0,0,0.1)\n}\n\nnav ul {\n  margin: 0;\n  padding:0;\n  list-style: none;\n  display: flex;\n}\n\nnav li {\n  flex: 1;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nli.logo {\n  max-width: 0;\n  overflow: hidden;\n  background: white;\n  transition: all .5s;\n  font-weight: 600;\n  font-size: 30px;\n}\n\n.fixed-nav li.logo{\n  max-width: 500px;\n}\n\nli.logo a {\n  color: black;\n}\n\nnav a {\n  text-decoration: none;\n  padding: 20px;\n  display: inline-block;\n  color: white;\n  transition: all 0.2s;\n  text-transform: uppercase;\n}\n\n```\nJS:\n```js\n  const nav = document.querySelector('#main')\n  const topOfNav = nav.offsetTop\n\n  function fixNav(){\n    if (window.scrollY >= topOfNav){\n      document.body.classList.add('fixed-nav')\n      document.body.style.paddingTop = `${nav.offsetHeight}px`\n    }else{\n      document.body.classList.remove('fixed-nav')\n      document.body.style.paddingTop = 0\n    }\n  }\n  window.addEventListener('scroll', fixNav)\n```","source":"_posts/2019-11-25-JS30_day24.md","raw":"---\ntitle: \"JS30 day24 Sticky Nav\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-25 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1557804950-27e280a8121c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-25 22:26:24\n# top: 1\n\n---\n# JS30 day24 - Sticky Nav\n\n## 作業內容\n\n今天的作業相較之下簡單多了，但還滿實用的！就是頁面往下滑動，碰到導覽列之後導覽列會繼續往下滑動不會消失\n可以參考這份[CodePen](https://codepen.io/gbvjpsln/pen/zYYQERR)的效果\n一開始是這樣：\n![](https://i.imgur.com/2Z42QXN.jpg)\n往下滑會變成這樣：\n![](https://i.imgur.com/cJbXlKJ.png)\n## 學到什麼\n\n- CSS\n  1. 一般直覺上會想要在產生效果的時候，如果要做的是固定 navbar，會直接在 navbar 上面加上 class，但他比較特別的是把 body 本身加上 `fixed-nav` 的 class，這樣一來其他要產生效果的地方，比方說 logo 跟 文章本體就不用在另外加上 class 是個比較好的做法\n  ```css\n  .fixed-nav nav{\n    position: fixed;\n    box-shadow: 0 5px rgba(0,0,0,0.1)\n  }\n  .fixed-nav li.logo{\n    max-width: 500px;\n  }\n  .fixed-nav .site-wrap{\n    transform: scale(1);\n  }\n  ```\n- JS\n  1. 這次在 JS 上面的程式碼倒是很簡單，主要在於細節的部分，像是在 nav 變成 fixed 的當下，文章會往上跳，因為 fixed 物件是不佔空間的，文章會往上跳 nav 的高度的空間，所以我們必須當下把他加回來\n  ```js\n  function fixNav(){\n    if (window.scrollY >= topOfNav){\n      document.body.classList.add('fixed-nav')\n      document.body.style.paddingTop = `${nav.offsetHeight}px`\n    }else{\n      document.body.classList.remove('fixed-nav')\n      document.body.style.paddingTop = 0\n    }\n  }\n  ```\n  \n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\n## code 內容：\nHTML:\n```html\n  <header>\n    <h1>A story about getting lost.</h1>\n  </header>\n\n  <nav id=\"main\">\n    <ul>\n      <li class=\"logo\"><a href=\"#\">LOST.</a></li>\n      <li><a href=\"#\">Home</a></li>\n      <li><a href=\"#\">About</a></li>\n      <li><a href=\"#\">Images</a></li>\n      <li><a href=\"#\">Locations</a></li>\n      <li><a href=\"#\">Maps</a></li>\n    </ul>\n  </nav>\n\n  <div class=\"site-wrap\">\n    <p> ... </p>\n  </div>\n```\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n  background: #eeeeee;\n  font-family: 'helvetica neue';\n  font-size: 20px;\n  font-weight: 200;\n}\n\nbody {\n  margin: 0;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\n.site-wrap {\n  max-width: 700px;\n  margin: 70px auto;\n  background: white;\n  padding: 40px;\n  text-align: justify;\n  box-shadow: 0 0 10px 5px rgba(0, 0, 0, 0.05);\n  transform: scale(0.98);\n  transition: transform 0.5s;\n}\n\n.fixed-nav .site-wrap{\n  transform: scale(1);\n}\n\nheader {\n  text-align: center;\n  height: 50vh;\n  background: url(http://wes.io/iEgP/wow-so-deep.jpg) bottom center no-repeat;\n  background-size: cover;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\nh1 {\n  color: white;\n  font-size: 7vw;\n  text-shadow: 3px 4px 0 rgba(0,0,0,0.2);\n}\n\nnav {\n  background: black;\n  top: 0;\n  width: 100%;\n  transition: all 0.5s;\n  position: relative;\n  z-index: 1;\n}\n\n.fixed-nav nav{\n  position: fixed;\n  box-shadow: 0 5px rgba(0,0,0,0.1)\n}\n\nnav ul {\n  margin: 0;\n  padding:0;\n  list-style: none;\n  display: flex;\n}\n\nnav li {\n  flex: 1;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nli.logo {\n  max-width: 0;\n  overflow: hidden;\n  background: white;\n  transition: all .5s;\n  font-weight: 600;\n  font-size: 30px;\n}\n\n.fixed-nav li.logo{\n  max-width: 500px;\n}\n\nli.logo a {\n  color: black;\n}\n\nnav a {\n  text-decoration: none;\n  padding: 20px;\n  display: inline-block;\n  color: white;\n  transition: all 0.2s;\n  text-transform: uppercase;\n}\n\n```\nJS:\n```js\n  const nav = document.querySelector('#main')\n  const topOfNav = nav.offsetTop\n\n  function fixNav(){\n    if (window.scrollY >= topOfNav){\n      document.body.classList.add('fixed-nav')\n      document.body.style.paddingTop = `${nav.offsetHeight}px`\n    }else{\n      document.body.classList.remove('fixed-nav')\n      document.body.style.paddingTop = 0\n    }\n  }\n  window.addEventListener('scroll', fixNav)\n```","slug":"2019-11-25-JS30_day24","published":1,"updated":"2019-11-25T03:52:52.984Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0ev7002y2ob1r06stdpl","content":"<h1 id=\"js30-day24-sticky-nav\">JS30 day24 - Sticky Nav</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天的作業相較之下簡單多了，但還滿實用的！就是頁面往下滑動，碰到導覽列之後導覽列會繼續往下滑動不會消失<br>\n可以參考這份<a href=\"https://codepen.io/gbvjpsln/pen/zYYQERR\" target=\"_blank\" rel=\"noopener\">CodePen</a>的效果<br>\n一開始是這樣：<br>\n<img src=\"https://i.imgur.com/2Z42QXN.jpg\" alt=\"\"><br>\n往下滑會變成這樣：<br>\n<img src=\"https://i.imgur.com/cJbXlKJ.png\" alt=\"\"></p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<ul>\n<li>\n<p>CSS</p>\n<ol>\n<li>一般直覺上會想要在產生效果的時候，如果要做的是固定 navbar，會直接在 navbar 上面加上 class，但他比較特別的是把 body 本身加上 <code>fixed-nav</code> 的 class，這樣一來其他要產生效果的地方，比方說 logo 跟 文章本體就不用在另外加上 class 是個比較好的做法</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.fixed-nav</span> <span class=\"selector-tag\">nav</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"built_in\">rgba</span>(0,0,0,0.1)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.fixed-nav</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.logo</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.fixed-nav</span> <span class=\"selector-class\">.site-wrap</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">scale</span>(1);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>JS</p>\n<ol>\n<li>這次在 JS 上面的程式碼倒是很簡單，主要在於細節的部分，像是在 nav 變成 fixed 的當下，文章會往上跳，因為 fixed 物件是不佔空間的，文章會往上跳 nav 的高度的空間，所以我們必須當下把他加回來</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fixNav</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.scrollY &gt;= topOfNav)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.classList.add(<span class=\"string\">'fixed-nav'</span>)</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.style.paddingTop = <span class=\"string\">`<span class=\"subst\">$&#123;nav.offsetHeight&#125;</span>px`</span></span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.classList.remove(<span class=\"string\">'fixed-nav'</span>)</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.style.paddingTop = <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<h2 id=\"code-內容\">code 內容：</h2>\n<p>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>A story about getting lost.<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">id</span>=<span class=\"string\">\"main\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>LOST.<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>About<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>Images<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>Locations<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>Maps<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"site-wrap\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> ... <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#eeeeee</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'helvetica neue'</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">200</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.site-wrap</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">700px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">70px</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: justify;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"number\">5px</span> <span class=\"built_in\">rgba</span>(0, 0, 0, 0.05);</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">scale</span>(0.98);</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: transform <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.fixed-nav</span> <span class=\"selector-class\">.site-wrap</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">scale</span>(1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">header</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">50vh</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(http://wes.io/iEgP/wow-so-deep.jpg) bottom center no-repeat;</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: cover;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">7vw</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-shadow</span>: <span class=\"number\">3px</span> <span class=\"number\">4px</span> <span class=\"number\">0</span> <span class=\"built_in\">rgba</span>(0,0,0,0.2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">nav</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: black;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.fixed-nav</span> <span class=\"selector-tag\">nav</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"built_in\">rgba</span>(0,0,0,0.1)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">li</span><span class=\"selector-class\">.logo</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all .<span class=\"number\">5s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.fixed-nav</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.logo</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">li</span><span class=\"selector-class\">.logo</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.2s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-transform</span>: uppercase;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> nav = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#main'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> topOfNav = nav.offsetTop</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fixNav</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.scrollY &gt;= topOfNav)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.classList.add(<span class=\"string\">'fixed-nav'</span>)</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.style.paddingTop = <span class=\"string\">`<span class=\"subst\">$&#123;nav.offsetHeight&#125;</span>px`</span></span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.classList.remove(<span class=\"string\">'fixed-nav'</span>)</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.style.paddingTop = <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'scroll'</span>, fixNav)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day24 - Sticky Nav</h1>\n<h2>作業內容</h2>\n<p>今天的作業相較之下簡單多了，但還滿實用的！就是頁面往下滑動，碰到導覽列之後導覽列會繼續往下滑動不會消失<br>\n可以參考這份<a href=\"https://codepen.io/gbvjpsln/pen/zYYQERR\" target=\"_blank\" rel=\"noopener\">CodePen</a>的效果<br>\n一開始是這樣：<br>\n<img src=\"https://i.imgur.com/2Z42QXN.jpg\" alt=\"\"><br>\n往下滑會變成這樣：<br>\n<img src=\"https://i.imgur.com/cJbXlKJ.png\" alt=\"\"></p>\n<h2>學到什麼</h2>\n<ul>\n<li>\n<p>CSS</p>\n<ol>\n<li>一般直覺上會想要在產生效果的時候，如果要做的是固定 navbar，會直接在 navbar 上面加上 class，但他比較特別的是把 body 本身加上 <code>fixed-nav</code> 的 class，這樣一來其他要產生效果的地方，比方說 logo 跟 文章本體就不用在另外加上 class 是個比較好的做法</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.fixed-nav</span> <span class=\"selector-tag\">nav</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"built_in\">rgba</span>(0,0,0,0.1)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.fixed-nav</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.logo</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.fixed-nav</span> <span class=\"selector-class\">.site-wrap</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">scale</span>(1);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>JS</p>\n<ol>\n<li>這次在 JS 上面的程式碼倒是很簡單，主要在於細節的部分，像是在 nav 變成 fixed 的當下，文章會往上跳，因為 fixed 物件是不佔空間的，文章會往上跳 nav 的高度的空間，所以我們必須當下把他加回來</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fixNav</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.scrollY &gt;= topOfNav)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.classList.add(<span class=\"string\">'fixed-nav'</span>)</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.style.paddingTop = <span class=\"string\">`<span class=\"subst\">$&#123;nav.offsetHeight&#125;</span>px`</span></span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.classList.remove(<span class=\"string\">'fixed-nav'</span>)</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.style.paddingTop = <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<h2>code 內容：</h2>\n<p>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>A story about getting lost.<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">id</span>=<span class=\"string\">\"main\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>LOST.<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>About<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>Images<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>Locations<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>Maps<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"site-wrap\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> ... <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#eeeeee</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'helvetica neue'</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">200</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.site-wrap</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">700px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">70px</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: justify;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"number\">5px</span> <span class=\"built_in\">rgba</span>(0, 0, 0, 0.05);</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">scale</span>(0.98);</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: transform <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.fixed-nav</span> <span class=\"selector-class\">.site-wrap</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">scale</span>(1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">header</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">50vh</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(http://wes.io/iEgP/wow-so-deep.jpg) bottom center no-repeat;</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: cover;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">7vw</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-shadow</span>: <span class=\"number\">3px</span> <span class=\"number\">4px</span> <span class=\"number\">0</span> <span class=\"built_in\">rgba</span>(0,0,0,0.2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">nav</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: black;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.fixed-nav</span> <span class=\"selector-tag\">nav</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"built_in\">rgba</span>(0,0,0,0.1)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">li</span><span class=\"selector-class\">.logo</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all .<span class=\"number\">5s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.fixed-nav</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.logo</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">li</span><span class=\"selector-class\">.logo</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.2s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-transform</span>: uppercase;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> nav = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#main'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> topOfNav = nav.offsetTop</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fixNav</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.scrollY &gt;= topOfNav)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.classList.add(<span class=\"string\">'fixed-nav'</span>)</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.style.paddingTop = <span class=\"string\">`<span class=\"subst\">$&#123;nav.offsetHeight&#125;</span>px`</span></span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.classList.remove(<span class=\"string\">'fixed-nav'</span>)</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.style.paddingTop = <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'scroll'</span>, fixNav)</span><br></pre></td></tr></table></figure>"},{"title":"JS30 day25 Event Capture, Propagation, Bubbling and Once","catalog":true,"toc_nav_num":true,"date":"2019-11-26T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1574654540337-d175089f84ce?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Javascript"],"updateDate":"2019-11-26T14:26:24.000Z","_content":"# JS30 day25 - Event Capture, Propagation, Bubbling and Once\n\n## 作業內容\n\n今天也是一個概念性的教學，在教捕捉跟冒泡機制，但這部分之前看書有看過所以覺得還好ＸＤ但是 once 這屬性是第一次看到，可以參考這份 [CodePen](https://codepen.io/gbvjpsln/pen/vYYqOdb)的效果\n![](https://i.imgur.com/R8NZiWT.png)\n## 學到什麼\n\n- js\n  1. 捕捉跟冒泡:\n  可以這樣理解：捕捉的時候從上到下捕捉，當我點擊 three 這個 div 的時候，其實所有包著他的 div 跟 body 也都會被點擊到\n  捕捉的時候 DOM 會從外到內捕捉，先抓到 body 再依序到 three 這個 div，冒泡的時候就是從內到外，預設是隨著冒泡順序，所以下面的例子就是從裡到外觸發\n  ```html\n  <body class=\"bod\">\n    <div class=\"one\">\n      <div class=\"two\">\n        <div class=\"three\">\n        </div>\n      </div>\n    </div>\n  </body>\n  ```\n  ```js\n    divs = document.querySelectorAll('div', logText)\n  \n    function logText(){\n      console.log(this.classList.value)\n    }\n\n    document.body.addEventListener('click', logText)\n    divs.forEach(div => { \n      div.addEventListener('click', logText)\n    });\n    // three two one bod\n  ```\n  要怎麼改變這個順序勒？我們可以在後面加上 capture: true(預設是 capture: false)\n  ```js\n    divs = document.querySelectorAll('div', logText)\n  \n    function logText(){\n      console.log(this.classList.value)\n    }\n\n    document.body.addEventListener('click', logText)\n    divs.forEach(div => { \n      div.addEventListener('click', logText, { capture: true })\n    });\n    // one two three bod\n  ```\n  2. `stopPropogation()` 可以讓事件不冒泡\n  ```js\n    divs = document.querySelectorAll('div', logText)\n  \n    function logText(e){\n      console.log(this.classList.value);\n      e.stopPropagation()\n    }\n\n    document.body.addEventListener('click', logText)\n    divs.forEach(div => { \n      div.addEventListener('click', logText)\n    });\n    // three \n  ```\n  3. `once` 這個新屬性是讓監聽只發生一次\n  ```js\n  divs = document.querySelectorAll('div', logText)\n  \n  function logText(e){\n    console.log(this.classList.value)\n  }\n\n  divs.forEach(div => { \n    div.addEventListener('click', logText,{\n      once: true\n    })\n  });\n  // 第一次按 => three two one\n  // 第二次按 => (沒反應)\n  ```\n  上網查了一下，也有人會自己做出一個 once function，看[這裡](https://davidwalsh.name/javascript-once)  \n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\n## code 內容：\nHTML:\n```html\n<body class=\"bod\">\n\n  <div class=\"one\">\n    <div class=\"two qqq\">\n      <div class=\"three\">\n      </div>\n    </div>\n  </div>\n</body>\n```\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n}\n\n*, *:before, *:after { \n  box-sizing: inherit; \n}\n\ndiv {\n  width: 100%;\n  padding: 100px;\n}\n\n.one {\n  background: thistle;\n}\n\n.two {\n  background: mistyrose;\n}\n\n.three {\n  background: coral;\n}\n```\nJS:\n```js\ndivs = document.querySelectorAll('div', logText)\n\nfunction logText(e){\n  console.log(this.classList.value)\n}\n\ndivs.forEach(div => { \n  div.addEventListener('click', logText,{\n    once: true\n  })\n});\n```","source":"_posts/2019-11-26-JS30_day25.md","raw":"---\ntitle: \"JS30 day25 Event Capture, Propagation, Bubbling and Once\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-26 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1574654540337-d175089f84ce?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-26 22:26:24\n# top: 1\n\n---\n# JS30 day25 - Event Capture, Propagation, Bubbling and Once\n\n## 作業內容\n\n今天也是一個概念性的教學，在教捕捉跟冒泡機制，但這部分之前看書有看過所以覺得還好ＸＤ但是 once 這屬性是第一次看到，可以參考這份 [CodePen](https://codepen.io/gbvjpsln/pen/vYYqOdb)的效果\n![](https://i.imgur.com/R8NZiWT.png)\n## 學到什麼\n\n- js\n  1. 捕捉跟冒泡:\n  可以這樣理解：捕捉的時候從上到下捕捉，當我點擊 three 這個 div 的時候，其實所有包著他的 div 跟 body 也都會被點擊到\n  捕捉的時候 DOM 會從外到內捕捉，先抓到 body 再依序到 three 這個 div，冒泡的時候就是從內到外，預設是隨著冒泡順序，所以下面的例子就是從裡到外觸發\n  ```html\n  <body class=\"bod\">\n    <div class=\"one\">\n      <div class=\"two\">\n        <div class=\"three\">\n        </div>\n      </div>\n    </div>\n  </body>\n  ```\n  ```js\n    divs = document.querySelectorAll('div', logText)\n  \n    function logText(){\n      console.log(this.classList.value)\n    }\n\n    document.body.addEventListener('click', logText)\n    divs.forEach(div => { \n      div.addEventListener('click', logText)\n    });\n    // three two one bod\n  ```\n  要怎麼改變這個順序勒？我們可以在後面加上 capture: true(預設是 capture: false)\n  ```js\n    divs = document.querySelectorAll('div', logText)\n  \n    function logText(){\n      console.log(this.classList.value)\n    }\n\n    document.body.addEventListener('click', logText)\n    divs.forEach(div => { \n      div.addEventListener('click', logText, { capture: true })\n    });\n    // one two three bod\n  ```\n  2. `stopPropogation()` 可以讓事件不冒泡\n  ```js\n    divs = document.querySelectorAll('div', logText)\n  \n    function logText(e){\n      console.log(this.classList.value);\n      e.stopPropagation()\n    }\n\n    document.body.addEventListener('click', logText)\n    divs.forEach(div => { \n      div.addEventListener('click', logText)\n    });\n    // three \n  ```\n  3. `once` 這個新屬性是讓監聽只發生一次\n  ```js\n  divs = document.querySelectorAll('div', logText)\n  \n  function logText(e){\n    console.log(this.classList.value)\n  }\n\n  divs.forEach(div => { \n    div.addEventListener('click', logText,{\n      once: true\n    })\n  });\n  // 第一次按 => three two one\n  // 第二次按 => (沒反應)\n  ```\n  上網查了一下，也有人會自己做出一個 once function，看[這裡](https://davidwalsh.name/javascript-once)  \n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\n## code 內容：\nHTML:\n```html\n<body class=\"bod\">\n\n  <div class=\"one\">\n    <div class=\"two qqq\">\n      <div class=\"three\">\n      </div>\n    </div>\n  </div>\n</body>\n```\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n}\n\n*, *:before, *:after { \n  box-sizing: inherit; \n}\n\ndiv {\n  width: 100%;\n  padding: 100px;\n}\n\n.one {\n  background: thistle;\n}\n\n.two {\n  background: mistyrose;\n}\n\n.three {\n  background: coral;\n}\n```\nJS:\n```js\ndivs = document.querySelectorAll('div', logText)\n\nfunction logText(e){\n  console.log(this.classList.value)\n}\n\ndivs.forEach(div => { \n  div.addEventListener('click', logText,{\n    once: true\n  })\n});\n```","slug":"2019-11-26-JS30_day25","published":1,"updated":"2019-11-26T03:39:45.406Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0ev800302ob12ylaf6wt","content":"<h1 id=\"js30-day25-event-capture-propagation-bubbling-and-once\">JS30 day25 - Event Capture, Propagation, Bubbling and Once</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天也是一個概念性的教學，在教捕捉跟冒泡機制，但這部分之前看書有看過所以覺得還好ＸＤ但是 once 這屬性是第一次看到，可以參考這份 <a href=\"https://codepen.io/gbvjpsln/pen/vYYqOdb\" target=\"_blank\" rel=\"noopener\">CodePen</a>的效果<br>\n<img src=\"https://i.imgur.com/R8NZiWT.png\" alt=\"\"></p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<ul>\n<li>\n<p>js</p>\n<ol>\n<li>捕捉跟冒泡:<br>\n可以這樣理解：捕捉的時候從上到下捕捉，當我點擊 three 這個 div 的時候，其實所有包著他的 div 跟 body 也都會被點擊到<br>\n捕捉的時候 DOM 會從外到內捕捉，先抓到 body 再依序到 three 這個 div，冒泡的時候就是從內到外，預設是隨著冒泡順序，所以下面的例子就是從裡到外觸發</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span> <span class=\"attr\">class</span>=<span class=\"string\">\"bod\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"one\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"two\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"three\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">divs = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'div'</span>, logText)</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">logText</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.classList.value)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.addEventListener(<span class=\"string\">'click'</span>, logText)</span><br><span class=\"line\">divs.forEach(<span class=\"function\"><span class=\"params\">div</span> =&gt;</span> &#123; </span><br><span class=\"line\">  div.addEventListener(<span class=\"string\">'click'</span>, logText)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// three two one bod</span></span><br></pre></td></tr></table></figure>\n<p>要怎麼改變這個順序勒？我們可以在後面加上 capture: true(預設是 capture: false)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">divs = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'div'</span>, logText)</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">logText</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.classList.value)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.addEventListener(<span class=\"string\">'click'</span>, logText)</span><br><span class=\"line\">divs.forEach(<span class=\"function\"><span class=\"params\">div</span> =&gt;</span> &#123; </span><br><span class=\"line\">  div.addEventListener(<span class=\"string\">'click'</span>, logText, &#123; <span class=\"attr\">capture</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// one two three bod</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><code>stopPropogation()</code> 可以讓事件不冒泡</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">divs = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'div'</span>, logText)</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">logText</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.classList.value);</span><br><span class=\"line\">  e.stopPropagation()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.addEventListener(<span class=\"string\">'click'</span>, logText)</span><br><span class=\"line\">divs.forEach(<span class=\"function\"><span class=\"params\">div</span> =&gt;</span> &#123; </span><br><span class=\"line\">  div.addEventListener(<span class=\"string\">'click'</span>, logText)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// three</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><code>once</code> 這個新屬性是讓監聽只發生一次</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">divs = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'div'</span>, logText)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">logText</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.classList.value)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">divs.forEach(<span class=\"function\"><span class=\"params\">div</span> =&gt;</span> &#123; </span><br><span class=\"line\">  div.addEventListener(<span class=\"string\">'click'</span>, logText,&#123;</span><br><span class=\"line\">    once: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 第一次按 =&gt; three two one</span></span><br><span class=\"line\"><span class=\"comment\">// 第二次按 =&gt; (沒反應)</span></span><br></pre></td></tr></table></figure>\n<p>上網查了一下，也有人會自己做出一個 once function，看<a href=\"https://davidwalsh.name/javascript-once\" target=\"_blank\" rel=\"noopener\">這裡</a><br>\n參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n</li>\n</ul>\n<h2 id=\"code-內容\">code 內容：</h2>\n<p>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span> <span class=\"attr\">class</span>=<span class=\"string\">\"bod\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"one\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"two qqq\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"three\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123; </span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.one</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: thistle;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.two</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: mistyrose;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.three</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: coral;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">divs = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'div'</span>, logText)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">logText</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.classList.value)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">divs.forEach(<span class=\"function\"><span class=\"params\">div</span> =&gt;</span> &#123; </span><br><span class=\"line\">  div.addEventListener(<span class=\"string\">'click'</span>, logText,&#123;</span><br><span class=\"line\">    once: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day25 - Event Capture, Propagation, Bubbling and Once</h1>\n<h2>作業內容</h2>\n<p>今天也是一個概念性的教學，在教捕捉跟冒泡機制，但這部分之前看書有看過所以覺得還好ＸＤ但是 once 這屬性是第一次看到，可以參考這份 <a href=\"https://codepen.io/gbvjpsln/pen/vYYqOdb\" target=\"_blank\" rel=\"noopener\">CodePen</a>的效果<br>\n<img src=\"https://i.imgur.com/R8NZiWT.png\" alt=\"\"></p>\n<h2>學到什麼</h2>\n<ul>\n<li>\n<p>js</p>\n<ol>\n<li>捕捉跟冒泡:<br>\n可以這樣理解：捕捉的時候從上到下捕捉，當我點擊 three 這個 div 的時候，其實所有包著他的 div 跟 body 也都會被點擊到<br>\n捕捉的時候 DOM 會從外到內捕捉，先抓到 body 再依序到 three 這個 div，冒泡的時候就是從內到外，預設是隨著冒泡順序，所以下面的例子就是從裡到外觸發</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span> <span class=\"attr\">class</span>=<span class=\"string\">\"bod\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"one\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"two\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"three\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">divs = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'div'</span>, logText)</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">logText</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.classList.value)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.addEventListener(<span class=\"string\">'click'</span>, logText)</span><br><span class=\"line\">divs.forEach(<span class=\"function\"><span class=\"params\">div</span> =&gt;</span> &#123; </span><br><span class=\"line\">  div.addEventListener(<span class=\"string\">'click'</span>, logText)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// three two one bod</span></span><br></pre></td></tr></table></figure>\n<p>要怎麼改變這個順序勒？我們可以在後面加上 capture: true(預設是 capture: false)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">divs = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'div'</span>, logText)</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">logText</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.classList.value)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.addEventListener(<span class=\"string\">'click'</span>, logText)</span><br><span class=\"line\">divs.forEach(<span class=\"function\"><span class=\"params\">div</span> =&gt;</span> &#123; </span><br><span class=\"line\">  div.addEventListener(<span class=\"string\">'click'</span>, logText, &#123; <span class=\"attr\">capture</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// one two three bod</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><code>stopPropogation()</code> 可以讓事件不冒泡</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">divs = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'div'</span>, logText)</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">logText</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.classList.value);</span><br><span class=\"line\">  e.stopPropagation()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.addEventListener(<span class=\"string\">'click'</span>, logText)</span><br><span class=\"line\">divs.forEach(<span class=\"function\"><span class=\"params\">div</span> =&gt;</span> &#123; </span><br><span class=\"line\">  div.addEventListener(<span class=\"string\">'click'</span>, logText)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// three</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><code>once</code> 這個新屬性是讓監聽只發生一次</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">divs = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'div'</span>, logText)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">logText</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.classList.value)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">divs.forEach(<span class=\"function\"><span class=\"params\">div</span> =&gt;</span> &#123; </span><br><span class=\"line\">  div.addEventListener(<span class=\"string\">'click'</span>, logText,&#123;</span><br><span class=\"line\">    once: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 第一次按 =&gt; three two one</span></span><br><span class=\"line\"><span class=\"comment\">// 第二次按 =&gt; (沒反應)</span></span><br></pre></td></tr></table></figure>\n<p>上網查了一下，也有人會自己做出一個 once function，看<a href=\"https://davidwalsh.name/javascript-once\" target=\"_blank\" rel=\"noopener\">這裡</a><br>\n參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n</li>\n</ul>\n<h2>code 內容：</h2>\n<p>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span> <span class=\"attr\">class</span>=<span class=\"string\">\"bod\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"one\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"two qqq\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"three\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123; </span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.one</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: thistle;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.two</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: mistyrose;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.three</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: coral;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">divs = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'div'</span>, logText)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">logText</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.classList.value)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">divs.forEach(<span class=\"function\"><span class=\"params\">div</span> =&gt;</span> &#123; </span><br><span class=\"line\">  div.addEventListener(<span class=\"string\">'click'</span>, logText,&#123;</span><br><span class=\"line\">    once: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>"},{"title":"JS30 day27 Click and Drag to Scroll","catalog":true,"toc_nav_num":true,"date":"2019-11-27T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/flagged/photo-1565666478725-5358cca4d572?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Javascript"],"updateDate":"2019-11-27T14:26:24.000Z","_content":"# JS30 day27 - Click and Drag to Scroll\n\n## 作業內容\n\n這次的作業是做出可以用滑鼠左右拉讓螢幕滑動的效果\n一樣 code 本身不複雜，但要想出怎麼做出來是需要創意的\n可以參考這份 [CodePen](https://codepen.io/gbvjpsln/pen/BaaXwxe)的效果\n![](https://i.imgur.com/kDwMfgR.jpg)\n## 學到什麼\n- JS\n  1. 細節：在抓點下去時候的 X 座標，我們抓 mouseDown 事件的 pageX 屬性\n  但如果把這個 pageX console.log 出來看會發現問題，如果 margin 變大，可以發現就算點在 slider 邊邊，他的起始座標就是 100 多而不是接近0，這是為什麼？\n  因為這 pageX 是在這頁面中的絕對座標，我們要的是相對於這個捲動頁面框框的座標，所以要把整個框框的 left 座標減掉\n  ```js\n  slider.addEventListener('mousedown', (e)=> {\n    isDown = true\n    slider.classList.add('active')\n    startX = e.pageX - slider.offsetLeft\n    scollLeft = slider.scrollLeft // 要記錄一開始 slider 已經捲了多少\n    console.log(e.pageX)\n  })\n  ```\n  2. 細節： slider 觸發的 mousemove 事件這邊加上 preventDeault 是因為怕觸發意料之外的效果，像是選到文字等等，這個很容易漏掉\n  ```js\n  slider.addEventListener('mousemove', (e)=> {\n    if(!isDown) return; // 如果沒有按滑鼠不觸發\n    e.preventDefault() // 避免捲動的時候去選框框內文字\n    const x = e.pageX - slider.offsetLeft\n    walk = x - startX\n    slider.scrollLeft = scollLeft - walk\n  })\n  ```\n  1. 有個很細節的地方在於，如果導覽列上方有東西，我們必須把座標值扣掉，否則白框位置會跑掉\n  ```js\n  const coords = {\n    height: dropdownCoords.height,\n    width: dropdownCoords.width,\n    top:  dropdownCoords.top - navCoords.top,\n    left: dropdownCoords.left - navCoords.left\n  }\n  ```\n  `dropdownCoords.top - navCoords.top,`像這行就是下拉選單的座標扣掉導覽列的上方座標\n  2. 除此之外還有更細節的地方，一開始程式碼長的是下面這樣\n  ```js\n  function handleEnter(){\n    this.classList.add('trigger-enter')\n    setTimeout(() => {\n      this.classList.add('trigger-enter-active')\n    },150)\n    //下略\n  }\n  function handleLeave(){\n    this.classList.remove('trigger-enter', 'trigger-enter-active')\n  }\n    //下略\n  ```\n  我再加上 class 的時候為了有動畫的效果，有個 setTimeout 設定 150 微秒之後才加上 `trigger-enter-active` 這 class，但移除的時候是同時移除\n  這樣會有個問題，當我在導覽列中快速移動，可能已經觸發到移除了，但 150 微秒還沒到，所以後面下拉選單的內容才跑出來\n  解決方法如下：再設上一個條件，150微秒的時候檢查是不是有一開始加上的那個 class `trigger-enter`，沒有的話就不用再加上這個 class\n  ```js\n  function handleEnter(){\n    this.classList.add('trigger-enter')\n    setTimeout(() => {\n      if(this.classList.contains('trigger-enter')){\n        this.classList.add('trigger-enter-active')\n      }\n    },150)\n    //下略\n  ```\n\nhttps://github.com/wesbos/JavaScript30\n\n## code 內容：\nHTML:\n```html\n<div class=\"items\">\n    <div class=\"item item1\">01</div>\n    <div class=\"item item2\">02</div>\n    <div class=\"item item3\">03</div>\n    <div class=\"item item4\">04</div>\n    <div class=\"item item5\">05</div>\n    <div class=\"item item6\">06</div>\n    <div class=\"item item7\">07</div>\n    <div class=\"item item8\">08</div>\n    <div class=\"item item9\">09</div>\n    <div class=\"item item10\">10</div>\n    <div class=\"item item11\">11</div>\n    <div class=\"item item12\">12</div>\n    <div class=\"item item13\">13</div>\n    <div class=\"item item14\">14</div>\n    <div class=\"item item15\">15</div>\n    <div class=\"item item16\">16</div>\n    <div class=\"item item17\">17</div>\n    <div class=\"item item18\">18</div>\n    <div class=\"item item19\">19</div>\n    <div class=\"item item20\">20</div>\n    <div class=\"item item21\">21</div>\n    <div class=\"item item22\">22</div>\n    <div class=\"item item23\">23</div>\n    <div class=\"item item24\">24</div>\n    <div class=\"item item25\">25</div>\n</div>\n```\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n  background: url('https://source.unsplash.com/NFs6dRTBgaM/2000x2000') fixed;\n  background-size: cover;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nbody {\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: sans-serif;\n  font-size: 20px;\n  margin: 0;\n}\n\n.items {\n  height: 800px;\n  padding: 100px;\n  width: 100%;\n  border: 1px solid white;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  white-space: nowrap;\n  user-select: none;\n  cursor: pointer;\n  transition: all 0.2s;\n  transform: scale(0.98);\n  will-change: transform;\n  position: relative;\n  background: rgba(255,255,255,0.1);\n  font-size: 0;\n  perspective: 500px;\n}\n\n.items.active {\n  background: rgba(255,255,255,0.3);\n  cursor: grabbing;\n  cursor: -webkit-grabbing;\n  transform: scale(1);\n}\n\n.item {\n  width: 200px;\n  height: calc(100% - 40px);\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 80px;\n  font-weight: 100;\n  color: rgba(0,0,0,0.15);\n  box-shadow: inset 0 0 0 10px rgba(0,0,0,0.15);\n}\n\n.item:nth-child(9n+1) { background: dodgerblue;}\n.item:nth-child(9n+2) { background: goldenrod;}\n.item:nth-child(9n+3) { background: paleturquoise;}\n.item:nth-child(9n+4) { background: gold;}\n.item:nth-child(9n+5) { background: cadetblue;}\n.item:nth-child(9n+6) { background: tomato;}\n.item:nth-child(9n+7) { background: lightcoral;}\n.item:nth-child(9n+8) { background: darkslateblue;}\n.item:nth-child(9n+9) { background: rebeccapurple;}\n\n.item:nth-child(even) { transform: scaleX(1.31) rotateY(40deg); }\n.item:nth-child(odd) { transform: scaleX(1.31) rotateY(-40deg); }\n\n```\nJS:\n```js\nconst slider = document.querySelector('.items')\nlet isDown = false\nlet startX\nlet scrollLeft\n\nslider.addEventListener('mousedown', (e)=> {\n  isDown = true\n  slider.classList.add('active')\n  startX = e.pageX - slider.offsetLeft // 要減掉 slider 本身的位移減掉\n  scollLeft = slider.scrollLeft // 要記錄一開始 slider 已經捲了多少\n  console.log(e.pageX)\n})\nslider.addEventListener('mouseleave', ()=> {\n  isDown = false\n  slider.classList.remove('active')\n})\nslider.addEventListener('mouseup', ()=> {\n  isDown = false\n  slider.classList.remove('active')\n})\nslider.addEventListener('mousemove', (e)=> {\n  if(!isDown) return; // 如果沒有按滑鼠不觸發\n  e.preventDefault() // 避免捲動的時候去選框框內文字\n  const x = e.pageX - slider.offsetLeft\n  walk = x - startX\n  slider.scrollLeft = scollLeft - walk\n})\n```","source":"_posts/2019-11-28-JS30_day27.md","raw":"---\ntitle: \"JS30 day27 Click and Drag to Scroll\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-27 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/flagged/photo-1565666478725-5358cca4d572?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-27 22:26:24\n# top: 1\n\n---\n# JS30 day27 - Click and Drag to Scroll\n\n## 作業內容\n\n這次的作業是做出可以用滑鼠左右拉讓螢幕滑動的效果\n一樣 code 本身不複雜，但要想出怎麼做出來是需要創意的\n可以參考這份 [CodePen](https://codepen.io/gbvjpsln/pen/BaaXwxe)的效果\n![](https://i.imgur.com/kDwMfgR.jpg)\n## 學到什麼\n- JS\n  1. 細節：在抓點下去時候的 X 座標，我們抓 mouseDown 事件的 pageX 屬性\n  但如果把這個 pageX console.log 出來看會發現問題，如果 margin 變大，可以發現就算點在 slider 邊邊，他的起始座標就是 100 多而不是接近0，這是為什麼？\n  因為這 pageX 是在這頁面中的絕對座標，我們要的是相對於這個捲動頁面框框的座標，所以要把整個框框的 left 座標減掉\n  ```js\n  slider.addEventListener('mousedown', (e)=> {\n    isDown = true\n    slider.classList.add('active')\n    startX = e.pageX - slider.offsetLeft\n    scollLeft = slider.scrollLeft // 要記錄一開始 slider 已經捲了多少\n    console.log(e.pageX)\n  })\n  ```\n  2. 細節： slider 觸發的 mousemove 事件這邊加上 preventDeault 是因為怕觸發意料之外的效果，像是選到文字等等，這個很容易漏掉\n  ```js\n  slider.addEventListener('mousemove', (e)=> {\n    if(!isDown) return; // 如果沒有按滑鼠不觸發\n    e.preventDefault() // 避免捲動的時候去選框框內文字\n    const x = e.pageX - slider.offsetLeft\n    walk = x - startX\n    slider.scrollLeft = scollLeft - walk\n  })\n  ```\n  1. 有個很細節的地方在於，如果導覽列上方有東西，我們必須把座標值扣掉，否則白框位置會跑掉\n  ```js\n  const coords = {\n    height: dropdownCoords.height,\n    width: dropdownCoords.width,\n    top:  dropdownCoords.top - navCoords.top,\n    left: dropdownCoords.left - navCoords.left\n  }\n  ```\n  `dropdownCoords.top - navCoords.top,`像這行就是下拉選單的座標扣掉導覽列的上方座標\n  2. 除此之外還有更細節的地方，一開始程式碼長的是下面這樣\n  ```js\n  function handleEnter(){\n    this.classList.add('trigger-enter')\n    setTimeout(() => {\n      this.classList.add('trigger-enter-active')\n    },150)\n    //下略\n  }\n  function handleLeave(){\n    this.classList.remove('trigger-enter', 'trigger-enter-active')\n  }\n    //下略\n  ```\n  我再加上 class 的時候為了有動畫的效果，有個 setTimeout 設定 150 微秒之後才加上 `trigger-enter-active` 這 class，但移除的時候是同時移除\n  這樣會有個問題，當我在導覽列中快速移動，可能已經觸發到移除了，但 150 微秒還沒到，所以後面下拉選單的內容才跑出來\n  解決方法如下：再設上一個條件，150微秒的時候檢查是不是有一開始加上的那個 class `trigger-enter`，沒有的話就不用再加上這個 class\n  ```js\n  function handleEnter(){\n    this.classList.add('trigger-enter')\n    setTimeout(() => {\n      if(this.classList.contains('trigger-enter')){\n        this.classList.add('trigger-enter-active')\n      }\n    },150)\n    //下略\n  ```\n\nhttps://github.com/wesbos/JavaScript30\n\n## code 內容：\nHTML:\n```html\n<div class=\"items\">\n    <div class=\"item item1\">01</div>\n    <div class=\"item item2\">02</div>\n    <div class=\"item item3\">03</div>\n    <div class=\"item item4\">04</div>\n    <div class=\"item item5\">05</div>\n    <div class=\"item item6\">06</div>\n    <div class=\"item item7\">07</div>\n    <div class=\"item item8\">08</div>\n    <div class=\"item item9\">09</div>\n    <div class=\"item item10\">10</div>\n    <div class=\"item item11\">11</div>\n    <div class=\"item item12\">12</div>\n    <div class=\"item item13\">13</div>\n    <div class=\"item item14\">14</div>\n    <div class=\"item item15\">15</div>\n    <div class=\"item item16\">16</div>\n    <div class=\"item item17\">17</div>\n    <div class=\"item item18\">18</div>\n    <div class=\"item item19\">19</div>\n    <div class=\"item item20\">20</div>\n    <div class=\"item item21\">21</div>\n    <div class=\"item item22\">22</div>\n    <div class=\"item item23\">23</div>\n    <div class=\"item item24\">24</div>\n    <div class=\"item item25\">25</div>\n</div>\n```\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n  background: url('https://source.unsplash.com/NFs6dRTBgaM/2000x2000') fixed;\n  background-size: cover;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nbody {\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: sans-serif;\n  font-size: 20px;\n  margin: 0;\n}\n\n.items {\n  height: 800px;\n  padding: 100px;\n  width: 100%;\n  border: 1px solid white;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  white-space: nowrap;\n  user-select: none;\n  cursor: pointer;\n  transition: all 0.2s;\n  transform: scale(0.98);\n  will-change: transform;\n  position: relative;\n  background: rgba(255,255,255,0.1);\n  font-size: 0;\n  perspective: 500px;\n}\n\n.items.active {\n  background: rgba(255,255,255,0.3);\n  cursor: grabbing;\n  cursor: -webkit-grabbing;\n  transform: scale(1);\n}\n\n.item {\n  width: 200px;\n  height: calc(100% - 40px);\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 80px;\n  font-weight: 100;\n  color: rgba(0,0,0,0.15);\n  box-shadow: inset 0 0 0 10px rgba(0,0,0,0.15);\n}\n\n.item:nth-child(9n+1) { background: dodgerblue;}\n.item:nth-child(9n+2) { background: goldenrod;}\n.item:nth-child(9n+3) { background: paleturquoise;}\n.item:nth-child(9n+4) { background: gold;}\n.item:nth-child(9n+5) { background: cadetblue;}\n.item:nth-child(9n+6) { background: tomato;}\n.item:nth-child(9n+7) { background: lightcoral;}\n.item:nth-child(9n+8) { background: darkslateblue;}\n.item:nth-child(9n+9) { background: rebeccapurple;}\n\n.item:nth-child(even) { transform: scaleX(1.31) rotateY(40deg); }\n.item:nth-child(odd) { transform: scaleX(1.31) rotateY(-40deg); }\n\n```\nJS:\n```js\nconst slider = document.querySelector('.items')\nlet isDown = false\nlet startX\nlet scrollLeft\n\nslider.addEventListener('mousedown', (e)=> {\n  isDown = true\n  slider.classList.add('active')\n  startX = e.pageX - slider.offsetLeft // 要減掉 slider 本身的位移減掉\n  scollLeft = slider.scrollLeft // 要記錄一開始 slider 已經捲了多少\n  console.log(e.pageX)\n})\nslider.addEventListener('mouseleave', ()=> {\n  isDown = false\n  slider.classList.remove('active')\n})\nslider.addEventListener('mouseup', ()=> {\n  isDown = false\n  slider.classList.remove('active')\n})\nslider.addEventListener('mousemove', (e)=> {\n  if(!isDown) return; // 如果沒有按滑鼠不觸發\n  e.preventDefault() // 避免捲動的時候去選框框內文字\n  const x = e.pageX - slider.offsetLeft\n  walk = x - startX\n  slider.scrollLeft = scollLeft - walk\n})\n```","slug":"2019-11-28-JS30_day27","published":1,"updated":"2019-11-28T08:18:47.792Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0ev900322ob1z88aw06u","content":"<h1 id=\"js30-day27-click-and-drag-to-scroll\">JS30 day27 - Click and Drag to Scroll</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>這次的作業是做出可以用滑鼠左右拉讓螢幕滑動的效果<br>\n一樣 code 本身不複雜，但要想出怎麼做出來是需要創意的<br>\n可以參考這份 <a href=\"https://codepen.io/gbvjpsln/pen/BaaXwxe\" target=\"_blank\" rel=\"noopener\">CodePen</a>的效果<br>\n<img src=\"https://i.imgur.com/kDwMfgR.jpg\" alt=\"\"></p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li>細節：在抓點下去時候的 X 座標，我們抓 mouseDown 事件的 pageX 屬性<br>\n但如果把這個 pageX console.log 出來看會發現問題，如果 margin 變大，可以發現就算點在 slider 邊邊，他的起始座標就是 100 多而不是接近0，這是為什麼？<br>\n因為這 pageX 是在這頁面中的絕對座標，我們要的是相對於這個捲動頁面框框的座標，所以要把整個框框的 left 座標減掉</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">slider.addEventListener(<span class=\"string\">'mousedown'</span>, (e)=&gt; &#123;</span><br><span class=\"line\">  isDown = <span class=\"literal\">true</span></span><br><span class=\"line\">  slider.classList.add(<span class=\"string\">'active'</span>)</span><br><span class=\"line\">  startX = e.pageX - slider.offsetLeft</span><br><span class=\"line\">  scollLeft = slider.scrollLeft <span class=\"comment\">// 要記錄一開始 slider 已經捲了多少</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(e.pageX)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>細節： slider 觸發的 mousemove 事件這邊加上 preventDeault 是因為怕觸發意料之外的效果，像是選到文字等等，這個很容易漏掉</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">slider.addEventListener(<span class=\"string\">'mousemove'</span>, (e)=&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!isDown) <span class=\"keyword\">return</span>; <span class=\"comment\">// 如果沒有按滑鼠不觸發</span></span><br><span class=\"line\">  e.preventDefault() <span class=\"comment\">// 避免捲動的時候去選框框內文字</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> x = e.pageX - slider.offsetLeft</span><br><span class=\"line\">  walk = x - startX</span><br><span class=\"line\">  slider.scrollLeft = scollLeft - walk</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<ol>\n<li>有個很細節的地方在於，如果導覽列上方有東西，我們必須把座標值扣掉，否則白框位置會跑掉</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> coords = &#123;</span><br><span class=\"line\">  height: dropdownCoords.height,</span><br><span class=\"line\">  width: dropdownCoords.width,</span><br><span class=\"line\">  top:  dropdownCoords.top - navCoords.top,</span><br><span class=\"line\">  left: dropdownCoords.left - navCoords.left</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>dropdownCoords.top - navCoords.top,</code>像這行就是下拉選單的座標扣掉導覽列的上方座標</p>\n<ol start=\"2\">\n<li>除此之外還有更細節的地方，一開始程式碼長的是下面這樣</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleEnter</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.classList.add(<span class=\"string\">'trigger-enter'</span>)</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.classList.add(<span class=\"string\">'trigger-enter-active'</span>)</span><br><span class=\"line\">  &#125;,<span class=\"number\">150</span>)</span><br><span class=\"line\">  <span class=\"comment\">//下略</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleLeave</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.classList.remove(<span class=\"string\">'trigger-enter'</span>, <span class=\"string\">'trigger-enter-active'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  <span class=\"comment\">//下略</span></span><br></pre></td></tr></table></figure>\n<p>我再加上 class 的時候為了有動畫的效果，有個 setTimeout 設定 150 微秒之後才加上 <code>trigger-enter-active</code> 這 class，但移除的時候是同時移除<br>\n這樣會有個問題，當我在導覽列中快速移動，可能已經觸發到移除了，但 150 微秒還沒到，所以後面下拉選單的內容才跑出來<br>\n解決方法如下：再設上一個條件，150微秒的時候檢查是不是有一開始加上的那個 class <code>trigger-enter</code>，沒有的話就不用再加上這個 class</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleEnter</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.classList.add(<span class=\"string\">'trigger-enter'</span>)</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.classList.contains(<span class=\"string\">'trigger-enter'</span>))&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.classList.add(<span class=\"string\">'trigger-enter-active'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,<span class=\"number\">150</span>)</span><br><span class=\"line\">  <span class=\"comment\">//下略</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<h2 id=\"code-內容\">code 內容：</h2>\n<p>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"items\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item1\"</span>&gt;</span>01<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item2\"</span>&gt;</span>02<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item3\"</span>&gt;</span>03<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item4\"</span>&gt;</span>04<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item5\"</span>&gt;</span>05<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item6\"</span>&gt;</span>06<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item7\"</span>&gt;</span>07<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item8\"</span>&gt;</span>08<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item9\"</span>&gt;</span>09<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item10\"</span>&gt;</span>10<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item11\"</span>&gt;</span>11<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item12\"</span>&gt;</span>12<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item13\"</span>&gt;</span>13<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item14\"</span>&gt;</span>14<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item15\"</span>&gt;</span>15<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item16\"</span>&gt;</span>16<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item17\"</span>&gt;</span>17<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item18\"</span>&gt;</span>18<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item19\"</span>&gt;</span>19<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item20\"</span>&gt;</span>20<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item21\"</span>&gt;</span>21<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item22\"</span>&gt;</span>22<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item23\"</span>&gt;</span>23<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item24\"</span>&gt;</span>24<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item25\"</span>&gt;</span>25<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(<span class=\"string\">'https://source.unsplash.com/NFs6dRTBgaM/2000x2000'</span>) fixed;</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: cover;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.items</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">800px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid white;</span><br><span class=\"line\">  <span class=\"attribute\">overflow-x</span>: scroll;</span><br><span class=\"line\">  <span class=\"attribute\">overflow-y</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">white-space</span>: nowrap;</span><br><span class=\"line\">  <span class=\"attribute\">user-select</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.2s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">scale</span>(0.98);</span><br><span class=\"line\">  <span class=\"attribute\">will-change</span>: transform;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(255,255,255,0.1);</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">perspective</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.items</span><span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(255,255,255,0.3);</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: grabbing;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: -webkit-grabbing;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">scale</span>(1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"built_in\">calc</span>(100% - 40px);</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-flex;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">80px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">100</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">rgba</span>(0,0,0,0.15);</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: inset <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"built_in\">rgba</span>(0,0,0,0.15);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:nth-child(9n+1)</span> &#123; <span class=\"attribute\">background</span>: dodgerblue;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:nth-child(9n+2)</span> &#123; <span class=\"attribute\">background</span>: goldenrod;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:nth-child(9n+3)</span> &#123; <span class=\"attribute\">background</span>: paleturquoise;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:nth-child(9n+4)</span> &#123; <span class=\"attribute\">background</span>: gold;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:nth-child(9n+5)</span> &#123; <span class=\"attribute\">background</span>: cadetblue;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:nth-child(9n+6)</span> &#123; <span class=\"attribute\">background</span>: tomato;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:nth-child(9n+7)</span> &#123; <span class=\"attribute\">background</span>: lightcoral;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:nth-child(9n+8)</span> &#123; <span class=\"attribute\">background</span>: darkslateblue;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:nth-child(9n+9)</span> &#123; <span class=\"attribute\">background</span>: rebeccapurple;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:nth-child(even)</span> &#123; <span class=\"attribute\">transform</span>: <span class=\"built_in\">scaleX</span>(1.31) <span class=\"built_in\">rotateY</span>(40deg); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:nth-child(odd)</span> &#123; <span class=\"attribute\">transform</span>: <span class=\"built_in\">scaleX</span>(1.31) <span class=\"built_in\">rotateY</span>(-40deg); &#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> slider = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.items'</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> isDown = <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> startX</span><br><span class=\"line\"><span class=\"keyword\">let</span> scrollLeft</span><br><span class=\"line\"></span><br><span class=\"line\">slider.addEventListener(<span class=\"string\">'mousedown'</span>, (e)=&gt; &#123;</span><br><span class=\"line\">  isDown = <span class=\"literal\">true</span></span><br><span class=\"line\">  slider.classList.add(<span class=\"string\">'active'</span>)</span><br><span class=\"line\">  startX = e.pageX - slider.offsetLeft <span class=\"comment\">// 要減掉 slider 本身的位移減掉</span></span><br><span class=\"line\">  scollLeft = slider.scrollLeft <span class=\"comment\">// 要記錄一開始 slider 已經捲了多少</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(e.pageX)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">slider.addEventListener(<span class=\"string\">'mouseleave'</span>, ()=&gt; &#123;</span><br><span class=\"line\">  isDown = <span class=\"literal\">false</span></span><br><span class=\"line\">  slider.classList.remove(<span class=\"string\">'active'</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">slider.addEventListener(<span class=\"string\">'mouseup'</span>, ()=&gt; &#123;</span><br><span class=\"line\">  isDown = <span class=\"literal\">false</span></span><br><span class=\"line\">  slider.classList.remove(<span class=\"string\">'active'</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">slider.addEventListener(<span class=\"string\">'mousemove'</span>, (e)=&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!isDown) <span class=\"keyword\">return</span>; <span class=\"comment\">// 如果沒有按滑鼠不觸發</span></span><br><span class=\"line\">  e.preventDefault() <span class=\"comment\">// 避免捲動的時候去選框框內文字</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> x = e.pageX - slider.offsetLeft</span><br><span class=\"line\">  walk = x - startX</span><br><span class=\"line\">  slider.scrollLeft = scollLeft - walk</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day27 - Click and Drag to Scroll</h1>\n<h2>作業內容</h2>\n<p>這次的作業是做出可以用滑鼠左右拉讓螢幕滑動的效果<br>\n一樣 code 本身不複雜，但要想出怎麼做出來是需要創意的<br>\n可以參考這份 <a href=\"https://codepen.io/gbvjpsln/pen/BaaXwxe\" target=\"_blank\" rel=\"noopener\">CodePen</a>的效果<br>\n<img src=\"https://i.imgur.com/kDwMfgR.jpg\" alt=\"\"></p>\n<h2>學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li>細節：在抓點下去時候的 X 座標，我們抓 mouseDown 事件的 pageX 屬性<br>\n但如果把這個 pageX console.log 出來看會發現問題，如果 margin 變大，可以發現就算點在 slider 邊邊，他的起始座標就是 100 多而不是接近0，這是為什麼？<br>\n因為這 pageX 是在這頁面中的絕對座標，我們要的是相對於這個捲動頁面框框的座標，所以要把整個框框的 left 座標減掉</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">slider.addEventListener(<span class=\"string\">'mousedown'</span>, (e)=&gt; &#123;</span><br><span class=\"line\">  isDown = <span class=\"literal\">true</span></span><br><span class=\"line\">  slider.classList.add(<span class=\"string\">'active'</span>)</span><br><span class=\"line\">  startX = e.pageX - slider.offsetLeft</span><br><span class=\"line\">  scollLeft = slider.scrollLeft <span class=\"comment\">// 要記錄一開始 slider 已經捲了多少</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(e.pageX)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>細節： slider 觸發的 mousemove 事件這邊加上 preventDeault 是因為怕觸發意料之外的效果，像是選到文字等等，這個很容易漏掉</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">slider.addEventListener(<span class=\"string\">'mousemove'</span>, (e)=&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!isDown) <span class=\"keyword\">return</span>; <span class=\"comment\">// 如果沒有按滑鼠不觸發</span></span><br><span class=\"line\">  e.preventDefault() <span class=\"comment\">// 避免捲動的時候去選框框內文字</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> x = e.pageX - slider.offsetLeft</span><br><span class=\"line\">  walk = x - startX</span><br><span class=\"line\">  slider.scrollLeft = scollLeft - walk</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<ol>\n<li>有個很細節的地方在於，如果導覽列上方有東西，我們必須把座標值扣掉，否則白框位置會跑掉</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> coords = &#123;</span><br><span class=\"line\">  height: dropdownCoords.height,</span><br><span class=\"line\">  width: dropdownCoords.width,</span><br><span class=\"line\">  top:  dropdownCoords.top - navCoords.top,</span><br><span class=\"line\">  left: dropdownCoords.left - navCoords.left</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>dropdownCoords.top - navCoords.top,</code>像這行就是下拉選單的座標扣掉導覽列的上方座標</p>\n<ol start=\"2\">\n<li>除此之外還有更細節的地方，一開始程式碼長的是下面這樣</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleEnter</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.classList.add(<span class=\"string\">'trigger-enter'</span>)</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.classList.add(<span class=\"string\">'trigger-enter-active'</span>)</span><br><span class=\"line\">  &#125;,<span class=\"number\">150</span>)</span><br><span class=\"line\">  <span class=\"comment\">//下略</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleLeave</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.classList.remove(<span class=\"string\">'trigger-enter'</span>, <span class=\"string\">'trigger-enter-active'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  <span class=\"comment\">//下略</span></span><br></pre></td></tr></table></figure>\n<p>我再加上 class 的時候為了有動畫的效果，有個 setTimeout 設定 150 微秒之後才加上 <code>trigger-enter-active</code> 這 class，但移除的時候是同時移除<br>\n這樣會有個問題，當我在導覽列中快速移動，可能已經觸發到移除了，但 150 微秒還沒到，所以後面下拉選單的內容才跑出來<br>\n解決方法如下：再設上一個條件，150微秒的時候檢查是不是有一開始加上的那個 class <code>trigger-enter</code>，沒有的話就不用再加上這個 class</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleEnter</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.classList.add(<span class=\"string\">'trigger-enter'</span>)</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.classList.contains(<span class=\"string\">'trigger-enter'</span>))&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.classList.add(<span class=\"string\">'trigger-enter-active'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,<span class=\"number\">150</span>)</span><br><span class=\"line\">  <span class=\"comment\">//下略</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<h2>code 內容：</h2>\n<p>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"items\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item1\"</span>&gt;</span>01<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item2\"</span>&gt;</span>02<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item3\"</span>&gt;</span>03<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item4\"</span>&gt;</span>04<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item5\"</span>&gt;</span>05<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item6\"</span>&gt;</span>06<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item7\"</span>&gt;</span>07<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item8\"</span>&gt;</span>08<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item9\"</span>&gt;</span>09<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item10\"</span>&gt;</span>10<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item11\"</span>&gt;</span>11<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item12\"</span>&gt;</span>12<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item13\"</span>&gt;</span>13<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item14\"</span>&gt;</span>14<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item15\"</span>&gt;</span>15<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item16\"</span>&gt;</span>16<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item17\"</span>&gt;</span>17<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item18\"</span>&gt;</span>18<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item19\"</span>&gt;</span>19<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item20\"</span>&gt;</span>20<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item21\"</span>&gt;</span>21<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item22\"</span>&gt;</span>22<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item23\"</span>&gt;</span>23<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item24\"</span>&gt;</span>24<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item item25\"</span>&gt;</span>25<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(<span class=\"string\">'https://source.unsplash.com/NFs6dRTBgaM/2000x2000'</span>) fixed;</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: cover;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.items</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">800px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid white;</span><br><span class=\"line\">  <span class=\"attribute\">overflow-x</span>: scroll;</span><br><span class=\"line\">  <span class=\"attribute\">overflow-y</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">white-space</span>: nowrap;</span><br><span class=\"line\">  <span class=\"attribute\">user-select</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.2s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">scale</span>(0.98);</span><br><span class=\"line\">  <span class=\"attribute\">will-change</span>: transform;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(255,255,255,0.1);</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">perspective</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.items</span><span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(255,255,255,0.3);</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: grabbing;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: -webkit-grabbing;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">scale</span>(1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"built_in\">calc</span>(100% - 40px);</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-flex;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">80px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">100</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">rgba</span>(0,0,0,0.15);</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: inset <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"built_in\">rgba</span>(0,0,0,0.15);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:nth-child(9n+1)</span> &#123; <span class=\"attribute\">background</span>: dodgerblue;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:nth-child(9n+2)</span> &#123; <span class=\"attribute\">background</span>: goldenrod;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:nth-child(9n+3)</span> &#123; <span class=\"attribute\">background</span>: paleturquoise;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:nth-child(9n+4)</span> &#123; <span class=\"attribute\">background</span>: gold;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:nth-child(9n+5)</span> &#123; <span class=\"attribute\">background</span>: cadetblue;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:nth-child(9n+6)</span> &#123; <span class=\"attribute\">background</span>: tomato;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:nth-child(9n+7)</span> &#123; <span class=\"attribute\">background</span>: lightcoral;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:nth-child(9n+8)</span> &#123; <span class=\"attribute\">background</span>: darkslateblue;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:nth-child(9n+9)</span> &#123; <span class=\"attribute\">background</span>: rebeccapurple;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:nth-child(even)</span> &#123; <span class=\"attribute\">transform</span>: <span class=\"built_in\">scaleX</span>(1.31) <span class=\"built_in\">rotateY</span>(40deg); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.item</span><span class=\"selector-pseudo\">:nth-child(odd)</span> &#123; <span class=\"attribute\">transform</span>: <span class=\"built_in\">scaleX</span>(1.31) <span class=\"built_in\">rotateY</span>(-40deg); &#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> slider = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.items'</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> isDown = <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> startX</span><br><span class=\"line\"><span class=\"keyword\">let</span> scrollLeft</span><br><span class=\"line\"></span><br><span class=\"line\">slider.addEventListener(<span class=\"string\">'mousedown'</span>, (e)=&gt; &#123;</span><br><span class=\"line\">  isDown = <span class=\"literal\">true</span></span><br><span class=\"line\">  slider.classList.add(<span class=\"string\">'active'</span>)</span><br><span class=\"line\">  startX = e.pageX - slider.offsetLeft <span class=\"comment\">// 要減掉 slider 本身的位移減掉</span></span><br><span class=\"line\">  scollLeft = slider.scrollLeft <span class=\"comment\">// 要記錄一開始 slider 已經捲了多少</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(e.pageX)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">slider.addEventListener(<span class=\"string\">'mouseleave'</span>, ()=&gt; &#123;</span><br><span class=\"line\">  isDown = <span class=\"literal\">false</span></span><br><span class=\"line\">  slider.classList.remove(<span class=\"string\">'active'</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">slider.addEventListener(<span class=\"string\">'mouseup'</span>, ()=&gt; &#123;</span><br><span class=\"line\">  isDown = <span class=\"literal\">false</span></span><br><span class=\"line\">  slider.classList.remove(<span class=\"string\">'active'</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">slider.addEventListener(<span class=\"string\">'mousemove'</span>, (e)=&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!isDown) <span class=\"keyword\">return</span>; <span class=\"comment\">// 如果沒有按滑鼠不觸發</span></span><br><span class=\"line\">  e.preventDefault() <span class=\"comment\">// 避免捲動的時候去選框框內文字</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> x = e.pageX - slider.offsetLeft</span><br><span class=\"line\">  walk = x - startX</span><br><span class=\"line\">  slider.scrollLeft = scollLeft - walk</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>"},{"title":"JS30 day28 Video Speed Controller","catalog":true,"toc_nav_num":true,"date":"2019-11-29T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1568033307171-bcb838d2a7e0?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Javascript"],"updateDate":"2019-11-29T14:26:24.000Z","_content":"# JS30 day28 - Video Speed Controller\n\n## 作業內容\n\n今天的作業是做出一個 bar 在影片旁邊，可以拉動調整影片速度，比較特別的是他是用純 div 做的而不是 input range\n說實在這次的還滿簡單的，幾乎可以自己把它做完，自己在做的時候就只有卡在不知道怎麼顯示倍數的文字而已\n![](https://i.imgur.com/dJtDZ2I.png)\n## 學到什麼\n- JS\n  1. 要怎麼換算倍率跟百分比？\n  首先拿到目前 mouse event 的高度，除以整個 bar 的高度得到百分比\n  ```js\n  let startY = e.pageY - this.offsetTop\n  const percent = startY / this.offsetHeight\n  const height = Math.round(percent * 100) + '%'\n  ```\n  再來是自訂最大最小倍率乘以百分比\n  ```js\n  const min = 0.4\n  const max = 4\n  const value = min + (max - min) * percent\n  bar.textContent = `${value.toFixed(2)}x`\n  ```\nhttps://github.com/wesbos/JavaScript30\n\n## code 內容：\nHTML:\n```html\n<div class=\"wrapper\">\n  <video class=\"flex\" width=\"765\" height=\"430\" src=\"http://clips.vorwaerts-gmbh.de/VfE_html5.mp4\" loop controls></video>\n  <div class=\"speed\">\n    <div class=\"speed-bar\">1×</div>\n  </div>\n</div>\n```\nCSS:\n```css\nbody {\n  margin: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background: #4C4C4C url('https://unsplash.it/1500/900?image=1021');\n  background-size: cover;\n  font-family: sans-serif;\n}\n\n.wrapper {\n  width: 850px;\n  display: flex;\n}\n\nvideo {\n  box-shadow: 0 0 1px 3px rgba(0,0,0,0.1);\n}\n\n.speed {\n  background: #efefef;\n  flex: 1;\n  display: flex;\n  align-items: flex-start;\n  margin: 10px;\n  border-radius: 50px;\n  box-shadow: 0 0 1px 3px rgba(0,0,0,0.1);\n  overflow: hidden;\n}\n\n.speed-bar {\n  width: 100%;\n  background: linear-gradient(-170deg, #2376ae 0%, #c16ecf 100%);\n  text-shadow: 1px 1px 0 rgba(0,0,0,0.2);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2px;\n  color: white;\n  height: 16.3%;\n}\n\n```\nJS:\n```js\nconst video = document.querySelector('.flex')\nconst bar = document.querySelector('.speed-bar')\nconst speed = document.querySelector('.speed')\nlet isDown = false\n\nspeed.addEventListener('mousemove', function(e){\n  if(!isDown) return;\n  let startY = e.pageY - this.offsetTop\n  const percent = startY / this.offsetHeight\n  const height = Math.round(percent * 100) + '%'\n  bar.style.height = height\n\n  const min = 0.4\n  const max = 4\n  const value = min + (max - min) * percent\n  bar.textContent = `${value.toFixed(2)}x`\n  video.playbackRate = value\n})\nspeed.addEventListener('mousedown', ()=>{ isDown = true })\nspeed.addEventListener('mouseleave', ()=>{ isDown = false })\nspeed.addEventListener('mouseup', ()=>{ isDown = false })\n\n```","source":"_posts/2019-11-29-JS30_day28.md","raw":"---\ntitle: \"JS30 day28 Video Speed Controller\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-29 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1568033307171-bcb838d2a7e0?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-29 22:26:24\n# top: 1\n\n---\n# JS30 day28 - Video Speed Controller\n\n## 作業內容\n\n今天的作業是做出一個 bar 在影片旁邊，可以拉動調整影片速度，比較特別的是他是用純 div 做的而不是 input range\n說實在這次的還滿簡單的，幾乎可以自己把它做完，自己在做的時候就只有卡在不知道怎麼顯示倍數的文字而已\n![](https://i.imgur.com/dJtDZ2I.png)\n## 學到什麼\n- JS\n  1. 要怎麼換算倍率跟百分比？\n  首先拿到目前 mouse event 的高度，除以整個 bar 的高度得到百分比\n  ```js\n  let startY = e.pageY - this.offsetTop\n  const percent = startY / this.offsetHeight\n  const height = Math.round(percent * 100) + '%'\n  ```\n  再來是自訂最大最小倍率乘以百分比\n  ```js\n  const min = 0.4\n  const max = 4\n  const value = min + (max - min) * percent\n  bar.textContent = `${value.toFixed(2)}x`\n  ```\nhttps://github.com/wesbos/JavaScript30\n\n## code 內容：\nHTML:\n```html\n<div class=\"wrapper\">\n  <video class=\"flex\" width=\"765\" height=\"430\" src=\"http://clips.vorwaerts-gmbh.de/VfE_html5.mp4\" loop controls></video>\n  <div class=\"speed\">\n    <div class=\"speed-bar\">1×</div>\n  </div>\n</div>\n```\nCSS:\n```css\nbody {\n  margin: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background: #4C4C4C url('https://unsplash.it/1500/900?image=1021');\n  background-size: cover;\n  font-family: sans-serif;\n}\n\n.wrapper {\n  width: 850px;\n  display: flex;\n}\n\nvideo {\n  box-shadow: 0 0 1px 3px rgba(0,0,0,0.1);\n}\n\n.speed {\n  background: #efefef;\n  flex: 1;\n  display: flex;\n  align-items: flex-start;\n  margin: 10px;\n  border-radius: 50px;\n  box-shadow: 0 0 1px 3px rgba(0,0,0,0.1);\n  overflow: hidden;\n}\n\n.speed-bar {\n  width: 100%;\n  background: linear-gradient(-170deg, #2376ae 0%, #c16ecf 100%);\n  text-shadow: 1px 1px 0 rgba(0,0,0,0.2);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2px;\n  color: white;\n  height: 16.3%;\n}\n\n```\nJS:\n```js\nconst video = document.querySelector('.flex')\nconst bar = document.querySelector('.speed-bar')\nconst speed = document.querySelector('.speed')\nlet isDown = false\n\nspeed.addEventListener('mousemove', function(e){\n  if(!isDown) return;\n  let startY = e.pageY - this.offsetTop\n  const percent = startY / this.offsetHeight\n  const height = Math.round(percent * 100) + '%'\n  bar.style.height = height\n\n  const min = 0.4\n  const max = 4\n  const value = min + (max - min) * percent\n  bar.textContent = `${value.toFixed(2)}x`\n  video.playbackRate = value\n})\nspeed.addEventListener('mousedown', ()=>{ isDown = true })\nspeed.addEventListener('mouseleave', ()=>{ isDown = false })\nspeed.addEventListener('mouseup', ()=>{ isDown = false })\n\n```","slug":"2019-11-29-JS30_day28","published":1,"updated":"2019-12-04T05:50:29.590Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0evb00342ob12kg5h0ke","content":"<h1 id=\"js30-day28-video-speed-controller\">JS30 day28 - Video Speed Controller</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天的作業是做出一個 bar 在影片旁邊，可以拉動調整影片速度，比較特別的是他是用純 div 做的而不是 input range<br>\n說實在這次的還滿簡單的，幾乎可以自己把它做完，自己在做的時候就只有卡在不知道怎麼顯示倍數的文字而已<br>\n<img src=\"https://i.imgur.com/dJtDZ2I.png\" alt=\"\"></p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li>要怎麼換算倍率跟百分比？<br>\n首先拿到目前 mouse event 的高度，除以整個 bar 的高度得到百分比</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> startY = e.pageY - <span class=\"keyword\">this</span>.offsetTop</span><br><span class=\"line\"><span class=\"keyword\">const</span> percent = startY / <span class=\"keyword\">this</span>.offsetHeight</span><br><span class=\"line\"><span class=\"keyword\">const</span> height = <span class=\"built_in\">Math</span>.round(percent * <span class=\"number\">100</span>) + <span class=\"string\">'%'</span></span><br></pre></td></tr></table></figure>\n<p>再來是自訂最大最小倍率乘以百分比</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> min = <span class=\"number\">0.4</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> max = <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> value = min + (max - min) * percent</span><br><span class=\"line\">bar.textContent = <span class=\"string\">`<span class=\"subst\">$&#123;value.toFixed(<span class=\"number\">2</span>)&#125;</span>x`</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<h2 id=\"code-內容\">code 內容：</h2>\n<p>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrapper\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">class</span>=<span class=\"string\">\"flex\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"765\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"430\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://clips.vorwaerts-gmbh.de/VfE_html5.mp4\"</span> <span class=\"attr\">loop</span> <span class=\"attr\">controls</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"speed\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"speed-bar\"</span>&gt;</span>1×<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#4C4C4C</span> <span class=\"built_in\">url</span>(<span class=\"string\">'https://unsplash.it/1500/900?image=1021'</span>);</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: cover;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: sans-serif;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.wrapper</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">850px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">video</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"built_in\">rgba</span>(0,0,0,0.1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.speed</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#efefef</span>;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: flex-start;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"built_in\">rgba</span>(0,0,0,0.1);</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.speed-bar</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(-170deg, #2376ae 0%, #c16ecf 100%);</span><br><span class=\"line\">  <span class=\"attribute\">text-shadow</span>: <span class=\"number\">1px</span> <span class=\"number\">1px</span> <span class=\"number\">0</span> <span class=\"built_in\">rgba</span>(0,0,0,0.2);</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">16.3%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> video = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.flex'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> bar = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.speed-bar'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> speed = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.speed'</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> isDown = <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">speed.addEventListener(<span class=\"string\">'mousemove'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!isDown) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> startY = e.pageY - <span class=\"keyword\">this</span>.offsetTop</span><br><span class=\"line\">  <span class=\"keyword\">const</span> percent = startY / <span class=\"keyword\">this</span>.offsetHeight</span><br><span class=\"line\">  <span class=\"keyword\">const</span> height = <span class=\"built_in\">Math</span>.round(percent * <span class=\"number\">100</span>) + <span class=\"string\">'%'</span></span><br><span class=\"line\">  bar.style.height = height</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> min = <span class=\"number\">0.4</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> max = <span class=\"number\">4</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> value = min + (max - min) * percent</span><br><span class=\"line\">  bar.textContent = <span class=\"string\">`<span class=\"subst\">$&#123;value.toFixed(<span class=\"number\">2</span>)&#125;</span>x`</span></span><br><span class=\"line\">  video.playbackRate = value</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">speed.addEventListener(<span class=\"string\">'mousedown'</span>, ()=&gt;&#123; isDown = <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\">speed.addEventListener(<span class=\"string\">'mouseleave'</span>, ()=&gt;&#123; isDown = <span class=\"literal\">false</span> &#125;)</span><br><span class=\"line\">speed.addEventListener(<span class=\"string\">'mouseup'</span>, ()=&gt;&#123; isDown = <span class=\"literal\">false</span> &#125;)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day28 - Video Speed Controller</h1>\n<h2>作業內容</h2>\n<p>今天的作業是做出一個 bar 在影片旁邊，可以拉動調整影片速度，比較特別的是他是用純 div 做的而不是 input range<br>\n說實在這次的還滿簡單的，幾乎可以自己把它做完，自己在做的時候就只有卡在不知道怎麼顯示倍數的文字而已<br>\n<img src=\"https://i.imgur.com/dJtDZ2I.png\" alt=\"\"></p>\n<h2>學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li>要怎麼換算倍率跟百分比？<br>\n首先拿到目前 mouse event 的高度，除以整個 bar 的高度得到百分比</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> startY = e.pageY - <span class=\"keyword\">this</span>.offsetTop</span><br><span class=\"line\"><span class=\"keyword\">const</span> percent = startY / <span class=\"keyword\">this</span>.offsetHeight</span><br><span class=\"line\"><span class=\"keyword\">const</span> height = <span class=\"built_in\">Math</span>.round(percent * <span class=\"number\">100</span>) + <span class=\"string\">'%'</span></span><br></pre></td></tr></table></figure>\n<p>再來是自訂最大最小倍率乘以百分比</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> min = <span class=\"number\">0.4</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> max = <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> value = min + (max - min) * percent</span><br><span class=\"line\">bar.textContent = <span class=\"string\">`<span class=\"subst\">$&#123;value.toFixed(<span class=\"number\">2</span>)&#125;</span>x`</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<h2>code 內容：</h2>\n<p>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrapper\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">class</span>=<span class=\"string\">\"flex\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"765\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"430\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://clips.vorwaerts-gmbh.de/VfE_html5.mp4\"</span> <span class=\"attr\">loop</span> <span class=\"attr\">controls</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"speed\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"speed-bar\"</span>&gt;</span>1×<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#4C4C4C</span> <span class=\"built_in\">url</span>(<span class=\"string\">'https://unsplash.it/1500/900?image=1021'</span>);</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: cover;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: sans-serif;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.wrapper</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">850px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">video</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"built_in\">rgba</span>(0,0,0,0.1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.speed</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#efefef</span>;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: flex-start;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"built_in\">rgba</span>(0,0,0,0.1);</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.speed-bar</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(-170deg, #2376ae 0%, #c16ecf 100%);</span><br><span class=\"line\">  <span class=\"attribute\">text-shadow</span>: <span class=\"number\">1px</span> <span class=\"number\">1px</span> <span class=\"number\">0</span> <span class=\"built_in\">rgba</span>(0,0,0,0.2);</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">16.3%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> video = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.flex'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> bar = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.speed-bar'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> speed = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.speed'</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> isDown = <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">speed.addEventListener(<span class=\"string\">'mousemove'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!isDown) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> startY = e.pageY - <span class=\"keyword\">this</span>.offsetTop</span><br><span class=\"line\">  <span class=\"keyword\">const</span> percent = startY / <span class=\"keyword\">this</span>.offsetHeight</span><br><span class=\"line\">  <span class=\"keyword\">const</span> height = <span class=\"built_in\">Math</span>.round(percent * <span class=\"number\">100</span>) + <span class=\"string\">'%'</span></span><br><span class=\"line\">  bar.style.height = height</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> min = <span class=\"number\">0.4</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> max = <span class=\"number\">4</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> value = min + (max - min) * percent</span><br><span class=\"line\">  bar.textContent = <span class=\"string\">`<span class=\"subst\">$&#123;value.toFixed(<span class=\"number\">2</span>)&#125;</span>x`</span></span><br><span class=\"line\">  video.playbackRate = value</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">speed.addEventListener(<span class=\"string\">'mousedown'</span>, ()=&gt;&#123; isDown = <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\">speed.addEventListener(<span class=\"string\">'mouseleave'</span>, ()=&gt;&#123; isDown = <span class=\"literal\">false</span> &#125;)</span><br><span class=\"line\">speed.addEventListener(<span class=\"string\">'mouseup'</span>, ()=&gt;&#123; isDown = <span class=\"literal\">false</span> &#125;)</span><br></pre></td></tr></table></figure>"},{"title":"JS30 day29 Countdown Timer","catalog":true,"toc_nav_num":true,"date":"2019-11-30T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1574983097346-bf874abb9eac?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Javascript"],"updateDate":"2019-11-30T14:26:24.000Z","_content":"# JS30 day29 - Countdown Timer\n\n## 作業內容\n\n今天的作業是做出一個倒數的頁面，有按鈕可按，也可以自訂要倒數幾分鐘\n雖然聽起來頗為簡單，但做起來要超多細節要注意\n可以看這份 [codepen](https://codepen.io/gbvjpsln/pen/RwNbZbN)\n![](https://i.imgur.com/GxflimM.jpg)\n## 學到什麼\n- JS\n  1. \n  直覺想到倒數的功能是使用 setInterval\n  可是這會有幾個比較不友好的點：比方說在 ios 上面 scroll 的時候他自動會把這功能停掉，你滾動 10 秒的話倒數就少了 10 秒，所以建議不要在這邊用 setInterval\n  ```js\n  function timer(seconds){\n    setInterval(function(){\n      seconds--;\n    }, 1000)\n  }\n  ```\n  2. 讓 setInterval 在倒數完之後不繼續運作\n  最直覺想到的可能會是這樣：\n  ```js\n    setInterval(function(){\n      const secondsLeft = Math.round((then - Date.now()) / 1000)\n      if(secondsLeft < 0) return;\n      console.log(secondsLeft)\n    }, 1000)\n  ```\n  但 return 不能真正解決問題，他只是不繼續往下執行，每秒還是會觸發這個事件，所以要用 cleanInterval\n  我們要在他自己的方法裡面停掉自己，所以先做出一個 global 的 coundown 變數再用 clearInterval 停掉它\n  ```js\n  let countdown\n\n  function timer(seconds){\n    // const now = (new Date()).getTime()\n    // 上面這種寫法也可以\n    const now = Date.now() // mili seconds 的形式\n    const then = now + seconds * 1000\n    countdown = setInterval(function(){\n      const secondsLeft = Math.round((then - Date.now()) / 1000)\n      if(secondsLeft < 0) {\n        clearInterval(countdown)\n        return\n      }\n      console.log(secondsLeft)\n    }, 1000)\n  }\n  ```\n  3. 有個很細節的地方：目前我們呼叫 timer 的時候，他當下不會觸發時間，而是過一秒之後才開始，可以看下圖，想要的效果是如果呼叫 `timer(10)` 當下會先說出 10 \n  ![](https://i.imgur.com/u1msPlB.png)\n  因此我們要改成這樣\n  ```js\n  function timer(seconds){\n  // const now = (new Date()).getTime()\n  // 上面這種寫法也可以\n  const now = Date.now() // mili seconds 的形式\n  const then = now + seconds * 1000\n\n  displayTimeLeft(seconds)\n\n  countdown = setInterval(function(){\n      const secondsLeft = Math.round((then - Date.now()) / 1000)\n      if(secondsLeft < 0) {\n        clearInterval(countdown)\n        return\n      }\n      displayTimeLeft(secondsLeft)\n    }, 1000)\n  }\n\n  function displayTimeLeft(seconds){\n    console.log(seconds)\n  }\n  ```\n  4. 如果在按下一個 timer 又按另一個 timer 之後，這些 setInterval 的效果會疊加，所以在開始另一個之前要先把先前的停掉\n  ```js\n  function timer(seconds){\n  // 開始另一個 timer 之前先把之前的 setInterval 停掉\n    clearInterval(countdown)\n  // 下略\n  ```\n  5. 我們可以直接用 `document.<form 的 name>` 這個方式來呼叫 form，可以再用一層呼叫 input 的 name\n  ```html\n  <form name=\"customForm\" id=\"custom\">\n    <input type=\"text\" name=\"minutes\" placeholder=\"Enter Minutes\">\n  </form>\n  ```\n  ```js\n  document.customForm\n  // <form name=\"customForm\" id=\"custom\">\n  document.customForm.minutes\n  // <input type=\"text\" name=\"minutes\" placeholder=\"Enter Minutes\">\n  ```\nhttps://github.com/wesbos/JavaScript30\n\n## code 內容：\nHTML:\n```html\n<div class=\"timer\">\n  <div class=\"timer__controls\">\n    <button data-time=\"20\" class=\"timer__button\">20 Secs</button>\n    <button data-time=\"300\" class=\"timer__button\">Work 5</button>\n    <button data-time=\"900\" class=\"timer__button\">Quick 15</button>\n    <button data-time=\"1200\" class=\"timer__button\">Snack 20</button>\n    <button data-time=\"3600\" class=\"timer__button\">Lunch Break</button>\n    <form name=\"customForm\" id=\"custom\">\n      <input type=\"text\" name=\"minutes\" placeholder=\"Enter Minutes\">\n    </form>\n  </div>\n  <div class=\"display\">\n    <h1 class=\"display__time-left\"></h1>\n    <p class=\"display__end-time\"></p>\n  </div>\n</div>\n```\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n  font-size: 10px;\n  background: #8E24AA;\n  background: linear-gradient(45deg,  #42a5f5 0%,#478ed1 50%,#0d47a1 100%);\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nbody {\n  margin: 0;\n  text-align: center;\n  font-family: 'Inconsolata', monospace;\n}\n\n.display__time-left {\n  font-weight: 100;\n  font-size: 20rem;\n  margin: 0;\n  color: white;\n  text-shadow: 4px 4px 0 rgba(0,0,0,0.05);\n}\n\n.timer {\n  display: flex;\n  min-height: 100vh;\n  flex-direction: column;\n}\n\n.timer__controls {\n  display: flex;\n}\n\n.timer__controls > * {\n  flex: 1;\n}\n\n.timer__controls form {\n  flex: 1;\n  display: flex;\n}\n\n.timer__controls input {\n  flex: 1;\n  border: 0;\n  padding: 2rem;\n}\n\n.timer__button {\n  background: none;\n  border: 0;\n  cursor: pointer;\n  color: white;\n  font-size: 2rem;\n  text-transform: uppercase;\n  background: rgba(0,0,0,0.1);\n  border-bottom: 3px solid rgba(0,0,0,0.2);\n  border-right: 1px solid rgba(0,0,0,0.2);\n  padding: 1rem;\n  font-family: 'Inconsolata', monospace;\n}\n\n.timer__button:hover,\n.timer__button:focus {\n  background: rgba(0,0,0,0.2);\n  outline: 0;\n}\n\n.display {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.display__end-time {\n  font-size: 4rem;\n  color: white;\n}\n\n```\nJS:\n```js\nlet countdown\nconst timerDisplay = document.querySelector('.display__time-left')\nconst endTime = document.querySelector('.display__end-time')\nconst buttons = document.querySelectorAll('[data-time]')\n\nfunction timer(seconds){\n  // 開始另一個 timer 之前先把之前的 setInterval 停掉\n  clearInterval(countdown)\n  // const now = (new Date()).getTime()\n  // 上面這種寫法也可以\n  const now = Date.now() // mili seconds 的形式\n  const then = now + seconds * 1000\n  displayEndTime(then)\n  displayTimeLeft(seconds)\n\n  countdown = setInterval(function(){\n    const secondsLeft = Math.round((then - Date.now()) / 1000)\n    if(secondsLeft < 0) {\n      clearInterval(countdown)\n      return\n    }\n    displayTimeLeft(secondsLeft)\n  }, 1000)\n}\n\nfunction displayTimeLeft(seconds){\n  const minutes = Math.floor(seconds / 60)\n  const remainSeconds = seconds % 60\n  const display = `${minutes}:${remainSeconds < 10 ? '0' : ''}${remainSeconds}`\n  document.title = display\n  timerDisplay.textContent = display\n}\n\nfunction displayEndTime(timestamp){\n  const end = new Date(timestamp)\n  const hours = end.getHours()\n  const minutes = end.getMinutes()\n  endTime.textContent = `Be Back At ${hours}:${minutes < 10 ? '0' : ''}${minutes}`\n}\n\nfunction startTimer(){\n  const period = this.dataset.time\n  timer(period)\n}\n\nbuttons.forEach(button => button.addEventListener('click', startTimer))\n\ndocument.customForm.addEventListener('submit', function(e){\n  e.preventDefault()\n  const mins = this.minutes.value\n  timer(mins * 60)\n  this.reset()\n})\n```","source":"_posts/2019-11-30-JS30_day29.md","raw":"---\ntitle: \"JS30 day29 Countdown Timer\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-30 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1574983097346-bf874abb9eac?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-30 22:26:24\n# top: 1\n\n---\n# JS30 day29 - Countdown Timer\n\n## 作業內容\n\n今天的作業是做出一個倒數的頁面，有按鈕可按，也可以自訂要倒數幾分鐘\n雖然聽起來頗為簡單，但做起來要超多細節要注意\n可以看這份 [codepen](https://codepen.io/gbvjpsln/pen/RwNbZbN)\n![](https://i.imgur.com/GxflimM.jpg)\n## 學到什麼\n- JS\n  1. \n  直覺想到倒數的功能是使用 setInterval\n  可是這會有幾個比較不友好的點：比方說在 ios 上面 scroll 的時候他自動會把這功能停掉，你滾動 10 秒的話倒數就少了 10 秒，所以建議不要在這邊用 setInterval\n  ```js\n  function timer(seconds){\n    setInterval(function(){\n      seconds--;\n    }, 1000)\n  }\n  ```\n  2. 讓 setInterval 在倒數完之後不繼續運作\n  最直覺想到的可能會是這樣：\n  ```js\n    setInterval(function(){\n      const secondsLeft = Math.round((then - Date.now()) / 1000)\n      if(secondsLeft < 0) return;\n      console.log(secondsLeft)\n    }, 1000)\n  ```\n  但 return 不能真正解決問題，他只是不繼續往下執行，每秒還是會觸發這個事件，所以要用 cleanInterval\n  我們要在他自己的方法裡面停掉自己，所以先做出一個 global 的 coundown 變數再用 clearInterval 停掉它\n  ```js\n  let countdown\n\n  function timer(seconds){\n    // const now = (new Date()).getTime()\n    // 上面這種寫法也可以\n    const now = Date.now() // mili seconds 的形式\n    const then = now + seconds * 1000\n    countdown = setInterval(function(){\n      const secondsLeft = Math.round((then - Date.now()) / 1000)\n      if(secondsLeft < 0) {\n        clearInterval(countdown)\n        return\n      }\n      console.log(secondsLeft)\n    }, 1000)\n  }\n  ```\n  3. 有個很細節的地方：目前我們呼叫 timer 的時候，他當下不會觸發時間，而是過一秒之後才開始，可以看下圖，想要的效果是如果呼叫 `timer(10)` 當下會先說出 10 \n  ![](https://i.imgur.com/u1msPlB.png)\n  因此我們要改成這樣\n  ```js\n  function timer(seconds){\n  // const now = (new Date()).getTime()\n  // 上面這種寫法也可以\n  const now = Date.now() // mili seconds 的形式\n  const then = now + seconds * 1000\n\n  displayTimeLeft(seconds)\n\n  countdown = setInterval(function(){\n      const secondsLeft = Math.round((then - Date.now()) / 1000)\n      if(secondsLeft < 0) {\n        clearInterval(countdown)\n        return\n      }\n      displayTimeLeft(secondsLeft)\n    }, 1000)\n  }\n\n  function displayTimeLeft(seconds){\n    console.log(seconds)\n  }\n  ```\n  4. 如果在按下一個 timer 又按另一個 timer 之後，這些 setInterval 的效果會疊加，所以在開始另一個之前要先把先前的停掉\n  ```js\n  function timer(seconds){\n  // 開始另一個 timer 之前先把之前的 setInterval 停掉\n    clearInterval(countdown)\n  // 下略\n  ```\n  5. 我們可以直接用 `document.<form 的 name>` 這個方式來呼叫 form，可以再用一層呼叫 input 的 name\n  ```html\n  <form name=\"customForm\" id=\"custom\">\n    <input type=\"text\" name=\"minutes\" placeholder=\"Enter Minutes\">\n  </form>\n  ```\n  ```js\n  document.customForm\n  // <form name=\"customForm\" id=\"custom\">\n  document.customForm.minutes\n  // <input type=\"text\" name=\"minutes\" placeholder=\"Enter Minutes\">\n  ```\nhttps://github.com/wesbos/JavaScript30\n\n## code 內容：\nHTML:\n```html\n<div class=\"timer\">\n  <div class=\"timer__controls\">\n    <button data-time=\"20\" class=\"timer__button\">20 Secs</button>\n    <button data-time=\"300\" class=\"timer__button\">Work 5</button>\n    <button data-time=\"900\" class=\"timer__button\">Quick 15</button>\n    <button data-time=\"1200\" class=\"timer__button\">Snack 20</button>\n    <button data-time=\"3600\" class=\"timer__button\">Lunch Break</button>\n    <form name=\"customForm\" id=\"custom\">\n      <input type=\"text\" name=\"minutes\" placeholder=\"Enter Minutes\">\n    </form>\n  </div>\n  <div class=\"display\">\n    <h1 class=\"display__time-left\"></h1>\n    <p class=\"display__end-time\"></p>\n  </div>\n</div>\n```\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n  font-size: 10px;\n  background: #8E24AA;\n  background: linear-gradient(45deg,  #42a5f5 0%,#478ed1 50%,#0d47a1 100%);\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nbody {\n  margin: 0;\n  text-align: center;\n  font-family: 'Inconsolata', monospace;\n}\n\n.display__time-left {\n  font-weight: 100;\n  font-size: 20rem;\n  margin: 0;\n  color: white;\n  text-shadow: 4px 4px 0 rgba(0,0,0,0.05);\n}\n\n.timer {\n  display: flex;\n  min-height: 100vh;\n  flex-direction: column;\n}\n\n.timer__controls {\n  display: flex;\n}\n\n.timer__controls > * {\n  flex: 1;\n}\n\n.timer__controls form {\n  flex: 1;\n  display: flex;\n}\n\n.timer__controls input {\n  flex: 1;\n  border: 0;\n  padding: 2rem;\n}\n\n.timer__button {\n  background: none;\n  border: 0;\n  cursor: pointer;\n  color: white;\n  font-size: 2rem;\n  text-transform: uppercase;\n  background: rgba(0,0,0,0.1);\n  border-bottom: 3px solid rgba(0,0,0,0.2);\n  border-right: 1px solid rgba(0,0,0,0.2);\n  padding: 1rem;\n  font-family: 'Inconsolata', monospace;\n}\n\n.timer__button:hover,\n.timer__button:focus {\n  background: rgba(0,0,0,0.2);\n  outline: 0;\n}\n\n.display {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.display__end-time {\n  font-size: 4rem;\n  color: white;\n}\n\n```\nJS:\n```js\nlet countdown\nconst timerDisplay = document.querySelector('.display__time-left')\nconst endTime = document.querySelector('.display__end-time')\nconst buttons = document.querySelectorAll('[data-time]')\n\nfunction timer(seconds){\n  // 開始另一個 timer 之前先把之前的 setInterval 停掉\n  clearInterval(countdown)\n  // const now = (new Date()).getTime()\n  // 上面這種寫法也可以\n  const now = Date.now() // mili seconds 的形式\n  const then = now + seconds * 1000\n  displayEndTime(then)\n  displayTimeLeft(seconds)\n\n  countdown = setInterval(function(){\n    const secondsLeft = Math.round((then - Date.now()) / 1000)\n    if(secondsLeft < 0) {\n      clearInterval(countdown)\n      return\n    }\n    displayTimeLeft(secondsLeft)\n  }, 1000)\n}\n\nfunction displayTimeLeft(seconds){\n  const minutes = Math.floor(seconds / 60)\n  const remainSeconds = seconds % 60\n  const display = `${minutes}:${remainSeconds < 10 ? '0' : ''}${remainSeconds}`\n  document.title = display\n  timerDisplay.textContent = display\n}\n\nfunction displayEndTime(timestamp){\n  const end = new Date(timestamp)\n  const hours = end.getHours()\n  const minutes = end.getMinutes()\n  endTime.textContent = `Be Back At ${hours}:${minutes < 10 ? '0' : ''}${minutes}`\n}\n\nfunction startTimer(){\n  const period = this.dataset.time\n  timer(period)\n}\n\nbuttons.forEach(button => button.addEventListener('click', startTimer))\n\ndocument.customForm.addEventListener('submit', function(e){\n  e.preventDefault()\n  const mins = this.minutes.value\n  timer(mins * 60)\n  this.reset()\n})\n```","slug":"2019-11-30-JS30_day29","published":1,"updated":"2019-12-04T05:50:34.724Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0evc00362ob170dq3lx4","content":"<h1 id=\"js30-day29-countdown-timer\">JS30 day29 - Countdown Timer</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天的作業是做出一個倒數的頁面，有按鈕可按，也可以自訂要倒數幾分鐘<br>\n雖然聽起來頗為簡單，但做起來要超多細節要注意<br>\n可以看這份 <a href=\"https://codepen.io/gbvjpsln/pen/RwNbZbN\" target=\"_blank\" rel=\"noopener\">codepen</a><br>\n<img src=\"https://i.imgur.com/GxflimM.jpg\" alt=\"\"></p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li></li>\n</ol>\n<p>直覺想到倒數的功能是使用 setInterval<br>\n可是這會有幾個比較不友好的點：比方說在 ios 上面 scroll 的時候他自動會把這功能停掉，你滾動 10 秒的話倒數就少了 10 秒，所以建議不要在這邊用 setInterval</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\">seconds</span>)</span>&#123;</span><br><span class=\"line\">  setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    seconds--;</span><br><span class=\"line\">  &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>讓 setInterval 在倒數完之後不繼續運作<br>\n最直覺想到的可能會是這樣：</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> secondsLeft = <span class=\"built_in\">Math</span>.round((then - <span class=\"built_in\">Date</span>.now()) / <span class=\"number\">1000</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(secondsLeft &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(secondsLeft)</span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span>)</span><br></pre></td></tr></table></figure>\n<p>但 return 不能真正解決問題，他只是不繼續往下執行，每秒還是會觸發這個事件，所以要用 cleanInterval<br>\n我們要在他自己的方法裡面停掉自己，所以先做出一個 global 的 coundown 變數再用 clearInterval 停掉它</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> countdown</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\">seconds</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// const now = (new Date()).getTime()</span></span><br><span class=\"line\">  <span class=\"comment\">// 上面這種寫法也可以</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> now = <span class=\"built_in\">Date</span>.now() <span class=\"comment\">// mili seconds 的形式</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> then = now + seconds * <span class=\"number\">1000</span></span><br><span class=\"line\">  countdown = setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> secondsLeft = <span class=\"built_in\">Math</span>.round((then - <span class=\"built_in\">Date</span>.now()) / <span class=\"number\">1000</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(secondsLeft &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      clearInterval(countdown)</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(secondsLeft)</span><br><span class=\"line\">  &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>有個很細節的地方：目前我們呼叫 timer 的時候，他當下不會觸發時間，而是過一秒之後才開始，可以看下圖，想要的效果是如果呼叫 <code>timer(10)</code> 當下會先說出 10<br>\n<img src=\"https://i.imgur.com/u1msPlB.png\" alt=\"\"><br>\n因此我們要改成這樣</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\">seconds</span>)</span>&#123;</span><br><span class=\"line\"><span class=\"comment\">// const now = (new Date()).getTime()</span></span><br><span class=\"line\"><span class=\"comment\">// 上面這種寫法也可以</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> now = <span class=\"built_in\">Date</span>.now() <span class=\"comment\">// mili seconds 的形式</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> then = now + seconds * <span class=\"number\">1000</span></span><br><span class=\"line\"></span><br><span class=\"line\">displayTimeLeft(seconds)</span><br><span class=\"line\"></span><br><span class=\"line\">countdown = setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> secondsLeft = <span class=\"built_in\">Math</span>.round((then - <span class=\"built_in\">Date</span>.now()) / <span class=\"number\">1000</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(secondsLeft &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      clearInterval(countdown)</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    displayTimeLeft(secondsLeft)</span><br><span class=\"line\">  &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">displayTimeLeft</span>(<span class=\"params\">seconds</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(seconds)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>如果在按下一個 timer 又按另一個 timer 之後，這些 setInterval 的效果會疊加，所以在開始另一個之前要先把先前的停掉</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\">seconds</span>)</span>&#123;</span><br><span class=\"line\"><span class=\"comment\">// 開始另一個 timer 之前先把之前的 setInterval 停掉</span></span><br><span class=\"line\">  clearInterval(countdown)</span><br><span class=\"line\"><span class=\"comment\">// 下略</span></span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>我們可以直接用 <code>document.&lt;form 的 name&gt;</code> 這個方式來呼叫 form，可以再用一層呼叫 input 的 name</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">name</span>=<span class=\"string\">\"customForm\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"custom\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"minutes\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"Enter Minutes\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.customForm</span><br><span class=\"line\"><span class=\"comment\">// &lt;form name=\"customForm\" id=\"custom\"&gt;</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.customForm.minutes</span><br><span class=\"line\"><span class=\"comment\">// &lt;input type=\"text\" name=\"minutes\" placeholder=\"Enter Minutes\"&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<h2 id=\"code-內容\">code 內容：</h2>\n<p>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"timer\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"timer__controls\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">data-time</span>=<span class=\"string\">\"20\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"timer__button\"</span>&gt;</span>20 Secs<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">data-time</span>=<span class=\"string\">\"300\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"timer__button\"</span>&gt;</span>Work 5<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">data-time</span>=<span class=\"string\">\"900\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"timer__button\"</span>&gt;</span>Quick 15<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">data-time</span>=<span class=\"string\">\"1200\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"timer__button\"</span>&gt;</span>Snack 20<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">data-time</span>=<span class=\"string\">\"3600\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"timer__button\"</span>&gt;</span>Lunch Break<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">name</span>=<span class=\"string\">\"customForm\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"custom\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"minutes\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"Enter Minutes\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"display\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"display__time-left\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"display__end-time\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#8E24AA</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(45deg,  #42a5f5 0%,#478ed1 50%,#0d47a1 100%);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'Inconsolata'</span>, monospace;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.display__time-left</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">100</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">text-shadow</span>: <span class=\"number\">4px</span> <span class=\"number\">4px</span> <span class=\"number\">0</span> <span class=\"built_in\">rgba</span>(0,0,0,0.05);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.timer</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">  <span class=\"attribute\">flex-direction</span>: column;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.timer__controls</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.timer__controls</span> &gt; * &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.timer__controls</span> <span class=\"selector-tag\">form</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.timer__controls</span> <span class=\"selector-tag\">input</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">2rem</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.timer__button</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">2rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-transform</span>: uppercase;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(0,0,0,0.1);</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">3px</span> solid <span class=\"built_in\">rgba</span>(0,0,0,0.2);</span><br><span class=\"line\">  <span class=\"attribute\">border-right</span>: <span class=\"number\">1px</span> solid <span class=\"built_in\">rgba</span>(0,0,0,0.2);</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'Inconsolata'</span>, monospace;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.timer__button</span><span class=\"selector-pseudo\">:hover</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.timer__button</span><span class=\"selector-pseudo\">:focus</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(0,0,0,0.2);</span><br><span class=\"line\">  <span class=\"attribute\">outline</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.display</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">flex-direction</span>: column;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.display__end-time</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">4rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> countdown</span><br><span class=\"line\"><span class=\"keyword\">const</span> timerDisplay = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.display__time-left'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> endTime = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.display__end-time'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> buttons = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'[data-time]'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\">seconds</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 開始另一個 timer 之前先把之前的 setInterval 停掉</span></span><br><span class=\"line\">  clearInterval(countdown)</span><br><span class=\"line\">  <span class=\"comment\">// const now = (new Date()).getTime()</span></span><br><span class=\"line\">  <span class=\"comment\">// 上面這種寫法也可以</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> now = <span class=\"built_in\">Date</span>.now() <span class=\"comment\">// mili seconds 的形式</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> then = now + seconds * <span class=\"number\">1000</span></span><br><span class=\"line\">  displayEndTime(then)</span><br><span class=\"line\">  displayTimeLeft(seconds)</span><br><span class=\"line\"></span><br><span class=\"line\">  countdown = setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> secondsLeft = <span class=\"built_in\">Math</span>.round((then - <span class=\"built_in\">Date</span>.now()) / <span class=\"number\">1000</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(secondsLeft &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      clearInterval(countdown)</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    displayTimeLeft(secondsLeft)</span><br><span class=\"line\">  &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">displayTimeLeft</span>(<span class=\"params\">seconds</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> minutes = <span class=\"built_in\">Math</span>.floor(seconds / <span class=\"number\">60</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> remainSeconds = seconds % <span class=\"number\">60</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> display = <span class=\"string\">`<span class=\"subst\">$&#123;minutes&#125;</span>:<span class=\"subst\">$&#123;remainSeconds &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> : <span class=\"string\">''</span>&#125;</span><span class=\"subst\">$&#123;remainSeconds&#125;</span>`</span></span><br><span class=\"line\">  <span class=\"built_in\">document</span>.title = display</span><br><span class=\"line\">  timerDisplay.textContent = display</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">displayEndTime</span>(<span class=\"params\">timestamp</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> end = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(timestamp)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> hours = end.getHours()</span><br><span class=\"line\">  <span class=\"keyword\">const</span> minutes = end.getMinutes()</span><br><span class=\"line\">  endTime.textContent = <span class=\"string\">`Be Back At <span class=\"subst\">$&#123;hours&#125;</span>:<span class=\"subst\">$&#123;minutes &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> : <span class=\"string\">''</span>&#125;</span><span class=\"subst\">$&#123;minutes&#125;</span>`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">startTimer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> period = <span class=\"keyword\">this</span>.dataset.time</span><br><span class=\"line\">  timer(period)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">buttons.forEach(<span class=\"function\"><span class=\"params\">button</span> =&gt;</span> button.addEventListener(<span class=\"string\">'click'</span>, startTimer))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">document</span>.customForm.addEventListener(<span class=\"string\">'submit'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  e.preventDefault()</span><br><span class=\"line\">  <span class=\"keyword\">const</span> mins = <span class=\"keyword\">this</span>.minutes.value</span><br><span class=\"line\">  timer(mins * <span class=\"number\">60</span>)</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.reset()</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day29 - Countdown Timer</h1>\n<h2>作業內容</h2>\n<p>今天的作業是做出一個倒數的頁面，有按鈕可按，也可以自訂要倒數幾分鐘<br>\n雖然聽起來頗為簡單，但做起來要超多細節要注意<br>\n可以看這份 <a href=\"https://codepen.io/gbvjpsln/pen/RwNbZbN\" target=\"_blank\" rel=\"noopener\">codepen</a><br>\n<img src=\"https://i.imgur.com/GxflimM.jpg\" alt=\"\"></p>\n<h2>學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li></li>\n</ol>\n<p>直覺想到倒數的功能是使用 setInterval<br>\n可是這會有幾個比較不友好的點：比方說在 ios 上面 scroll 的時候他自動會把這功能停掉，你滾動 10 秒的話倒數就少了 10 秒，所以建議不要在這邊用 setInterval</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\">seconds</span>)</span>&#123;</span><br><span class=\"line\">  setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    seconds--;</span><br><span class=\"line\">  &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>讓 setInterval 在倒數完之後不繼續運作<br>\n最直覺想到的可能會是這樣：</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> secondsLeft = <span class=\"built_in\">Math</span>.round((then - <span class=\"built_in\">Date</span>.now()) / <span class=\"number\">1000</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(secondsLeft &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(secondsLeft)</span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span>)</span><br></pre></td></tr></table></figure>\n<p>但 return 不能真正解決問題，他只是不繼續往下執行，每秒還是會觸發這個事件，所以要用 cleanInterval<br>\n我們要在他自己的方法裡面停掉自己，所以先做出一個 global 的 coundown 變數再用 clearInterval 停掉它</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> countdown</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\">seconds</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// const now = (new Date()).getTime()</span></span><br><span class=\"line\">  <span class=\"comment\">// 上面這種寫法也可以</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> now = <span class=\"built_in\">Date</span>.now() <span class=\"comment\">// mili seconds 的形式</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> then = now + seconds * <span class=\"number\">1000</span></span><br><span class=\"line\">  countdown = setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> secondsLeft = <span class=\"built_in\">Math</span>.round((then - <span class=\"built_in\">Date</span>.now()) / <span class=\"number\">1000</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(secondsLeft &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      clearInterval(countdown)</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(secondsLeft)</span><br><span class=\"line\">  &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>有個很細節的地方：目前我們呼叫 timer 的時候，他當下不會觸發時間，而是過一秒之後才開始，可以看下圖，想要的效果是如果呼叫 <code>timer(10)</code> 當下會先說出 10<br>\n<img src=\"https://i.imgur.com/u1msPlB.png\" alt=\"\"><br>\n因此我們要改成這樣</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\">seconds</span>)</span>&#123;</span><br><span class=\"line\"><span class=\"comment\">// const now = (new Date()).getTime()</span></span><br><span class=\"line\"><span class=\"comment\">// 上面這種寫法也可以</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> now = <span class=\"built_in\">Date</span>.now() <span class=\"comment\">// mili seconds 的形式</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> then = now + seconds * <span class=\"number\">1000</span></span><br><span class=\"line\"></span><br><span class=\"line\">displayTimeLeft(seconds)</span><br><span class=\"line\"></span><br><span class=\"line\">countdown = setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> secondsLeft = <span class=\"built_in\">Math</span>.round((then - <span class=\"built_in\">Date</span>.now()) / <span class=\"number\">1000</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(secondsLeft &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      clearInterval(countdown)</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    displayTimeLeft(secondsLeft)</span><br><span class=\"line\">  &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">displayTimeLeft</span>(<span class=\"params\">seconds</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(seconds)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>如果在按下一個 timer 又按另一個 timer 之後，這些 setInterval 的效果會疊加，所以在開始另一個之前要先把先前的停掉</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\">seconds</span>)</span>&#123;</span><br><span class=\"line\"><span class=\"comment\">// 開始另一個 timer 之前先把之前的 setInterval 停掉</span></span><br><span class=\"line\">  clearInterval(countdown)</span><br><span class=\"line\"><span class=\"comment\">// 下略</span></span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>我們可以直接用 <code>document.&lt;form 的 name&gt;</code> 這個方式來呼叫 form，可以再用一層呼叫 input 的 name</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">name</span>=<span class=\"string\">\"customForm\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"custom\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"minutes\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"Enter Minutes\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.customForm</span><br><span class=\"line\"><span class=\"comment\">// &lt;form name=\"customForm\" id=\"custom\"&gt;</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.customForm.minutes</span><br><span class=\"line\"><span class=\"comment\">// &lt;input type=\"text\" name=\"minutes\" placeholder=\"Enter Minutes\"&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<h2>code 內容：</h2>\n<p>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"timer\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"timer__controls\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">data-time</span>=<span class=\"string\">\"20\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"timer__button\"</span>&gt;</span>20 Secs<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">data-time</span>=<span class=\"string\">\"300\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"timer__button\"</span>&gt;</span>Work 5<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">data-time</span>=<span class=\"string\">\"900\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"timer__button\"</span>&gt;</span>Quick 15<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">data-time</span>=<span class=\"string\">\"1200\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"timer__button\"</span>&gt;</span>Snack 20<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">data-time</span>=<span class=\"string\">\"3600\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"timer__button\"</span>&gt;</span>Lunch Break<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">name</span>=<span class=\"string\">\"customForm\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"custom\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"minutes\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"Enter Minutes\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"display\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"display__time-left\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"display__end-time\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#8E24AA</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(45deg,  #42a5f5 0%,#478ed1 50%,#0d47a1 100%);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'Inconsolata'</span>, monospace;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.display__time-left</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">100</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">text-shadow</span>: <span class=\"number\">4px</span> <span class=\"number\">4px</span> <span class=\"number\">0</span> <span class=\"built_in\">rgba</span>(0,0,0,0.05);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.timer</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">  <span class=\"attribute\">flex-direction</span>: column;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.timer__controls</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.timer__controls</span> &gt; * &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.timer__controls</span> <span class=\"selector-tag\">form</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.timer__controls</span> <span class=\"selector-tag\">input</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">2rem</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.timer__button</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">2rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-transform</span>: uppercase;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(0,0,0,0.1);</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">3px</span> solid <span class=\"built_in\">rgba</span>(0,0,0,0.2);</span><br><span class=\"line\">  <span class=\"attribute\">border-right</span>: <span class=\"number\">1px</span> solid <span class=\"built_in\">rgba</span>(0,0,0,0.2);</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'Inconsolata'</span>, monospace;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.timer__button</span><span class=\"selector-pseudo\">:hover</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.timer__button</span><span class=\"selector-pseudo\">:focus</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(0,0,0,0.2);</span><br><span class=\"line\">  <span class=\"attribute\">outline</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.display</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">flex-direction</span>: column;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.display__end-time</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">4rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> countdown</span><br><span class=\"line\"><span class=\"keyword\">const</span> timerDisplay = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.display__time-left'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> endTime = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.display__end-time'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> buttons = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'[data-time]'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\">seconds</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 開始另一個 timer 之前先把之前的 setInterval 停掉</span></span><br><span class=\"line\">  clearInterval(countdown)</span><br><span class=\"line\">  <span class=\"comment\">// const now = (new Date()).getTime()</span></span><br><span class=\"line\">  <span class=\"comment\">// 上面這種寫法也可以</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> now = <span class=\"built_in\">Date</span>.now() <span class=\"comment\">// mili seconds 的形式</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> then = now + seconds * <span class=\"number\">1000</span></span><br><span class=\"line\">  displayEndTime(then)</span><br><span class=\"line\">  displayTimeLeft(seconds)</span><br><span class=\"line\"></span><br><span class=\"line\">  countdown = setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> secondsLeft = <span class=\"built_in\">Math</span>.round((then - <span class=\"built_in\">Date</span>.now()) / <span class=\"number\">1000</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(secondsLeft &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      clearInterval(countdown)</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    displayTimeLeft(secondsLeft)</span><br><span class=\"line\">  &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">displayTimeLeft</span>(<span class=\"params\">seconds</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> minutes = <span class=\"built_in\">Math</span>.floor(seconds / <span class=\"number\">60</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> remainSeconds = seconds % <span class=\"number\">60</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> display = <span class=\"string\">`<span class=\"subst\">$&#123;minutes&#125;</span>:<span class=\"subst\">$&#123;remainSeconds &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> : <span class=\"string\">''</span>&#125;</span><span class=\"subst\">$&#123;remainSeconds&#125;</span>`</span></span><br><span class=\"line\">  <span class=\"built_in\">document</span>.title = display</span><br><span class=\"line\">  timerDisplay.textContent = display</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">displayEndTime</span>(<span class=\"params\">timestamp</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> end = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(timestamp)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> hours = end.getHours()</span><br><span class=\"line\">  <span class=\"keyword\">const</span> minutes = end.getMinutes()</span><br><span class=\"line\">  endTime.textContent = <span class=\"string\">`Be Back At <span class=\"subst\">$&#123;hours&#125;</span>:<span class=\"subst\">$&#123;minutes &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> : <span class=\"string\">''</span>&#125;</span><span class=\"subst\">$&#123;minutes&#125;</span>`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">startTimer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> period = <span class=\"keyword\">this</span>.dataset.time</span><br><span class=\"line\">  timer(period)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">buttons.forEach(<span class=\"function\"><span class=\"params\">button</span> =&gt;</span> button.addEventListener(<span class=\"string\">'click'</span>, startTimer))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">document</span>.customForm.addEventListener(<span class=\"string\">'submit'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">  e.preventDefault()</span><br><span class=\"line\">  <span class=\"keyword\">const</span> mins = <span class=\"keyword\">this</span>.minutes.value</span><br><span class=\"line\">  timer(mins * <span class=\"number\">60</span>)</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.reset()</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>"},{"title":"JS30 day30 Whack a Mole Game","catalog":true,"toc_nav_num":true,"date":"2019-12-01T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1574963997472-e2bdb43780b2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Javascript"],"updateDate":"2019-12-01T14:26:24.000Z","_content":"# JS30 day30 - Whack a Mole Game\n\n## 作業內容\n\n今天的作業是做出打地鼠的遊戲，這個練習我想主要是可以練習到遞迴的使用比較特別\n![](https://i.imgur.com/1V6U0Pm.png)\n## 學到什麼\n- JS\n  1. 第一次在 JS 裡面用到遞迴！我們如果想要每次的洞都跟上一個不同，可以做判斷，如果跟上一個一樣的話就重新跑一次本身這個函數直到不重複為止\n  ```js\n  function randomHole(holes){\n    const idx = Math.floor(Math.random() * holes.length)\n    const hole = holes[idx]\n    if(hole === lastHole){\n      console.log(\"重複了\")\n      return randomHole(holes);\n    } \n    lastHole = hole\n    console.log(hole)\n  }\n  ```\n  2. 要讓地鼠不停出現，在這次也是使用遞迴的做法，在每次上一個地鼠消失的時候，如果時間還沒到就再次觸發一次這個 function 讓地鼠出現 \n  ```js\n  function peep(){\n    const hole = randomHole(holes)\n    const time = randomTime(200, 1000)\n    hole.classList.add('up')\n    setTimeout(function(){\n      hole.classList.remove('up')\n      if(!timeUp) peep()\n    }, time)\n  }\n  ```\n  3. 如果去看 `click` 這個事件裡面的屬性，有一個 `isTrusted` 屬性，這個屬性如果是真正 user 點的才會是 true， 如果使用 JS 模擬去點的他預設會是 false\n\n參考資料：  \nhttps://github.com/wesbos/JavaScript30\n\n## code 內容：\nHTML:\n```html\n<h1>Whack-a-mole! <span class=\"score\">0</span></h1>\n<button onClick=\"startGame()\">Start!</button>\n\n<div class=\"game\">\n  <div class=\"hole hole1\">\n    <div class=\"mole\"></div>\n  </div>\n  <div class=\"hole hole2\">\n    <div class=\"mole\"></div>\n  </div>\n  <div class=\"hole hole3\">\n    <div class=\"mole\"></div>\n  </div>\n  <div class=\"hole hole4\">\n    <div class=\"mole\"></div>\n  </div>\n  <div class=\"hole hole5\">\n    <div class=\"mole\"></div>\n  </div>\n  <div class=\"hole hole6\">\n    <div class=\"mole\"></div>\n  </div>\n</div>\n```\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n  font-size: 10px;\n  background: #ffc600;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nbody {\n  padding: 0;\n  margin: 0;\n  font-family: 'Amatic SC', cursive;\n}\n\nh1 {\n  text-align: center;\n  font-size: 10rem;\n  line-height: 1;\n  margin-bottom: 0;\n}\n\n.score {\n  background: rgba(255,255,255,0.2);\n  padding: 0 3rem;\n  line-height: 1;\n  border-radius: 1rem;\n}\n\n.game {\n  width: 600px;\n  height: 400px;\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 auto;\n}\n\n.hole {\n  flex: 1 0 33.33%;\n  overflow: hidden;\n  position: relative;\n}\n\n.hole:after {\n  display: block;\n  background: url(dirt.svg) bottom center no-repeat;\n  background-size: contain;\n  content: '';\n  width: 100%;\n  height:70px;\n  position: absolute;\n  z-index: 2;\n  bottom: -30px;\n}\n\n.mole {\n  background: url('mole.svg') bottom center no-repeat;\n  background-size: 60%;\n  position: absolute;\n  top: 100%;\n  width: 100%;\n  height: 100%;\n  transition:all 0.4s;\n}\n\n.hole.up .mole {\n  top: 0;\n}\n\n```\nJS:\n```js\n  const holes = document.querySelectorAll('.hole');\n  const scoreBoard = document.querySelector('.score');\n  const moles = document.querySelectorAll('.mole');\n  let lastHole\n  let timeUp = false\n  let score = 0\n\n  // 以微秒顯示，這時間是決定地鼠會出現多久才消失的時間\n  function randomTime(min, max){\n    return Math.round(Math.random() * (max - min) + min)\n  }\n\n  function randomHole(holes){\n    const idx = Math.floor(Math.random() * holes.length)\n    const hole = holes[idx]\n    if(hole === lastHole){\n      return randomHole(holes);\n    } \n    lastHole = hole\n    return hole\n  }\n\n  function peep(){\n    const hole = randomHole(holes)\n    const time = randomTime(200, 1000)\n    hole.classList.add('up')\n    setTimeout(function(){\n      hole.classList.remove('up')\n      if(!timeUp) peep()\n    }, time)\n  }\n\n  moles.forEach( mole => mole.addEventListener('click', (e)=>{\n    if(!e.isTrusted) return //如果不是真的 user 點的， isTrusted 這個屬性 = false(比方說 JS 點的)\n    score += 1\n    this.classList.remove('up')\n    scoreBoard.textContent = score\n  }) )\n\n  function startGame(){\n    scoreBoard.textContent = 0\n    timeUp = false\n    score = 0\n    peep()\n    setTimeout(()=>{ timeUp = true }, 10000)\n  }\n\n```","source":"_posts/2019-12-01-JS30_day30.md","raw":"---\ntitle: \"JS30 day30 Whack a Mole Game\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-12-01 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1574963997472-e2bdb43780b2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-12-01 22:26:24\n# top: 1\n\n---\n# JS30 day30 - Whack a Mole Game\n\n## 作業內容\n\n今天的作業是做出打地鼠的遊戲，這個練習我想主要是可以練習到遞迴的使用比較特別\n![](https://i.imgur.com/1V6U0Pm.png)\n## 學到什麼\n- JS\n  1. 第一次在 JS 裡面用到遞迴！我們如果想要每次的洞都跟上一個不同，可以做判斷，如果跟上一個一樣的話就重新跑一次本身這個函數直到不重複為止\n  ```js\n  function randomHole(holes){\n    const idx = Math.floor(Math.random() * holes.length)\n    const hole = holes[idx]\n    if(hole === lastHole){\n      console.log(\"重複了\")\n      return randomHole(holes);\n    } \n    lastHole = hole\n    console.log(hole)\n  }\n  ```\n  2. 要讓地鼠不停出現，在這次也是使用遞迴的做法，在每次上一個地鼠消失的時候，如果時間還沒到就再次觸發一次這個 function 讓地鼠出現 \n  ```js\n  function peep(){\n    const hole = randomHole(holes)\n    const time = randomTime(200, 1000)\n    hole.classList.add('up')\n    setTimeout(function(){\n      hole.classList.remove('up')\n      if(!timeUp) peep()\n    }, time)\n  }\n  ```\n  3. 如果去看 `click` 這個事件裡面的屬性，有一個 `isTrusted` 屬性，這個屬性如果是真正 user 點的才會是 true， 如果使用 JS 模擬去點的他預設會是 false\n\n參考資料：  \nhttps://github.com/wesbos/JavaScript30\n\n## code 內容：\nHTML:\n```html\n<h1>Whack-a-mole! <span class=\"score\">0</span></h1>\n<button onClick=\"startGame()\">Start!</button>\n\n<div class=\"game\">\n  <div class=\"hole hole1\">\n    <div class=\"mole\"></div>\n  </div>\n  <div class=\"hole hole2\">\n    <div class=\"mole\"></div>\n  </div>\n  <div class=\"hole hole3\">\n    <div class=\"mole\"></div>\n  </div>\n  <div class=\"hole hole4\">\n    <div class=\"mole\"></div>\n  </div>\n  <div class=\"hole hole5\">\n    <div class=\"mole\"></div>\n  </div>\n  <div class=\"hole hole6\">\n    <div class=\"mole\"></div>\n  </div>\n</div>\n```\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n  font-size: 10px;\n  background: #ffc600;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nbody {\n  padding: 0;\n  margin: 0;\n  font-family: 'Amatic SC', cursive;\n}\n\nh1 {\n  text-align: center;\n  font-size: 10rem;\n  line-height: 1;\n  margin-bottom: 0;\n}\n\n.score {\n  background: rgba(255,255,255,0.2);\n  padding: 0 3rem;\n  line-height: 1;\n  border-radius: 1rem;\n}\n\n.game {\n  width: 600px;\n  height: 400px;\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 auto;\n}\n\n.hole {\n  flex: 1 0 33.33%;\n  overflow: hidden;\n  position: relative;\n}\n\n.hole:after {\n  display: block;\n  background: url(dirt.svg) bottom center no-repeat;\n  background-size: contain;\n  content: '';\n  width: 100%;\n  height:70px;\n  position: absolute;\n  z-index: 2;\n  bottom: -30px;\n}\n\n.mole {\n  background: url('mole.svg') bottom center no-repeat;\n  background-size: 60%;\n  position: absolute;\n  top: 100%;\n  width: 100%;\n  height: 100%;\n  transition:all 0.4s;\n}\n\n.hole.up .mole {\n  top: 0;\n}\n\n```\nJS:\n```js\n  const holes = document.querySelectorAll('.hole');\n  const scoreBoard = document.querySelector('.score');\n  const moles = document.querySelectorAll('.mole');\n  let lastHole\n  let timeUp = false\n  let score = 0\n\n  // 以微秒顯示，這時間是決定地鼠會出現多久才消失的時間\n  function randomTime(min, max){\n    return Math.round(Math.random() * (max - min) + min)\n  }\n\n  function randomHole(holes){\n    const idx = Math.floor(Math.random() * holes.length)\n    const hole = holes[idx]\n    if(hole === lastHole){\n      return randomHole(holes);\n    } \n    lastHole = hole\n    return hole\n  }\n\n  function peep(){\n    const hole = randomHole(holes)\n    const time = randomTime(200, 1000)\n    hole.classList.add('up')\n    setTimeout(function(){\n      hole.classList.remove('up')\n      if(!timeUp) peep()\n    }, time)\n  }\n\n  moles.forEach( mole => mole.addEventListener('click', (e)=>{\n    if(!e.isTrusted) return //如果不是真的 user 點的， isTrusted 這個屬性 = false(比方說 JS 點的)\n    score += 1\n    this.classList.remove('up')\n    scoreBoard.textContent = score\n  }) )\n\n  function startGame(){\n    scoreBoard.textContent = 0\n    timeUp = false\n    score = 0\n    peep()\n    setTimeout(()=>{ timeUp = true }, 10000)\n  }\n\n```","slug":"2019-12-01-JS30_day30","published":1,"updated":"2019-12-04T05:50:42.573Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0evd00382ob17122zpkz","content":"<h1 id=\"js30-day30-whack-a-mole-game\">JS30 day30 - Whack a Mole Game</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天的作業是做出打地鼠的遊戲，這個練習我想主要是可以練習到遞迴的使用比較特別<br>\n<img src=\"https://i.imgur.com/1V6U0Pm.png\" alt=\"\"></p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li>第一次在 JS 裡面用到遞迴！我們如果想要每次的洞都跟上一個不同，可以做判斷，如果跟上一個一樣的話就重新跑一次本身這個函數直到不重複為止</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">randomHole</span>(<span class=\"params\">holes</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> idx = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * holes.length)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> hole = holes[idx]</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(hole === lastHole)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"重複了\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> randomHole(holes);</span><br><span class=\"line\">  &#125; </span><br><span class=\"line\">  lastHole = hole</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(hole)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>要讓地鼠不停出現，在這次也是使用遞迴的做法，在每次上一個地鼠消失的時候，如果時間還沒到就再次觸發一次這個 function 讓地鼠出現</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">peep</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> hole = randomHole(holes)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> time = randomTime(<span class=\"number\">200</span>, <span class=\"number\">1000</span>)</span><br><span class=\"line\">  hole.classList.add(<span class=\"string\">'up'</span>)</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    hole.classList.remove(<span class=\"string\">'up'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!timeUp) peep()</span><br><span class=\"line\">  &#125;, time)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>如果去看 <code>click</code> 這個事件裡面的屬性，有一個 <code>isTrusted</code> 屬性，這個屬性如果是真正 user 點的才會是 true， 如果使用 JS 模擬去點的他預設會是 false</li>\n</ol>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<h2 id=\"code-內容\">code 內容：</h2>\n<p>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Whack-a-mole! <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"score\"</span>&gt;</span>0<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">\"startGame()\"</span>&gt;</span>Start!<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"game\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hole hole1\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mole\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hole hole2\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mole\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hole hole3\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mole\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hole hole4\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mole\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hole hole5\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mole\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hole hole6\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mole\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'Amatic SC'</span>, cursive;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">10rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.score</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(255,255,255,0.2);</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">3rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.game</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">600px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">400px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">flex-wrap</span>: wrap;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.hole</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span> <span class=\"number\">0</span> <span class=\"number\">33.33%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.hole</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(dirt.svg) bottom center no-repeat;</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: contain;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>:<span class=\"number\">70px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: -<span class=\"number\">30px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.mole</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(<span class=\"string\">'mole.svg'</span>) bottom center no-repeat;</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: <span class=\"number\">60%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>:all <span class=\"number\">0.4s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.hole</span><span class=\"selector-class\">.up</span> <span class=\"selector-class\">.mole</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> holes = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'.hole'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> scoreBoard = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.score'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> moles = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'.mole'</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> lastHole</span><br><span class=\"line\"><span class=\"keyword\">let</span> timeUp = <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> score = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 以微秒顯示，這時間是決定地鼠會出現多久才消失的時間</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">randomTime</span>(<span class=\"params\">min, max</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random() * (max - min) + min)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">randomHole</span>(<span class=\"params\">holes</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> idx = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * holes.length)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> hole = holes[idx]</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(hole === lastHole)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> randomHole(holes);</span><br><span class=\"line\">  &#125; </span><br><span class=\"line\">  lastHole = hole</span><br><span class=\"line\">  <span class=\"keyword\">return</span> hole</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">peep</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> hole = randomHole(holes)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> time = randomTime(<span class=\"number\">200</span>, <span class=\"number\">1000</span>)</span><br><span class=\"line\">  hole.classList.add(<span class=\"string\">'up'</span>)</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    hole.classList.remove(<span class=\"string\">'up'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!timeUp) peep()</span><br><span class=\"line\">  &#125;, time)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">moles.forEach( <span class=\"function\"><span class=\"params\">mole</span> =&gt;</span> mole.addEventListener(<span class=\"string\">'click'</span>, (e)=&gt;&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!e.isTrusted) <span class=\"keyword\">return</span> <span class=\"comment\">//如果不是真的 user 點的， isTrusted 這個屬性 = false(比方說 JS 點的)</span></span><br><span class=\"line\">  score += <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.classList.remove(<span class=\"string\">'up'</span>)</span><br><span class=\"line\">  scoreBoard.textContent = score</span><br><span class=\"line\">&#125;) )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">startGame</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  scoreBoard.textContent = <span class=\"number\">0</span></span><br><span class=\"line\">  timeUp = <span class=\"literal\">false</span></span><br><span class=\"line\">  score = <span class=\"number\">0</span></span><br><span class=\"line\">  peep()</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123; timeUp = <span class=\"literal\">true</span> &#125;, <span class=\"number\">10000</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day30 - Whack a Mole Game</h1>\n<h2>作業內容</h2>\n<p>今天的作業是做出打地鼠的遊戲，這個練習我想主要是可以練習到遞迴的使用比較特別<br>\n<img src=\"https://i.imgur.com/1V6U0Pm.png\" alt=\"\"></p>\n<h2>學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li>第一次在 JS 裡面用到遞迴！我們如果想要每次的洞都跟上一個不同，可以做判斷，如果跟上一個一樣的話就重新跑一次本身這個函數直到不重複為止</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">randomHole</span>(<span class=\"params\">holes</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> idx = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * holes.length)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> hole = holes[idx]</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(hole === lastHole)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"重複了\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> randomHole(holes);</span><br><span class=\"line\">  &#125; </span><br><span class=\"line\">  lastHole = hole</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(hole)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>要讓地鼠不停出現，在這次也是使用遞迴的做法，在每次上一個地鼠消失的時候，如果時間還沒到就再次觸發一次這個 function 讓地鼠出現</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">peep</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> hole = randomHole(holes)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> time = randomTime(<span class=\"number\">200</span>, <span class=\"number\">1000</span>)</span><br><span class=\"line\">  hole.classList.add(<span class=\"string\">'up'</span>)</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    hole.classList.remove(<span class=\"string\">'up'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!timeUp) peep()</span><br><span class=\"line\">  &#125;, time)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>如果去看 <code>click</code> 這個事件裡面的屬性，有一個 <code>isTrusted</code> 屬性，這個屬性如果是真正 user 點的才會是 true， 如果使用 JS 模擬去點的他預設會是 false</li>\n</ol>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<h2>code 內容：</h2>\n<p>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Whack-a-mole! <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"score\"</span>&gt;</span>0<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">\"startGame()\"</span>&gt;</span>Start!<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"game\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hole hole1\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mole\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hole hole2\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mole\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hole hole3\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mole\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hole hole4\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mole\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hole hole5\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mole\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hole hole6\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mole\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'Amatic SC'</span>, cursive;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">10rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.score</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(255,255,255,0.2);</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">3rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.game</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">600px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">400px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">flex-wrap</span>: wrap;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.hole</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: <span class=\"number\">1</span> <span class=\"number\">0</span> <span class=\"number\">33.33%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.hole</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(dirt.svg) bottom center no-repeat;</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: contain;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>:<span class=\"number\">70px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: -<span class=\"number\">30px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.mole</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(<span class=\"string\">'mole.svg'</span>) bottom center no-repeat;</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: <span class=\"number\">60%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>:all <span class=\"number\">0.4s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.hole</span><span class=\"selector-class\">.up</span> <span class=\"selector-class\">.mole</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> holes = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'.hole'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> scoreBoard = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.score'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> moles = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'.mole'</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> lastHole</span><br><span class=\"line\"><span class=\"keyword\">let</span> timeUp = <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> score = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 以微秒顯示，這時間是決定地鼠會出現多久才消失的時間</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">randomTime</span>(<span class=\"params\">min, max</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random() * (max - min) + min)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">randomHole</span>(<span class=\"params\">holes</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> idx = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * holes.length)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> hole = holes[idx]</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(hole === lastHole)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> randomHole(holes);</span><br><span class=\"line\">  &#125; </span><br><span class=\"line\">  lastHole = hole</span><br><span class=\"line\">  <span class=\"keyword\">return</span> hole</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">peep</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> hole = randomHole(holes)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> time = randomTime(<span class=\"number\">200</span>, <span class=\"number\">1000</span>)</span><br><span class=\"line\">  hole.classList.add(<span class=\"string\">'up'</span>)</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    hole.classList.remove(<span class=\"string\">'up'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!timeUp) peep()</span><br><span class=\"line\">  &#125;, time)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">moles.forEach( <span class=\"function\"><span class=\"params\">mole</span> =&gt;</span> mole.addEventListener(<span class=\"string\">'click'</span>, (e)=&gt;&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!e.isTrusted) <span class=\"keyword\">return</span> <span class=\"comment\">//如果不是真的 user 點的， isTrusted 這個屬性 = false(比方說 JS 點的)</span></span><br><span class=\"line\">  score += <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.classList.remove(<span class=\"string\">'up'</span>)</span><br><span class=\"line\">  scoreBoard.textContent = score</span><br><span class=\"line\">&#125;) )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">startGame</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  scoreBoard.textContent = <span class=\"number\">0</span></span><br><span class=\"line\">  timeUp = <span class=\"literal\">false</span></span><br><span class=\"line\">  score = <span class=\"number\">0</span></span><br><span class=\"line\">  peep()</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123; timeUp = <span class=\"literal\">true</span> &#125;, <span class=\"number\">10000</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"總算轉職成功","catalog":true,"toc_nav_num":true,"date":"2019-12-04T14:26:24.000Z","subtitle":"別具意義的一天","header-img":"https://images.unsplash.com/photo-1574333751907-d1df49fde1c3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Life"],"updateDate":"2019-12-04T14:26:24.000Z","_content":"## 終於\n就在今天下午四點剛被通知得到曉數碼的 Offer\n\n所以終於正式轉職成軟體工程師了 嗚嗚嗚（痛哭 ING）\n\n好吧其實之前也是有拿到別的公司的 offer 只是有的因為各種因素不喜歡，另外還有一間本來在考慮中，但比較喜歡曉數碼所以最後說不去了～ (身為一個無業遊民好像有點太挑)\n***\n### 自我練習內容\n\n從五倍紅寶石畢業到現在，其實好像也默默做了不少事情：\n\n- SQL: \n1. 聽助教建議透過 SQL ZOO 來練 SQL 語法\n\n- JS:\n1. 看完 Kuro 大的 JS 008 天\n2. 做完 JS30 的練習\n3. 看 Wes Bos 的 ES6 課程\n\n- Ruby on Rails:\n1. 做完五倍紅寶石新進員工訓練 - 18 銅人練習\n2. 做完 Easy Ship 面試習題 (做完花一天，後續依照 PR 修改約三天)\n3. 也是聽助教的在看原文書 Practical object-oriented design in Ruby\n\n因為每天都會接觸 JS 所以應該在這方面進步比較多，甚至後來要寫 ruby 練習都會把 `p` 寫成 `console.log` (真的不唬爛)\n***\n### 面試準備\n\n但除了上述這些之外，後來近半個月，我其實花最多時間在準備面試\n\n一開始對於面試覺得只要平常狀態裸考就好ＸＤ\n\n但這樣的後果是\n1. 如果考的是名詞解釋，就算我知道面試官講的是什麼，要怎麼解釋還是要想一下，就顯得不夠熟悉\n2. 對於很常見的問題，比方說你為什麼想要轉職這樣的問題，每次都臨場發揮也是有點冒險，因為平常聊天都很容易邏輯不順了，更何況是面試這種緊張的環境？\n\n因此我後來又徹頭徹尾的準備了面試常見的問題，在準備的期間意外地還是更了解了我本來以為自己已經理解的東西(不是故意玩繞口令的)\n\n然後後來老婆又點通了我一件事情：**面試官雖然很想知道你的所有能耐，但時間不可能足夠，所以面試者的任務就是要在有效時間之內，盡量展現自己越多越好，試圖讓他更了解你，他的每次發問都是把球給你，你在回答的時候就要讓這個球彈越多下越好，不要老是讓面試官引導問題讓場面很尷尬**，我覺得以上這段話真的對我受益良多！\n\n以上這個紀錄主要是留給自己以後看的，想要提醒自己莫忘初衷，你當初是多麽想寫程式，寧可讓薪水砍到一半不到也要變成軟體工程師！以後也要每天戰戰兢兢持續進步！\n\n當然如果你是正要求職的人，如果這邊文章能幫助到你我也很開心！如果可以的話也歡迎讓我知道這邊文章有幫到你！\n\n","source":"_posts/2019-12-04-get_job.md","raw":"---\ntitle: \"總算轉職成功\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-12-04 22:26:24\nsubtitle: \"別具意義的一天\"\nheader-img: \"https://images.unsplash.com/photo-1574333751907-d1df49fde1c3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Life\ncatagories:\n- Life\nupdateDate: 2019-12-04 22:26:24\n# top: 1\n\n---\n## 終於\n就在今天下午四點剛被通知得到曉數碼的 Offer\n\n所以終於正式轉職成軟體工程師了 嗚嗚嗚（痛哭 ING）\n\n好吧其實之前也是有拿到別的公司的 offer 只是有的因為各種因素不喜歡，另外還有一間本來在考慮中，但比較喜歡曉數碼所以最後說不去了～ (身為一個無業遊民好像有點太挑)\n***\n### 自我練習內容\n\n從五倍紅寶石畢業到現在，其實好像也默默做了不少事情：\n\n- SQL: \n1. 聽助教建議透過 SQL ZOO 來練 SQL 語法\n\n- JS:\n1. 看完 Kuro 大的 JS 008 天\n2. 做完 JS30 的練習\n3. 看 Wes Bos 的 ES6 課程\n\n- Ruby on Rails:\n1. 做完五倍紅寶石新進員工訓練 - 18 銅人練習\n2. 做完 Easy Ship 面試習題 (做完花一天，後續依照 PR 修改約三天)\n3. 也是聽助教的在看原文書 Practical object-oriented design in Ruby\n\n因為每天都會接觸 JS 所以應該在這方面進步比較多，甚至後來要寫 ruby 練習都會把 `p` 寫成 `console.log` (真的不唬爛)\n***\n### 面試準備\n\n但除了上述這些之外，後來近半個月，我其實花最多時間在準備面試\n\n一開始對於面試覺得只要平常狀態裸考就好ＸＤ\n\n但這樣的後果是\n1. 如果考的是名詞解釋，就算我知道面試官講的是什麼，要怎麼解釋還是要想一下，就顯得不夠熟悉\n2. 對於很常見的問題，比方說你為什麼想要轉職這樣的問題，每次都臨場發揮也是有點冒險，因為平常聊天都很容易邏輯不順了，更何況是面試這種緊張的環境？\n\n因此我後來又徹頭徹尾的準備了面試常見的問題，在準備的期間意外地還是更了解了我本來以為自己已經理解的東西(不是故意玩繞口令的)\n\n然後後來老婆又點通了我一件事情：**面試官雖然很想知道你的所有能耐，但時間不可能足夠，所以面試者的任務就是要在有效時間之內，盡量展現自己越多越好，試圖讓他更了解你，他的每次發問都是把球給你，你在回答的時候就要讓這個球彈越多下越好，不要老是讓面試官引導問題讓場面很尷尬**，我覺得以上這段話真的對我受益良多！\n\n以上這個紀錄主要是留給自己以後看的，想要提醒自己莫忘初衷，你當初是多麽想寫程式，寧可讓薪水砍到一半不到也要變成軟體工程師！以後也要每天戰戰兢兢持續進步！\n\n當然如果你是正要求職的人，如果這邊文章能幫助到你我也很開心！如果可以的話也歡迎讓我知道這邊文章有幫到你！\n\n","slug":"2019-12-04-get_job","published":1,"updated":"2019-12-04T14:10:00.537Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0eve003a2ob113ygnuh4","content":"<h2 id=\"終於\">終於</h2>\n<p>就在今天下午四點剛被通知得到曉數碼的 Offer</p>\n<p>所以終於正式轉職成軟體工程師了 嗚嗚嗚（痛哭 ING）</p>\n<p>好吧其實之前也是有拿到別的公司的 offer 只是有的因為各種因素不喜歡，另外還有一間本來在考慮中，但比較喜歡曉數碼所以最後說不去了～ (身為一個無業遊民好像有點太挑)</p>\n<hr>\n<h3 id=\"自我練習內容\">自我練習內容</h3>\n<p>從五倍紅寶石畢業到現在，其實好像也默默做了不少事情：</p>\n<ul>\n<li>SQL:</li>\n</ul>\n<ol>\n<li>聽助教建議透過 SQL ZOO 來練 SQL 語法</li>\n</ol>\n<ul>\n<li>JS:</li>\n</ul>\n<ol>\n<li>看完 Kuro 大的 JS 008 天</li>\n<li>做完 JS30 的練習</li>\n<li>看 Wes Bos 的 ES6 課程</li>\n</ol>\n<ul>\n<li>Ruby on Rails:</li>\n</ul>\n<ol>\n<li>做完五倍紅寶石新進員工訓練 - 18 銅人練習</li>\n<li>做完 Easy Ship 面試習題 (做完花一天，後續依照 PR 修改約三天)</li>\n<li>也是聽助教的在看原文書 Practical object-oriented design in Ruby</li>\n</ol>\n<p>因為每天都會接觸 JS 所以應該在這方面進步比較多，甚至後來要寫 ruby 練習都會把 <code>p</code> 寫成 <code>console.log</code> (真的不唬爛)</p>\n<hr>\n<h3 id=\"面試準備\">面試準備</h3>\n<p>但除了上述這些之外，後來近半個月，我其實花最多時間在準備面試</p>\n<p>一開始對於面試覺得只要平常狀態裸考就好ＸＤ</p>\n<p>但這樣的後果是</p>\n<ol>\n<li>如果考的是名詞解釋，就算我知道面試官講的是什麼，要怎麼解釋還是要想一下，就顯得不夠熟悉</li>\n<li>對於很常見的問題，比方說你為什麼想要轉職這樣的問題，每次都臨場發揮也是有點冒險，因為平常聊天都很容易邏輯不順了，更何況是面試這種緊張的環境？</li>\n</ol>\n<p>因此我後來又徹頭徹尾的準備了面試常見的問題，在準備的期間意外地還是更了解了我本來以為自己已經理解的東西(不是故意玩繞口令的)</p>\n<p>然後後來老婆又點通了我一件事情：<strong>面試官雖然很想知道你的所有能耐，但時間不可能足夠，所以面試者的任務就是要在有效時間之內，盡量展現自己越多越好，試圖讓他更了解你，他的每次發問都是把球給你，你在回答的時候就要讓這個球彈越多下越好，不要老是讓面試官引導問題讓場面很尷尬</strong>，我覺得以上這段話真的對我受益良多！</p>\n<p>以上這個紀錄主要是留給自己以後看的，想要提醒自己莫忘初衷，你當初是多麽想寫程式，寧可讓薪水砍到一半不到也要變成軟體工程師！以後也要每天戰戰兢兢持續進步！</p>\n<p>當然如果你是正要求職的人，如果這邊文章能幫助到你我也很開心！如果可以的話也歡迎讓我知道這邊文章有幫到你！</p>\n","site":{"data":{}},"excerpt":"","more":"<h2>終於</h2>\n<p>就在今天下午四點剛被通知得到曉數碼的 Offer</p>\n<p>所以終於正式轉職成軟體工程師了 嗚嗚嗚（痛哭 ING）</p>\n<p>好吧其實之前也是有拿到別的公司的 offer 只是有的因為各種因素不喜歡，另外還有一間本來在考慮中，但比較喜歡曉數碼所以最後說不去了～ (身為一個無業遊民好像有點太挑)</p>\n<hr>\n<h3>自我練習內容</h3>\n<p>從五倍紅寶石畢業到現在，其實好像也默默做了不少事情：</p>\n<ul>\n<li>SQL:</li>\n</ul>\n<ol>\n<li>聽助教建議透過 SQL ZOO 來練 SQL 語法</li>\n</ol>\n<ul>\n<li>JS:</li>\n</ul>\n<ol>\n<li>看完 Kuro 大的 JS 008 天</li>\n<li>做完 JS30 的練習</li>\n<li>看 Wes Bos 的 ES6 課程</li>\n</ol>\n<ul>\n<li>Ruby on Rails:</li>\n</ul>\n<ol>\n<li>做完五倍紅寶石新進員工訓練 - 18 銅人練習</li>\n<li>做完 Easy Ship 面試習題 (做完花一天，後續依照 PR 修改約三天)</li>\n<li>也是聽助教的在看原文書 Practical object-oriented design in Ruby</li>\n</ol>\n<p>因為每天都會接觸 JS 所以應該在這方面進步比較多，甚至後來要寫 ruby 練習都會把 <code>p</code> 寫成 <code>console.log</code> (真的不唬爛)</p>\n<hr>\n<h3>面試準備</h3>\n<p>但除了上述這些之外，後來近半個月，我其實花最多時間在準備面試</p>\n<p>一開始對於面試覺得只要平常狀態裸考就好ＸＤ</p>\n<p>但這樣的後果是</p>\n<ol>\n<li>如果考的是名詞解釋，就算我知道面試官講的是什麼，要怎麼解釋還是要想一下，就顯得不夠熟悉</li>\n<li>對於很常見的問題，比方說你為什麼想要轉職這樣的問題，每次都臨場發揮也是有點冒險，因為平常聊天都很容易邏輯不順了，更何況是面試這種緊張的環境？</li>\n</ol>\n<p>因此我後來又徹頭徹尾的準備了面試常見的問題，在準備的期間意外地還是更了解了我本來以為自己已經理解的東西(不是故意玩繞口令的)</p>\n<p>然後後來老婆又點通了我一件事情：<strong>面試官雖然很想知道你的所有能耐，但時間不可能足夠，所以面試者的任務就是要在有效時間之內，盡量展現自己越多越好，試圖讓他更了解你，他的每次發問都是把球給你，你在回答的時候就要讓這個球彈越多下越好，不要老是讓面試官引導問題讓場面很尷尬</strong>，我覺得以上這段話真的對我受益良多！</p>\n<p>以上這個紀錄主要是留給自己以後看的，想要提醒自己莫忘初衷，你當初是多麽想寫程式，寧可讓薪水砍到一半不到也要變成軟體工程師！以後也要每天戰戰兢兢持續進步！</p>\n<p>當然如果你是正要求職的人，如果這邊文章能幫助到你我也很開心！如果可以的話也歡迎讓我知道這邊文章有幫到你！</p>\n"},{"title":"Javascript(JS) let, const 跟 var 的比較跟應用","catalog":true,"toc_nav_num":true,"date":"2019-12-05T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1574804225567-c04d11d6bc33?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1568&q=80","catagories":["Javascript"],"updateDate":"2019-12-05T14:26:24.000Z","_content":"# let, const 跟 var 的比較跟應用\n最近黑色星期五花錢用半價買了 Wes Bos 的 ES6 課程，所以順手來紀錄下自己的所學\n\n眾所皆知 `let` 跟 `const` 是兩個 ES6 語法中才新增宣告變數的方式，而 `var` 是舊有的方式\n這年頭流行先講結論，所以我先說這三者使用時機：\n\n## 使用時機\n\n1. 優先使用 `const`\n2. 如果需要更新變數的時候才用 `let`\n3. 在 ES6 裡面**盡量不要**使用 `var` \n\n這時機是 Wes Bos 建議的，但我目前也同意\n接著要講的是這三者的不同點：\n\n## 不同點1： 作用域\n\n`var`: function scoped\n`let / const`: block scoped\n\n這也是大家比較熟悉的，在以往 JS 的切分方法就只有 function ，直到 let / const 出來才有 block scope 的概念\n\n以下舉例 function scoped 跟 block scoped 的差異：\n#### function scoped:\n```js\nfunction setWidth(){\n  var width = 100  // 只活在 function 裡面\n  console.log(width) \n}\nconsole.log(width) //  width is not defined\nsetWidth() // 100\n```\n#### Block scoped:\n```js\nvar age = 100\nif(age > 12){\n  var dogYears = age * 7\n}\nconsole.log(dogYears) // 700\n\nvar age = 100\nif(age > 12){\n  let dogYears = age * 7\n}\nconsole.log(dogYears) // dogYears is not defined\n\nvar age = 100\nif(age > 12){\n  const dogYears = age * 7\n}\nconsole.log(dogYears) // dogYears is not defined\n```\n## 不同點2： var 可以重複宣告，但 let /const 會出錯\n\n這三者裡面只有 const 宣告的常數是不能更新的\n除此之外可以看下面範例，只有 var 可以在那邊對同一個變數 var 來 var 去， let 跟 const 都會跑出錯誤訊息\n```js\nvar me = \"you\"\nvar me = \"you\" // 沒事\n\nlet me = \"you\"\nlet me = \"you\" //Identifier 'me' has already been declared\n\nconst me = \"you\"\nconst me = \"you\" //Identifier 'me' has already been declared\nme = \"he\" // Assignment to constant variable. \n// 只有 const 是不能更新的\n```\n\n## 不同點3： var 跟 let / const hoisting 的表現不同\n\n感謝 Huli 的 [我知道你懂 hoisting，可是你了解到多深？](https://blog.techbridge.cc/2018/11/10/javascript-hoisting/) 這篇文章，真的有種醍醐灌頂的感覺，下面也會引用他的話跟例子\n\n這邊直接先引用 Huli 大的其中一句話講結論：\n> let 與 const 也有 hoisting 但沒有初始化為 undefined，而且在賦值之前試圖取值會發生錯誤。\n\n以下舉例：\n例1： 從頭到尾沒宣告變數使用的狀況\n```js\nconsole.log(a) // ReferenceError: a is not defined\n```\n例2： 傳統的 hoisting\n```js\nconsole.log(a)\nvar a = 2 // undefined\n```\n例3： 把 var 改成 let\n```js\nconsole.log(a)\nlet a = 2 // ReferenceError: a is not defined\n```\n看到這邊一定覺得我在話唬爛，明明就沒有 hoisting XD\n不對！真的有！但不太容易察覺，除非像是下面這個例子\n```js\nvar a = 10\nfunction test(){\n  console.log(a)\n  let a\n}\ntest() // ReferenceError: a is not defined\n```\n如果沒有 hoisting 行為的話，a 應該要讀取到外面的 10 而不是 ont defined 的結果，所以結論跟上面講過的一樣：**用 let / const 來宣告的話還是會有 hoisting 的狀況，但不會初始化成 undefined**\n\n接下來來看看如何使用 closure\n\n## Closure(閉包) 的使用\n一般來說，我們可能會直接宣告一個變數，可是這樣不好，因為這變數會變成 global function，很容易造成不好的結果，比方說我可能不小心宣告一個 name 的變數，但實際上已經有其他功能需要用到原本的 name 變數\n\n因此我們想要把變數鎖在一個範圍裡面不 leak 到外面\n\n如果是 `var` 我們需要用到 IIFE （立刻被呼叫的函式）\n```js\n(function(){\n  var name = 'qoo'\n  console.log(name)\n})()\n// 'qoo'\n```\n如果是 `let` 或者 `const` 我們就用 Block 即可\n```js\n{\n  let name = 'qoo'\n  console.log(name)\n}\n// 'qoo'\n```\n這可以延伸到在教初學者時常會講到的 setTimeout 案例\n\n## 經典的 setTimeout 問題\n我們看看下面兩種 for loop 執行結果：\n```js\nfor(var i = 0; i < 10; i++){\n  console.log(i)\n  setTimeout(function(){\n    console.log(`Number${i}`)\n  }, 1000)\n}\n// 0 1 2 3...10  Number10 x 10 次(一秒後)\n\nfor(let i = 0; i < 10; i++){\n  console.log(i)\n  setTimeout(function(){\n    console.log(`Number${i}`)\n  }, 1000)\n}\n// 0 1 2 3...10  Number0 Number1 ... Number 9(一秒後)\n```\n為什麼使用 var 的結果會這樣呢，因為他很快就把 for loop 執行完了，`var`是 function scope ，所以每次更改 i 值都會直接更改 Block 裡面的 i\n但是 let 是 block scope，所以變數會被存在這個 block 裡面\n那要怎麼修正他們，除了講出 Number 1 到 9 還要每隔一秒做一次呢？\n`let` 比較簡單，只要把秒數乘上去就好：\n```js\nfor(let i = 0; i < 10; i++){\n  setTimeout(function(){\n    console.log(`Number${i}`)\n  }, 1000 * i)\n}\n```\n`var` 就要用到 IIFE 了\n在 for 把 i 丟給 block 的當下就傳進去 IIFE 裡面存起來\n```js\nfor(var i = 0; i < 10; i++){\n  (function(x){\n    setTimeout(function(){\n      console.log(`Number${x}`)\n    }, 1000 * x)\n  })(i)\n}\n```\n\n好像是第一次研究 JS 這種基本的問題，實際寫一次也會讓自己知道是不是還有哪裡不清楚的地方\n\n如果有哪裡有問題或者寫錯的也歡迎聯絡我，謝謝！\n\n參考資料：\n\n1. [Wes Bos ES6 課程](https://es6.io/)\n2. [我知道你懂 hoisting，可是你了解到多深？](https://blog.techbridge.cc/2018/11/10/javascript-hoisting/)\n3. [0 陷阱！0 誤解！8 天重新認識 JavaScript！](https://www.books.com.tw/products/0010832387)","source":"_posts/2019-12-05-let_const_var.md","raw":"---\ntitle: \"Javascript(JS) let, const 跟 var 的比較跟應用\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-12-05 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1574804225567-c04d11d6bc33?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1568&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-12-05 22:26:24\n# top: 1\n\n---\n# let, const 跟 var 的比較跟應用\n最近黑色星期五花錢用半價買了 Wes Bos 的 ES6 課程，所以順手來紀錄下自己的所學\n\n眾所皆知 `let` 跟 `const` 是兩個 ES6 語法中才新增宣告變數的方式，而 `var` 是舊有的方式\n這年頭流行先講結論，所以我先說這三者使用時機：\n\n## 使用時機\n\n1. 優先使用 `const`\n2. 如果需要更新變數的時候才用 `let`\n3. 在 ES6 裡面**盡量不要**使用 `var` \n\n這時機是 Wes Bos 建議的，但我目前也同意\n接著要講的是這三者的不同點：\n\n## 不同點1： 作用域\n\n`var`: function scoped\n`let / const`: block scoped\n\n這也是大家比較熟悉的，在以往 JS 的切分方法就只有 function ，直到 let / const 出來才有 block scope 的概念\n\n以下舉例 function scoped 跟 block scoped 的差異：\n#### function scoped:\n```js\nfunction setWidth(){\n  var width = 100  // 只活在 function 裡面\n  console.log(width) \n}\nconsole.log(width) //  width is not defined\nsetWidth() // 100\n```\n#### Block scoped:\n```js\nvar age = 100\nif(age > 12){\n  var dogYears = age * 7\n}\nconsole.log(dogYears) // 700\n\nvar age = 100\nif(age > 12){\n  let dogYears = age * 7\n}\nconsole.log(dogYears) // dogYears is not defined\n\nvar age = 100\nif(age > 12){\n  const dogYears = age * 7\n}\nconsole.log(dogYears) // dogYears is not defined\n```\n## 不同點2： var 可以重複宣告，但 let /const 會出錯\n\n這三者裡面只有 const 宣告的常數是不能更新的\n除此之外可以看下面範例，只有 var 可以在那邊對同一個變數 var 來 var 去， let 跟 const 都會跑出錯誤訊息\n```js\nvar me = \"you\"\nvar me = \"you\" // 沒事\n\nlet me = \"you\"\nlet me = \"you\" //Identifier 'me' has already been declared\n\nconst me = \"you\"\nconst me = \"you\" //Identifier 'me' has already been declared\nme = \"he\" // Assignment to constant variable. \n// 只有 const 是不能更新的\n```\n\n## 不同點3： var 跟 let / const hoisting 的表現不同\n\n感謝 Huli 的 [我知道你懂 hoisting，可是你了解到多深？](https://blog.techbridge.cc/2018/11/10/javascript-hoisting/) 這篇文章，真的有種醍醐灌頂的感覺，下面也會引用他的話跟例子\n\n這邊直接先引用 Huli 大的其中一句話講結論：\n> let 與 const 也有 hoisting 但沒有初始化為 undefined，而且在賦值之前試圖取值會發生錯誤。\n\n以下舉例：\n例1： 從頭到尾沒宣告變數使用的狀況\n```js\nconsole.log(a) // ReferenceError: a is not defined\n```\n例2： 傳統的 hoisting\n```js\nconsole.log(a)\nvar a = 2 // undefined\n```\n例3： 把 var 改成 let\n```js\nconsole.log(a)\nlet a = 2 // ReferenceError: a is not defined\n```\n看到這邊一定覺得我在話唬爛，明明就沒有 hoisting XD\n不對！真的有！但不太容易察覺，除非像是下面這個例子\n```js\nvar a = 10\nfunction test(){\n  console.log(a)\n  let a\n}\ntest() // ReferenceError: a is not defined\n```\n如果沒有 hoisting 行為的話，a 應該要讀取到外面的 10 而不是 ont defined 的結果，所以結論跟上面講過的一樣：**用 let / const 來宣告的話還是會有 hoisting 的狀況，但不會初始化成 undefined**\n\n接下來來看看如何使用 closure\n\n## Closure(閉包) 的使用\n一般來說，我們可能會直接宣告一個變數，可是這樣不好，因為這變數會變成 global function，很容易造成不好的結果，比方說我可能不小心宣告一個 name 的變數，但實際上已經有其他功能需要用到原本的 name 變數\n\n因此我們想要把變數鎖在一個範圍裡面不 leak 到外面\n\n如果是 `var` 我們需要用到 IIFE （立刻被呼叫的函式）\n```js\n(function(){\n  var name = 'qoo'\n  console.log(name)\n})()\n// 'qoo'\n```\n如果是 `let` 或者 `const` 我們就用 Block 即可\n```js\n{\n  let name = 'qoo'\n  console.log(name)\n}\n// 'qoo'\n```\n這可以延伸到在教初學者時常會講到的 setTimeout 案例\n\n## 經典的 setTimeout 問題\n我們看看下面兩種 for loop 執行結果：\n```js\nfor(var i = 0; i < 10; i++){\n  console.log(i)\n  setTimeout(function(){\n    console.log(`Number${i}`)\n  }, 1000)\n}\n// 0 1 2 3...10  Number10 x 10 次(一秒後)\n\nfor(let i = 0; i < 10; i++){\n  console.log(i)\n  setTimeout(function(){\n    console.log(`Number${i}`)\n  }, 1000)\n}\n// 0 1 2 3...10  Number0 Number1 ... Number 9(一秒後)\n```\n為什麼使用 var 的結果會這樣呢，因為他很快就把 for loop 執行完了，`var`是 function scope ，所以每次更改 i 值都會直接更改 Block 裡面的 i\n但是 let 是 block scope，所以變數會被存在這個 block 裡面\n那要怎麼修正他們，除了講出 Number 1 到 9 還要每隔一秒做一次呢？\n`let` 比較簡單，只要把秒數乘上去就好：\n```js\nfor(let i = 0; i < 10; i++){\n  setTimeout(function(){\n    console.log(`Number${i}`)\n  }, 1000 * i)\n}\n```\n`var` 就要用到 IIFE 了\n在 for 把 i 丟給 block 的當下就傳進去 IIFE 裡面存起來\n```js\nfor(var i = 0; i < 10; i++){\n  (function(x){\n    setTimeout(function(){\n      console.log(`Number${x}`)\n    }, 1000 * x)\n  })(i)\n}\n```\n\n好像是第一次研究 JS 這種基本的問題，實際寫一次也會讓自己知道是不是還有哪裡不清楚的地方\n\n如果有哪裡有問題或者寫錯的也歡迎聯絡我，謝謝！\n\n參考資料：\n\n1. [Wes Bos ES6 課程](https://es6.io/)\n2. [我知道你懂 hoisting，可是你了解到多深？](https://blog.techbridge.cc/2018/11/10/javascript-hoisting/)\n3. [0 陷阱！0 誤解！8 天重新認識 JavaScript！](https://www.books.com.tw/products/0010832387)","slug":"2019-12-05-let_const_var","published":1,"updated":"2019-12-05T15:31:26.920Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0evf003c2ob1tgbed7q4","content":"<h1 id=\"let-const-跟-var-的比較跟應用\">let, const 跟 var 的比較跟應用</h1>\n<p>最近黑色星期五花錢用半價買了 Wes Bos 的 ES6 課程，所以順手來紀錄下自己的所學</p>\n<p>眾所皆知 <code>let</code> 跟 <code>const</code> 是兩個 ES6 語法中才新增宣告變數的方式，而 <code>var</code> 是舊有的方式<br>\n這年頭流行先講結論，所以我先說這三者使用時機：</p>\n<h2 id=\"使用時機\">使用時機</h2>\n<ol>\n<li>優先使用 <code>const</code></li>\n<li>如果需要更新變數的時候才用 <code>let</code></li>\n<li>在 ES6 裡面<strong>盡量不要</strong>使用 <code>var</code></li>\n</ol>\n<p>這時機是 Wes Bos 建議的，但我目前也同意<br>\n接著要講的是這三者的不同點：</p>\n<h2 id=\"不同點1-作用域\">不同點1： 作用域</h2>\n<p><code>var</code>: function scoped<br>\n<code>let / const</code>: block scoped</p>\n<p>這也是大家比較熟悉的，在以往 JS 的切分方法就只有 function ，直到 let / const 出來才有 block scope 的概念</p>\n<p>以下舉例 function scoped 跟 block scoped 的差異：</p>\n<h4 id=\"function-scoped\">function scoped:</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setWidth</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> width = <span class=\"number\">100</span>  <span class=\"comment\">// 只活在 function 裡面</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(width) </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(width) <span class=\"comment\">//  width is not defined</span></span><br><span class=\"line\">setWidth() <span class=\"comment\">// 100</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"block-scoped\">Block scoped:</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(age &gt; <span class=\"number\">12</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> dogYears = age * <span class=\"number\">7</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dogYears) <span class=\"comment\">// 700</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(age &gt; <span class=\"number\">12</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> dogYears = age * <span class=\"number\">7</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dogYears) <span class=\"comment\">// dogYears is not defined</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(age &gt; <span class=\"number\">12</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dogYears = age * <span class=\"number\">7</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dogYears) <span class=\"comment\">// dogYears is not defined</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"不同點2-var-可以重複宣告但-let-const-會出錯\">不同點2： var 可以重複宣告，但 let /const 會出錯</h2>\n<p>這三者裡面只有 const 宣告的常數是不能更新的<br>\n除此之外可以看下面範例，只有 var 可以在那邊對同一個變數 var 來 var 去， let 跟 const 都會跑出錯誤訊息</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> me = <span class=\"string\">\"you\"</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> me = <span class=\"string\">\"you\"</span> <span class=\"comment\">// 沒事</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> me = <span class=\"string\">\"you\"</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> me = <span class=\"string\">\"you\"</span> <span class=\"comment\">//Identifier 'me' has already been declared</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> me = <span class=\"string\">\"you\"</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> me = <span class=\"string\">\"you\"</span> <span class=\"comment\">//Identifier 'me' has already been declared</span></span><br><span class=\"line\">me = <span class=\"string\">\"he\"</span> <span class=\"comment\">// Assignment to constant variable. </span></span><br><span class=\"line\"><span class=\"comment\">// 只有 const 是不能更新的</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"不同點3-var-跟-let-const-hoisting-的表現不同\">不同點3： var 跟 let / const hoisting 的表現不同</h2>\n<p>感謝 Huli 的 <a href=\"https://blog.techbridge.cc/2018/11/10/javascript-hoisting/\" target=\"_blank\" rel=\"noopener\">我知道你懂 hoisting，可是你了解到多深？</a> 這篇文章，真的有種醍醐灌頂的感覺，下面也會引用他的話跟例子</p>\n<p>這邊直接先引用 Huli 大的其中一句話講結論：</p>\n<blockquote>\n<p>let 與 const 也有 hoisting 但沒有初始化為 undefined，而且在賦值之前試圖取值會發生錯誤。</p>\n</blockquote>\n<p>以下舉例：<br>\n例1： 從頭到尾沒宣告變數使用的狀況</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(a) <span class=\"comment\">// ReferenceError: a is not defined</span></span><br></pre></td></tr></table></figure>\n<p>例2： 傳統的 hoisting</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(a)</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span> <span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n<p>例3： 把 var 改成 let</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(a)</span><br><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">2</span> <span class=\"comment\">// ReferenceError: a is not defined</span></span><br></pre></td></tr></table></figure>\n<p>看到這邊一定覺得我在話唬爛，明明就沒有 hoisting XD<br>\n不對！真的有！但不太容易察覺，除非像是下面這個例子</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(a)</span><br><span class=\"line\">  <span class=\"keyword\">let</span> a</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">test() <span class=\"comment\">// ReferenceError: a is not defined</span></span><br></pre></td></tr></table></figure>\n<p>如果沒有 hoisting 行為的話，a 應該要讀取到外面的 10 而不是 ont defined 的結果，所以結論跟上面講過的一樣：<strong>用 let / const 來宣告的話還是會有 hoisting 的狀況，但不會初始化成 undefined</strong></p>\n<p>接下來來看看如何使用 closure</p>\n<h2 id=\"closure閉包-的使用\">Closure(閉包) 的使用</h2>\n<p>一般來說，我們可能會直接宣告一個變數，可是這樣不好，因為這變數會變成 global function，很容易造成不好的結果，比方說我可能不小心宣告一個 name 的變數，但實際上已經有其他功能需要用到原本的 name 變數</p>\n<p>因此我們想要把變數鎖在一個範圍裡面不 leak 到外面</p>\n<p>如果是 <code>var</code> 我們需要用到 IIFE （立刻被呼叫的函式）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> name = <span class=\"string\">'qoo'</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(name)</span><br><span class=\"line\">&#125;)()</span><br><span class=\"line\"><span class=\"comment\">// 'qoo'</span></span><br></pre></td></tr></table></figure>\n<p>如果是 <code>let</code> 或者 <code>const</code> 我們就用 Block 即可</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> name = <span class=\"string\">'qoo'</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 'qoo'</span></span><br></pre></td></tr></table></figure>\n<p>這可以延伸到在教初學者時常會講到的 setTimeout 案例</p>\n<h2 id=\"經典的-settimeout-問題\">經典的 setTimeout 問題</h2>\n<p>我們看看下面兩種 for loop 執行結果：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(i)</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`Number<span class=\"subst\">$&#123;i&#125;</span>`</span>)</span><br><span class=\"line\">  &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 0 1 2 3...10  Number10 x 10 次(一秒後)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(i)</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`Number<span class=\"subst\">$&#123;i&#125;</span>`</span>)</span><br><span class=\"line\">  &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 0 1 2 3...10  Number0 Number1 ... Number 9(一秒後)</span></span><br></pre></td></tr></table></figure>\n<p>為什麼使用 var 的結果會這樣呢，因為他很快就把 for loop 執行完了，<code>var</code>是 function scope ，所以每次更改 i 值都會直接更改 Block 裡面的 i<br>\n但是 let 是 block scope，所以變數會被存在這個 block 裡面<br>\n那要怎麼修正他們，除了講出 Number 1 到 9 還要每隔一秒做一次呢？<br>\n<code>let</code> 比較簡單，只要把秒數乘上去就好：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)&#123;</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`Number<span class=\"subst\">$&#123;i&#125;</span>`</span>)</span><br><span class=\"line\">  &#125;, <span class=\"number\">1000</span> * i)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>var</code> 就要用到 IIFE 了<br>\n在 for 把 i 丟給 block 的當下就傳進去 IIFE 裡面存起來</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)&#123;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">x</span>)</span>&#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">`Number<span class=\"subst\">$&#123;x&#125;</span>`</span>)</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span> * x)</span><br><span class=\"line\">  &#125;)(i)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>好像是第一次研究 JS 這種基本的問題，實際寫一次也會讓自己知道是不是還有哪裡不清楚的地方</p>\n<p>如果有哪裡有問題或者寫錯的也歡迎聯絡我，謝謝！</p>\n<p>參考資料：</p>\n<ol>\n<li><a href=\"https://es6.io/\" target=\"_blank\" rel=\"noopener\">Wes Bos ES6 課程</a></li>\n<li><a href=\"https://blog.techbridge.cc/2018/11/10/javascript-hoisting/\" target=\"_blank\" rel=\"noopener\">我知道你懂 hoisting，可是你了解到多深？</a></li>\n<li><a href=\"https://www.books.com.tw/products/0010832387\" target=\"_blank\" rel=\"noopener\">0 陷阱！0 誤解！8 天重新認識 JavaScript！</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1>let, const 跟 var 的比較跟應用</h1>\n<p>最近黑色星期五花錢用半價買了 Wes Bos 的 ES6 課程，所以順手來紀錄下自己的所學</p>\n<p>眾所皆知 <code>let</code> 跟 <code>const</code> 是兩個 ES6 語法中才新增宣告變數的方式，而 <code>var</code> 是舊有的方式<br>\n這年頭流行先講結論，所以我先說這三者使用時機：</p>\n<h2>使用時機</h2>\n<ol>\n<li>優先使用 <code>const</code></li>\n<li>如果需要更新變數的時候才用 <code>let</code></li>\n<li>在 ES6 裡面<strong>盡量不要</strong>使用 <code>var</code></li>\n</ol>\n<p>這時機是 Wes Bos 建議的，但我目前也同意<br>\n接著要講的是這三者的不同點：</p>\n<h2>不同點1： 作用域</h2>\n<p><code>var</code>: function scoped<br>\n<code>let / const</code>: block scoped</p>\n<p>這也是大家比較熟悉的，在以往 JS 的切分方法就只有 function ，直到 let / const 出來才有 block scope 的概念</p>\n<p>以下舉例 function scoped 跟 block scoped 的差異：</p>\n<h4>function scoped:</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setWidth</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> width = <span class=\"number\">100</span>  <span class=\"comment\">// 只活在 function 裡面</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(width) </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(width) <span class=\"comment\">//  width is not defined</span></span><br><span class=\"line\">setWidth() <span class=\"comment\">// 100</span></span><br></pre></td></tr></table></figure>\n<h4>Block scoped:</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(age &gt; <span class=\"number\">12</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> dogYears = age * <span class=\"number\">7</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dogYears) <span class=\"comment\">// 700</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(age &gt; <span class=\"number\">12</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> dogYears = age * <span class=\"number\">7</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dogYears) <span class=\"comment\">// dogYears is not defined</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(age &gt; <span class=\"number\">12</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dogYears = age * <span class=\"number\">7</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dogYears) <span class=\"comment\">// dogYears is not defined</span></span><br></pre></td></tr></table></figure>\n<h2>不同點2： var 可以重複宣告，但 let /const 會出錯</h2>\n<p>這三者裡面只有 const 宣告的常數是不能更新的<br>\n除此之外可以看下面範例，只有 var 可以在那邊對同一個變數 var 來 var 去， let 跟 const 都會跑出錯誤訊息</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> me = <span class=\"string\">\"you\"</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> me = <span class=\"string\">\"you\"</span> <span class=\"comment\">// 沒事</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> me = <span class=\"string\">\"you\"</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> me = <span class=\"string\">\"you\"</span> <span class=\"comment\">//Identifier 'me' has already been declared</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> me = <span class=\"string\">\"you\"</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> me = <span class=\"string\">\"you\"</span> <span class=\"comment\">//Identifier 'me' has already been declared</span></span><br><span class=\"line\">me = <span class=\"string\">\"he\"</span> <span class=\"comment\">// Assignment to constant variable. </span></span><br><span class=\"line\"><span class=\"comment\">// 只有 const 是不能更新的</span></span><br></pre></td></tr></table></figure>\n<h2>不同點3： var 跟 let / const hoisting 的表現不同</h2>\n<p>感謝 Huli 的 <a href=\"https://blog.techbridge.cc/2018/11/10/javascript-hoisting/\" target=\"_blank\" rel=\"noopener\">我知道你懂 hoisting，可是你了解到多深？</a> 這篇文章，真的有種醍醐灌頂的感覺，下面也會引用他的話跟例子</p>\n<p>這邊直接先引用 Huli 大的其中一句話講結論：</p>\n<blockquote>\n<p>let 與 const 也有 hoisting 但沒有初始化為 undefined，而且在賦值之前試圖取值會發生錯誤。</p>\n</blockquote>\n<p>以下舉例：<br>\n例1： 從頭到尾沒宣告變數使用的狀況</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(a) <span class=\"comment\">// ReferenceError: a is not defined</span></span><br></pre></td></tr></table></figure>\n<p>例2： 傳統的 hoisting</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(a)</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span> <span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n<p>例3： 把 var 改成 let</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(a)</span><br><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">2</span> <span class=\"comment\">// ReferenceError: a is not defined</span></span><br></pre></td></tr></table></figure>\n<p>看到這邊一定覺得我在話唬爛，明明就沒有 hoisting XD<br>\n不對！真的有！但不太容易察覺，除非像是下面這個例子</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(a)</span><br><span class=\"line\">  <span class=\"keyword\">let</span> a</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">test() <span class=\"comment\">// ReferenceError: a is not defined</span></span><br></pre></td></tr></table></figure>\n<p>如果沒有 hoisting 行為的話，a 應該要讀取到外面的 10 而不是 ont defined 的結果，所以結論跟上面講過的一樣：<strong>用 let / const 來宣告的話還是會有 hoisting 的狀況，但不會初始化成 undefined</strong></p>\n<p>接下來來看看如何使用 closure</p>\n<h2>Closure(閉包) 的使用</h2>\n<p>一般來說，我們可能會直接宣告一個變數，可是這樣不好，因為這變數會變成 global function，很容易造成不好的結果，比方說我可能不小心宣告一個 name 的變數，但實際上已經有其他功能需要用到原本的 name 變數</p>\n<p>因此我們想要把變數鎖在一個範圍裡面不 leak 到外面</p>\n<p>如果是 <code>var</code> 我們需要用到 IIFE （立刻被呼叫的函式）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> name = <span class=\"string\">'qoo'</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(name)</span><br><span class=\"line\">&#125;)()</span><br><span class=\"line\"><span class=\"comment\">// 'qoo'</span></span><br></pre></td></tr></table></figure>\n<p>如果是 <code>let</code> 或者 <code>const</code> 我們就用 Block 即可</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> name = <span class=\"string\">'qoo'</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 'qoo'</span></span><br></pre></td></tr></table></figure>\n<p>這可以延伸到在教初學者時常會講到的 setTimeout 案例</p>\n<h2>經典的 setTimeout 問題</h2>\n<p>我們看看下面兩種 for loop 執行結果：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(i)</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`Number<span class=\"subst\">$&#123;i&#125;</span>`</span>)</span><br><span class=\"line\">  &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 0 1 2 3...10  Number10 x 10 次(一秒後)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(i)</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`Number<span class=\"subst\">$&#123;i&#125;</span>`</span>)</span><br><span class=\"line\">  &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 0 1 2 3...10  Number0 Number1 ... Number 9(一秒後)</span></span><br></pre></td></tr></table></figure>\n<p>為什麼使用 var 的結果會這樣呢，因為他很快就把 for loop 執行完了，<code>var</code>是 function scope ，所以每次更改 i 值都會直接更改 Block 裡面的 i<br>\n但是 let 是 block scope，所以變數會被存在這個 block 裡面<br>\n那要怎麼修正他們，除了講出 Number 1 到 9 還要每隔一秒做一次呢？<br>\n<code>let</code> 比較簡單，只要把秒數乘上去就好：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)&#123;</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`Number<span class=\"subst\">$&#123;i&#125;</span>`</span>)</span><br><span class=\"line\">  &#125;, <span class=\"number\">1000</span> * i)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>var</code> 就要用到 IIFE 了<br>\n在 for 把 i 丟給 block 的當下就傳進去 IIFE 裡面存起來</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)&#123;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">x</span>)</span>&#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">`Number<span class=\"subst\">$&#123;x&#125;</span>`</span>)</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span> * x)</span><br><span class=\"line\">  &#125;)(i)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>好像是第一次研究 JS 這種基本的問題，實際寫一次也會讓自己知道是不是還有哪裡不清楚的地方</p>\n<p>如果有哪裡有問題或者寫錯的也歡迎聯絡我，謝謝！</p>\n<p>參考資料：</p>\n<ol>\n<li><a href=\"https://es6.io/\" target=\"_blank\" rel=\"noopener\">Wes Bos ES6 課程</a></li>\n<li><a href=\"https://blog.techbridge.cc/2018/11/10/javascript-hoisting/\" target=\"_blank\" rel=\"noopener\">我知道你懂 hoisting，可是你了解到多深？</a></li>\n<li><a href=\"https://www.books.com.tw/products/0010832387\" target=\"_blank\" rel=\"noopener\">0 陷阱！0 誤解！8 天重新認識 JavaScript！</a></li>\n</ol>\n"},{"title":"Ruby & Rails Coding style(只記錄部分)","catalog":true,"toc_nav_num":true,"date":"2019-12-09T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1570928688583-976174742576?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80","catagories":["Ruby"],"updateDate":"2019-12-09T14:26:24.000Z","_content":"# Ruby & Rails Coding style\n\n這邊文章主要在記錄自己比較有可能踩到的地雷\n\n我參考的只有最下面三篇文章，如果想看完整版可以去下面三個網址看，話說 Ruby coding style 在 rubocop 跟 shopify 的版本其實有些地方衝突，所以有的地方還是必須根據自己公司的習慣來\n\n# Ruby\n\n\n\n1. 每個檔案最後留一行空白\n\n2. 運算子前後有空格，冒號 / 逗號 / 分號後面有空格，`{` 前後有空格， `}` 前面有空格\n\n3. Case 跟 when 齊頭\n\n```ruby\nkind = case year\n       when 1850..1889 then \"Blues\"\n       when 1890..1909 then \"Ragtime\"\n       when 1910..1929 then \"New Orleans Jazz\"\n       when 1930..1939 then \"Swing\"\n       when 1940..1950 then \"Bebop\"\n       else \"Jazz\"\n       end\n```\n\n4. 要使用字串陣列的時候，偏好使用 `%w`\n\n```ruby\nSTATES = %w(draft open closed)\n```\n\n5. 如果方法要使用預設值的話，盡量使用有名字的變數\n\n```ruby\ndef remove_member(user, skip_membership_check: false)\n  # ...\nend\n\n# Elsewhere, now with more clarity:\nremove_member user, skip_membership_check: true\n```\n\n6. `%()` 適用在單行，而且需要 interpolation ，並且有雙引號的情況下使用如果多行最好使用 heredoc\n\n   [HereDoc](https://mgleon08.github.io/blog/2019/02/04/ruby-heredoc/)\n\n7. 千萬不要使用 `for`，因為幾乎都可以用迭代解決， for 裡面的變數可以在外面被抓到\n\n# Rails\n\n1. 盡量保持 Controller skinny，可能的話只保留一個方法(除了 find 或者 new)\n2. Render文字的時候偏好使用 `render plain:` 而非 `render text:`\n3. Render 狀態的時候偏好 render 對應的符號，而非 404 / 403 等數字\n\n```ruby\n# bad\n...\nrender status: 403\n...\n\n# good\n...\nrender status: :forbidden\n...\n```\n\n4. 如果有個 model 不需要資料庫的資料，但需要使用一些 active record 的方法，就使用 ActiveAttr 這個 gem\n5. Enum 偏好使用 Hash 表示而不是陣列\n6. Model 內放置的順序：\n\n```ruby\nclass User < ActiveRecord::Base\n  # keep the default scope first (if any)\n  default_scope { where(active: true) }\n\n  # constants come up next\n  COLORS = %w(red green blue)\n\n  # afterwards we put attr related macros\n  attr_accessor :formatted_date_of_birth\n\n  attr_accessible :login, :first_name, :last_name, :email, :password\n\n  # Rails 4+ enums after attr macros\n  enum role: { user: 0, moderator: 1, admin: 2 }\n\n  # followed by association macros\n  belongs_to :country\n\n  has_many :authentications, dependent: :destroy\n\n  # and validation macros\n  validates :email, presence: true\n  validates :username, presence: true\n  validates :username, uniqueness: { case_sensitive: false }\n  validates :username, format: { with: /\\A[A-Za-z][A-Za-z0-9._-]{2,19}\\z/ }\n  validates :password, format: { with: /\\A\\S{8,128}\\z/, allow_nil: true }\n\n  # next we have callbacks\n  before_save :cook\n  before_save :update_username_lower\n\n  # other macros (like devise's) should be placed after the callbacks\n\n  ...\nend\n```\n\n7. 寫 callback 的時候按照 callback 的執行順序寫\n8. 搜尋資料庫時避免使用 interpolation ，容易有 SQL injection\n\n```ruby\n# bad - param will be interpolated unescaped\nClient.where(\"orders_count = #{params[:orders]}\")\n\n# good - param will be properly escaped\nClient.where('orders_count = ?', params[:orders])\n```\n\n9. 搜尋超過一個參數時，可以考慮使用 named placeholder\n\n```ruby\n# okish\nClient.where(\n  'created_at >= ? AND created_at <= ?',\n  params[:start_date], params[:end_date]\n)\n\n# good\nClient.where(\n  'created_at >= :start_date AND created_at <= :end_date',\n  start_date: params[:start_date], end_date: params[:end_date]\n)\n```\n\n10. 別以 id 排序，id 順序並不代表特殊意義，如果要以建立順序排序可以用時間排序\n11. 盡量以有意義的名字來命名 foreign key，不要過度仰賴 Rails 的預設命名\n12. 做出 reversible 的 migration\n13. 不要使用 `time.parse`\n\n```ruby\n# bad\nTime.parse('2015-03-02 19:05:37') # => Will assume time string given is in the system's time zone.\n\n# good\nTime.zone.parse('2015-03-02 19:05:37') # => Mon, 02 Mar 2015 19:05:37 EET +02:00\n```\n\n14. prefer `size` over `length`\n\n\n\n[rubocop-github](https://github.com/github/rubocop-github/blob/master/STYLEGUIDE.md)\n[The Rails Style Guide](https://rails.rubystyle.guide/)\n[Shopify/Ruby Style Guide](https://shopify.github.io/ruby-style-guide/)","source":"_posts/2019-12-09-ruby_rails_codingstyle.md","raw":"---\ntitle: \"Ruby & Rails Coding style(只記錄部分)\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-12-09 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1570928688583-976174742576?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80\"\ntags:\n- Ruby\ncatagories:\n- Ruby\nupdateDate: 2019-12-09 22:26:24\n# top: 1\n\n---\n# Ruby & Rails Coding style\n\n這邊文章主要在記錄自己比較有可能踩到的地雷\n\n我參考的只有最下面三篇文章，如果想看完整版可以去下面三個網址看，話說 Ruby coding style 在 rubocop 跟 shopify 的版本其實有些地方衝突，所以有的地方還是必須根據自己公司的習慣來\n\n# Ruby\n\n\n\n1. 每個檔案最後留一行空白\n\n2. 運算子前後有空格，冒號 / 逗號 / 分號後面有空格，`{` 前後有空格， `}` 前面有空格\n\n3. Case 跟 when 齊頭\n\n```ruby\nkind = case year\n       when 1850..1889 then \"Blues\"\n       when 1890..1909 then \"Ragtime\"\n       when 1910..1929 then \"New Orleans Jazz\"\n       when 1930..1939 then \"Swing\"\n       when 1940..1950 then \"Bebop\"\n       else \"Jazz\"\n       end\n```\n\n4. 要使用字串陣列的時候，偏好使用 `%w`\n\n```ruby\nSTATES = %w(draft open closed)\n```\n\n5. 如果方法要使用預設值的話，盡量使用有名字的變數\n\n```ruby\ndef remove_member(user, skip_membership_check: false)\n  # ...\nend\n\n# Elsewhere, now with more clarity:\nremove_member user, skip_membership_check: true\n```\n\n6. `%()` 適用在單行，而且需要 interpolation ，並且有雙引號的情況下使用如果多行最好使用 heredoc\n\n   [HereDoc](https://mgleon08.github.io/blog/2019/02/04/ruby-heredoc/)\n\n7. 千萬不要使用 `for`，因為幾乎都可以用迭代解決， for 裡面的變數可以在外面被抓到\n\n# Rails\n\n1. 盡量保持 Controller skinny，可能的話只保留一個方法(除了 find 或者 new)\n2. Render文字的時候偏好使用 `render plain:` 而非 `render text:`\n3. Render 狀態的時候偏好 render 對應的符號，而非 404 / 403 等數字\n\n```ruby\n# bad\n...\nrender status: 403\n...\n\n# good\n...\nrender status: :forbidden\n...\n```\n\n4. 如果有個 model 不需要資料庫的資料，但需要使用一些 active record 的方法，就使用 ActiveAttr 這個 gem\n5. Enum 偏好使用 Hash 表示而不是陣列\n6. Model 內放置的順序：\n\n```ruby\nclass User < ActiveRecord::Base\n  # keep the default scope first (if any)\n  default_scope { where(active: true) }\n\n  # constants come up next\n  COLORS = %w(red green blue)\n\n  # afterwards we put attr related macros\n  attr_accessor :formatted_date_of_birth\n\n  attr_accessible :login, :first_name, :last_name, :email, :password\n\n  # Rails 4+ enums after attr macros\n  enum role: { user: 0, moderator: 1, admin: 2 }\n\n  # followed by association macros\n  belongs_to :country\n\n  has_many :authentications, dependent: :destroy\n\n  # and validation macros\n  validates :email, presence: true\n  validates :username, presence: true\n  validates :username, uniqueness: { case_sensitive: false }\n  validates :username, format: { with: /\\A[A-Za-z][A-Za-z0-9._-]{2,19}\\z/ }\n  validates :password, format: { with: /\\A\\S{8,128}\\z/, allow_nil: true }\n\n  # next we have callbacks\n  before_save :cook\n  before_save :update_username_lower\n\n  # other macros (like devise's) should be placed after the callbacks\n\n  ...\nend\n```\n\n7. 寫 callback 的時候按照 callback 的執行順序寫\n8. 搜尋資料庫時避免使用 interpolation ，容易有 SQL injection\n\n```ruby\n# bad - param will be interpolated unescaped\nClient.where(\"orders_count = #{params[:orders]}\")\n\n# good - param will be properly escaped\nClient.where('orders_count = ?', params[:orders])\n```\n\n9. 搜尋超過一個參數時，可以考慮使用 named placeholder\n\n```ruby\n# okish\nClient.where(\n  'created_at >= ? AND created_at <= ?',\n  params[:start_date], params[:end_date]\n)\n\n# good\nClient.where(\n  'created_at >= :start_date AND created_at <= :end_date',\n  start_date: params[:start_date], end_date: params[:end_date]\n)\n```\n\n10. 別以 id 排序，id 順序並不代表特殊意義，如果要以建立順序排序可以用時間排序\n11. 盡量以有意義的名字來命名 foreign key，不要過度仰賴 Rails 的預設命名\n12. 做出 reversible 的 migration\n13. 不要使用 `time.parse`\n\n```ruby\n# bad\nTime.parse('2015-03-02 19:05:37') # => Will assume time string given is in the system's time zone.\n\n# good\nTime.zone.parse('2015-03-02 19:05:37') # => Mon, 02 Mar 2015 19:05:37 EET +02:00\n```\n\n14. prefer `size` over `length`\n\n\n\n[rubocop-github](https://github.com/github/rubocop-github/blob/master/STYLEGUIDE.md)\n[The Rails Style Guide](https://rails.rubystyle.guide/)\n[Shopify/Ruby Style Guide](https://shopify.github.io/ruby-style-guide/)","slug":"2019-12-09-ruby_rails_codingstyle","published":1,"updated":"2019-12-09T12:32:01.539Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0evg003f2ob1nq7obj3q","content":"<h1 id=\"ruby-amp-rails-coding-style\">Ruby &amp; Rails Coding style</h1>\n<p>這邊文章主要在記錄自己比較有可能踩到的地雷</p>\n<p>我參考的只有最下面三篇文章，如果想看完整版可以去下面三個網址看，話說 Ruby coding style 在 rubocop 跟 shopify 的版本其實有些地方衝突，所以有的地方還是必須根據自己公司的習慣來</p>\n<h1 id=\"ruby\">Ruby</h1>\n<ol>\n<li>\n<p>每個檔案最後留一行空白</p>\n</li>\n<li>\n<p>運算子前後有空格，冒號 / 逗號 / 分號後面有空格，<code>{</code> 前後有空格， <code>}</code> 前面有空格</p>\n</li>\n<li>\n<p>Case 跟 when 齊頭</p>\n</li>\n</ol>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kind = <span class=\"keyword\">case</span> year</span><br><span class=\"line\">       <span class=\"keyword\">when</span> <span class=\"number\">1850</span>..<span class=\"number\">1889</span> <span class=\"keyword\">then</span> <span class=\"string\">\"Blues\"</span></span><br><span class=\"line\">       <span class=\"keyword\">when</span> <span class=\"number\">1890</span>..<span class=\"number\">1909</span> <span class=\"keyword\">then</span> <span class=\"string\">\"Ragtime\"</span></span><br><span class=\"line\">       <span class=\"keyword\">when</span> <span class=\"number\">1910</span>..<span class=\"number\">1929</span> <span class=\"keyword\">then</span> <span class=\"string\">\"New Orleans Jazz\"</span></span><br><span class=\"line\">       <span class=\"keyword\">when</span> <span class=\"number\">1930</span>..<span class=\"number\">1939</span> <span class=\"keyword\">then</span> <span class=\"string\">\"Swing\"</span></span><br><span class=\"line\">       <span class=\"keyword\">when</span> <span class=\"number\">1940</span>..<span class=\"number\">1950</span> <span class=\"keyword\">then</span> <span class=\"string\">\"Bebop\"</span></span><br><span class=\"line\">       <span class=\"keyword\">else</span> <span class=\"string\">\"Jazz\"</span></span><br><span class=\"line\">       <span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>要使用字串陣列的時候，偏好使用 <code>%w</code></li>\n</ol>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">STATES = <span class=\"string\">%w(draft open closed)</span></span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>如果方法要使用預設值的話，盡量使用有名字的變數</li>\n</ol>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">remove_member</span><span class=\"params\">(user, <span class=\"symbol\">skip_membership_check:</span> <span class=\"literal\">false</span>)</span></span></span><br><span class=\"line\">  <span class=\"comment\"># ...</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Elsewhere, now with more clarity:</span></span><br><span class=\"line\">remove_member user, <span class=\"symbol\">skip_membership_check:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>\n<p><code>%()</code> 適用在單行，而且需要 interpolation ，並且有雙引號的情況下使用如果多行最好使用 heredoc</p>\n<p><a href=\"https://mgleon08.github.io/blog/2019/02/04/ruby-heredoc/\" target=\"_blank\" rel=\"noopener\">HereDoc</a></p>\n</li>\n<li>\n<p>千萬不要使用 <code>for</code>，因為幾乎都可以用迭代解決， for 裡面的變數可以在外面被抓到</p>\n</li>\n</ol>\n<h1 id=\"rails\">Rails</h1>\n<ol>\n<li>盡量保持 Controller skinny，可能的話只保留一個方法(除了 find 或者 new)</li>\n<li>Render文字的時候偏好使用 <code>render plain:</code> 而非 <code>render text:</code></li>\n<li>Render 狀態的時候偏好 render 對應的符號，而非 404 / 403 等數字</li>\n</ol>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># bad</span></span><br><span class=\"line\">...</span><br><span class=\"line\">render <span class=\"symbol\">status:</span> <span class=\"number\">403</span></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># good</span></span><br><span class=\"line\">...</span><br><span class=\"line\">render <span class=\"symbol\">status:</span> <span class=\"symbol\">:forbidden</span></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>如果有個 model 不需要資料庫的資料，但需要使用一些 active record 的方法，就使用 ActiveAttr 這個 gem</li>\n<li>Enum 偏好使用 Hash 表示而不是陣列</li>\n<li>Model 內放置的順序：</li>\n</ol>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> &lt; ActiveRecord::Base</span></span><br><span class=\"line\">  <span class=\"comment\"># keep the default scope first (if any)</span></span><br><span class=\"line\">  default_scope &#123; where(<span class=\"symbol\">active:</span> <span class=\"literal\">true</span>) &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># constants come up next</span></span><br><span class=\"line\">  COLORS = <span class=\"string\">%w(red green blue)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># afterwards we put attr related macros</span></span><br><span class=\"line\">  <span class=\"keyword\">attr_accessor</span> <span class=\"symbol\">:formatted_date_of_birth</span></span><br><span class=\"line\"></span><br><span class=\"line\">  attr_accessible <span class=\"symbol\">:login</span>, <span class=\"symbol\">:first_name</span>, <span class=\"symbol\">:last_name</span>, <span class=\"symbol\">:email</span>, <span class=\"symbol\">:password</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Rails 4+ enums after attr macros</span></span><br><span class=\"line\">  enum <span class=\"symbol\">role:</span> &#123; <span class=\"symbol\">user:</span> <span class=\"number\">0</span>, <span class=\"symbol\">moderator:</span> <span class=\"number\">1</span>, <span class=\"symbol\">admin:</span> <span class=\"number\">2</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># followed by association macros</span></span><br><span class=\"line\">  belongs_to <span class=\"symbol\">:country</span></span><br><span class=\"line\"></span><br><span class=\"line\">  has_many <span class=\"symbol\">:authentications</span>, <span class=\"symbol\">dependent:</span> <span class=\"symbol\">:destroy</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># and validation macros</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:email</span>, <span class=\"symbol\">presence:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:username</span>, <span class=\"symbol\">presence:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:username</span>, <span class=\"symbol\">uniqueness:</span> &#123; <span class=\"symbol\">case_sensitive:</span> <span class=\"literal\">false</span> &#125;</span><br><span class=\"line\">  validates <span class=\"symbol\">:username</span>, <span class=\"symbol\">format:</span> &#123; <span class=\"symbol\">with:</span> /\\A[A-Za-z][A-Za-z<span class=\"number\">0</span>-<span class=\"number\">9._</span>-]&#123;<span class=\"number\">2</span>,<span class=\"number\">19</span>&#125;\\z/ &#125;</span><br><span class=\"line\">  validates <span class=\"symbol\">:password</span>, <span class=\"symbol\">format:</span> &#123; <span class=\"symbol\">with:</span> /\\A\\S&#123;<span class=\"number\">8</span>,<span class=\"number\">128</span>&#125;\\z/, <span class=\"symbol\">allow_nil:</span> <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># next we have callbacks</span></span><br><span class=\"line\">  before_save <span class=\"symbol\">:cook</span></span><br><span class=\"line\">  before_save <span class=\"symbol\">:update_username_lower</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># other macros (like devise's) should be placed after the callbacks</span></span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<ol start=\"7\">\n<li>寫 callback 的時候按照 callback 的執行順序寫</li>\n<li>搜尋資料庫時避免使用 interpolation ，容易有 SQL injection</li>\n</ol>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># bad - param will be interpolated unescaped</span></span><br><span class=\"line\">Client.where(<span class=\"string\">\"orders_count = <span class=\"subst\">#&#123;params[<span class=\"symbol\">:orders</span>]&#125;</span>\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># good - param will be properly escaped</span></span><br><span class=\"line\">Client.where(<span class=\"string\">'orders_count = ?'</span>, params[<span class=\"symbol\">:orders</span>])</span><br></pre></td></tr></table></figure>\n<ol start=\"9\">\n<li>搜尋超過一個參數時，可以考慮使用 named placeholder</li>\n</ol>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># okish</span></span><br><span class=\"line\">Client.where(</span><br><span class=\"line\">  <span class=\"string\">'created_at &gt;= ? AND created_at &lt;= ?'</span>,</span><br><span class=\"line\">  params[<span class=\"symbol\">:start_date</span>], params[<span class=\"symbol\">:end_date</span>]</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># good</span></span><br><span class=\"line\">Client.where(</span><br><span class=\"line\">  <span class=\"string\">'created_at &gt;= :start_date AND created_at &lt;= :end_date'</span>,</span><br><span class=\"line\">  <span class=\"symbol\">start_date:</span> params[<span class=\"symbol\">:start_date</span>], <span class=\"symbol\">end_date:</span> params[<span class=\"symbol\">:end_date</span>]</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<ol start=\"10\">\n<li>別以 id 排序，id 順序並不代表特殊意義，如果要以建立順序排序可以用時間排序</li>\n<li>盡量以有意義的名字來命名 foreign key，不要過度仰賴 Rails 的預設命名</li>\n<li>做出 reversible 的 migration</li>\n<li>不要使用 <code>time.parse</code></li>\n</ol>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># bad</span></span><br><span class=\"line\">Time.parse(<span class=\"string\">'2015-03-02 19:05:37'</span>) <span class=\"comment\"># =&gt; Will assume time string given is in the system's time zone.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># good</span></span><br><span class=\"line\">Time.zone.parse(<span class=\"string\">'2015-03-02 19:05:37'</span>) <span class=\"comment\"># =&gt; Mon, 02 Mar 2015 19:05:37 EET +02:00</span></span><br></pre></td></tr></table></figure>\n<ol start=\"14\">\n<li>prefer <code>size</code> over <code>length</code></li>\n</ol>\n<p><a href=\"https://github.com/github/rubocop-github/blob/master/STYLEGUIDE.md\" target=\"_blank\" rel=\"noopener\">rubocop-github</a><br>\n<a href=\"https://rails.rubystyle.guide/\" target=\"_blank\" rel=\"noopener\">The Rails Style Guide</a><br>\n<a href=\"https://shopify.github.io/ruby-style-guide/\" target=\"_blank\" rel=\"noopener\">Shopify/Ruby Style Guide</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1>Ruby &amp; Rails Coding style</h1>\n<p>這邊文章主要在記錄自己比較有可能踩到的地雷</p>\n<p>我參考的只有最下面三篇文章，如果想看完整版可以去下面三個網址看，話說 Ruby coding style 在 rubocop 跟 shopify 的版本其實有些地方衝突，所以有的地方還是必須根據自己公司的習慣來</p>\n<h1>Ruby</h1>\n<ol>\n<li>\n<p>每個檔案最後留一行空白</p>\n</li>\n<li>\n<p>運算子前後有空格，冒號 / 逗號 / 分號後面有空格，<code>{</code> 前後有空格， <code>}</code> 前面有空格</p>\n</li>\n<li>\n<p>Case 跟 when 齊頭</p>\n</li>\n</ol>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kind = <span class=\"keyword\">case</span> year</span><br><span class=\"line\">       <span class=\"keyword\">when</span> <span class=\"number\">1850</span>..<span class=\"number\">1889</span> <span class=\"keyword\">then</span> <span class=\"string\">\"Blues\"</span></span><br><span class=\"line\">       <span class=\"keyword\">when</span> <span class=\"number\">1890</span>..<span class=\"number\">1909</span> <span class=\"keyword\">then</span> <span class=\"string\">\"Ragtime\"</span></span><br><span class=\"line\">       <span class=\"keyword\">when</span> <span class=\"number\">1910</span>..<span class=\"number\">1929</span> <span class=\"keyword\">then</span> <span class=\"string\">\"New Orleans Jazz\"</span></span><br><span class=\"line\">       <span class=\"keyword\">when</span> <span class=\"number\">1930</span>..<span class=\"number\">1939</span> <span class=\"keyword\">then</span> <span class=\"string\">\"Swing\"</span></span><br><span class=\"line\">       <span class=\"keyword\">when</span> <span class=\"number\">1940</span>..<span class=\"number\">1950</span> <span class=\"keyword\">then</span> <span class=\"string\">\"Bebop\"</span></span><br><span class=\"line\">       <span class=\"keyword\">else</span> <span class=\"string\">\"Jazz\"</span></span><br><span class=\"line\">       <span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>要使用字串陣列的時候，偏好使用 <code>%w</code></li>\n</ol>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">STATES = <span class=\"string\">%w(draft open closed)</span></span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>如果方法要使用預設值的話，盡量使用有名字的變數</li>\n</ol>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">remove_member</span><span class=\"params\">(user, <span class=\"symbol\">skip_membership_check:</span> <span class=\"literal\">false</span>)</span></span></span><br><span class=\"line\">  <span class=\"comment\"># ...</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Elsewhere, now with more clarity:</span></span><br><span class=\"line\">remove_member user, <span class=\"symbol\">skip_membership_check:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>\n<p><code>%()</code> 適用在單行，而且需要 interpolation ，並且有雙引號的情況下使用如果多行最好使用 heredoc</p>\n<p><a href=\"https://mgleon08.github.io/blog/2019/02/04/ruby-heredoc/\" target=\"_blank\" rel=\"noopener\">HereDoc</a></p>\n</li>\n<li>\n<p>千萬不要使用 <code>for</code>，因為幾乎都可以用迭代解決， for 裡面的變數可以在外面被抓到</p>\n</li>\n</ol>\n<h1>Rails</h1>\n<ol>\n<li>盡量保持 Controller skinny，可能的話只保留一個方法(除了 find 或者 new)</li>\n<li>Render文字的時候偏好使用 <code>render plain:</code> 而非 <code>render text:</code></li>\n<li>Render 狀態的時候偏好 render 對應的符號，而非 404 / 403 等數字</li>\n</ol>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># bad</span></span><br><span class=\"line\">...</span><br><span class=\"line\">render <span class=\"symbol\">status:</span> <span class=\"number\">403</span></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># good</span></span><br><span class=\"line\">...</span><br><span class=\"line\">render <span class=\"symbol\">status:</span> <span class=\"symbol\">:forbidden</span></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>如果有個 model 不需要資料庫的資料，但需要使用一些 active record 的方法，就使用 ActiveAttr 這個 gem</li>\n<li>Enum 偏好使用 Hash 表示而不是陣列</li>\n<li>Model 內放置的順序：</li>\n</ol>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> &lt; ActiveRecord::Base</span></span><br><span class=\"line\">  <span class=\"comment\"># keep the default scope first (if any)</span></span><br><span class=\"line\">  default_scope &#123; where(<span class=\"symbol\">active:</span> <span class=\"literal\">true</span>) &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># constants come up next</span></span><br><span class=\"line\">  COLORS = <span class=\"string\">%w(red green blue)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># afterwards we put attr related macros</span></span><br><span class=\"line\">  <span class=\"keyword\">attr_accessor</span> <span class=\"symbol\">:formatted_date_of_birth</span></span><br><span class=\"line\"></span><br><span class=\"line\">  attr_accessible <span class=\"symbol\">:login</span>, <span class=\"symbol\">:first_name</span>, <span class=\"symbol\">:last_name</span>, <span class=\"symbol\">:email</span>, <span class=\"symbol\">:password</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Rails 4+ enums after attr macros</span></span><br><span class=\"line\">  enum <span class=\"symbol\">role:</span> &#123; <span class=\"symbol\">user:</span> <span class=\"number\">0</span>, <span class=\"symbol\">moderator:</span> <span class=\"number\">1</span>, <span class=\"symbol\">admin:</span> <span class=\"number\">2</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># followed by association macros</span></span><br><span class=\"line\">  belongs_to <span class=\"symbol\">:country</span></span><br><span class=\"line\"></span><br><span class=\"line\">  has_many <span class=\"symbol\">:authentications</span>, <span class=\"symbol\">dependent:</span> <span class=\"symbol\">:destroy</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># and validation macros</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:email</span>, <span class=\"symbol\">presence:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:username</span>, <span class=\"symbol\">presence:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  validates <span class=\"symbol\">:username</span>, <span class=\"symbol\">uniqueness:</span> &#123; <span class=\"symbol\">case_sensitive:</span> <span class=\"literal\">false</span> &#125;</span><br><span class=\"line\">  validates <span class=\"symbol\">:username</span>, <span class=\"symbol\">format:</span> &#123; <span class=\"symbol\">with:</span> /\\A[A-Za-z][A-Za-z<span class=\"number\">0</span>-<span class=\"number\">9._</span>-]&#123;<span class=\"number\">2</span>,<span class=\"number\">19</span>&#125;\\z/ &#125;</span><br><span class=\"line\">  validates <span class=\"symbol\">:password</span>, <span class=\"symbol\">format:</span> &#123; <span class=\"symbol\">with:</span> /\\A\\S&#123;<span class=\"number\">8</span>,<span class=\"number\">128</span>&#125;\\z/, <span class=\"symbol\">allow_nil:</span> <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># next we have callbacks</span></span><br><span class=\"line\">  before_save <span class=\"symbol\">:cook</span></span><br><span class=\"line\">  before_save <span class=\"symbol\">:update_username_lower</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># other macros (like devise's) should be placed after the callbacks</span></span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<ol start=\"7\">\n<li>寫 callback 的時候按照 callback 的執行順序寫</li>\n<li>搜尋資料庫時避免使用 interpolation ，容易有 SQL injection</li>\n</ol>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># bad - param will be interpolated unescaped</span></span><br><span class=\"line\">Client.where(<span class=\"string\">\"orders_count = <span class=\"subst\">#&#123;params[<span class=\"symbol\">:orders</span>]&#125;</span>\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># good - param will be properly escaped</span></span><br><span class=\"line\">Client.where(<span class=\"string\">'orders_count = ?'</span>, params[<span class=\"symbol\">:orders</span>])</span><br></pre></td></tr></table></figure>\n<ol start=\"9\">\n<li>搜尋超過一個參數時，可以考慮使用 named placeholder</li>\n</ol>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># okish</span></span><br><span class=\"line\">Client.where(</span><br><span class=\"line\">  <span class=\"string\">'created_at &gt;= ? AND created_at &lt;= ?'</span>,</span><br><span class=\"line\">  params[<span class=\"symbol\">:start_date</span>], params[<span class=\"symbol\">:end_date</span>]</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># good</span></span><br><span class=\"line\">Client.where(</span><br><span class=\"line\">  <span class=\"string\">'created_at &gt;= :start_date AND created_at &lt;= :end_date'</span>,</span><br><span class=\"line\">  <span class=\"symbol\">start_date:</span> params[<span class=\"symbol\">:start_date</span>], <span class=\"symbol\">end_date:</span> params[<span class=\"symbol\">:end_date</span>]</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<ol start=\"10\">\n<li>別以 id 排序，id 順序並不代表特殊意義，如果要以建立順序排序可以用時間排序</li>\n<li>盡量以有意義的名字來命名 foreign key，不要過度仰賴 Rails 的預設命名</li>\n<li>做出 reversible 的 migration</li>\n<li>不要使用 <code>time.parse</code></li>\n</ol>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># bad</span></span><br><span class=\"line\">Time.parse(<span class=\"string\">'2015-03-02 19:05:37'</span>) <span class=\"comment\"># =&gt; Will assume time string given is in the system's time zone.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># good</span></span><br><span class=\"line\">Time.zone.parse(<span class=\"string\">'2015-03-02 19:05:37'</span>) <span class=\"comment\"># =&gt; Mon, 02 Mar 2015 19:05:37 EET +02:00</span></span><br></pre></td></tr></table></figure>\n<ol start=\"14\">\n<li>prefer <code>size</code> over <code>length</code></li>\n</ol>\n<p><a href=\"https://github.com/github/rubocop-github/blob/master/STYLEGUIDE.md\" target=\"_blank\" rel=\"noopener\">rubocop-github</a><br>\n<a href=\"https://rails.rubystyle.guide/\" target=\"_blank\" rel=\"noopener\">The Rails Style Guide</a><br>\n<a href=\"https://shopify.github.io/ruby-style-guide/\" target=\"_blank\" rel=\"noopener\">Shopify/Ruby Style Guide</a></p>\n"},{"title":"Rails 的 try(), try! 跟 Ruby 的 &.","catalog":true,"toc_nav_num":true,"date":"2019-12-22T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1577003990392-a5f0f10e30d5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Ruby"],"updateDate":"2019-12-09T14:26:24.000Z","_content":"`try` 是 rails 的一個方法，`try!` 是他的另一個版本\n\n`&.` (safe navigation operator) 是 ruby 的一個運算子\n\n其中 `try!` 跟 `&.` 的結果很相似，他們 跟 `try` 比起來比較嚴謹，會去 check receiver 是否為 `nil`，如果都用只用 `try`，反而會導致都回傳 `nil` 而發生錯誤時也不知道在哪\n\n## try()\n\n比方說我們想要呼叫一個物件的方法，當物件是 nil 的時候 Rails 會給 method_missing 的例外\n\n```ruby\nif current_user.is_admin?\n    # ...\n    # 這時候如果 current_user 是 nil 會跑出 method_missing 的例外\nend\n```\n\n使用 `try` 就可以避免這種問題，不管 receiver 是 nil 還是 receiver 沒有這個方法都會回傳 nil\n\n```ruby\nif current_user.try(:is_admin?)\n    # ...\n    # 這時候如果 current_user 是 nil 就不會呼叫後面的 is_admin? 方法\nend\n```\n\n## try!()\n\n如果 `try!` 的 receiver 是 nil 的話，不會去執行後面的方法，但不是 nil 的話，這個 receiver 沒有 `try!` 參數內的方法的話會給出 No method error 而不是 nil \n\n## &.\n\n`&.` 的結果跟 `try!` 很像，但語意上不太相同\n\n如果今天使用下面這樣的表示\n\n```ruby\nif current_user&.(is_admin?)\n    # ...\nend\n```\n\n這邊的 `current_user&.(is_admin?)` 代表 `current_user && current_user.is_admin?`\n\n也就是 current_user 存在的話再做後面的那件事情，但 `try!` 的語意會比較偏向試試看能不能執行的感覺\n\n我原本覺得 `try!` 跟 `&.` 應該是一樣的東西，跟同事討論之後得出以上的結論，如果大家有意見歡迎討論\n\n參考資料：\n\n[ihower](https://ihower.tw/rails/activesupport.html)\n\n[try、try! 和 &.]([https://medium.com/@pk60905/rails-try-try-%E5%92%8C-safe-navigation-operator-8503ad9b958a](https://medium.com/@pk60905/rails-try-try-和-safe-navigation-operator-8503ad9b958a))\n\n[Leon's Blog](https://mgleon08.github.io/blog/2019/02/15/ruby-the-safe-navigation-operator/)","source":"_posts/2019-12-22-try.md","raw":"---\ntitle: \"Rails 的 try(), try! 跟 Ruby 的 &.\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-12-22 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1577003990392-a5f0f10e30d5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Ruby\ncatagories:\n- Ruby\nupdateDate: 2019-12-09 22:26:24\n# top: 1\n\n---\n`try` 是 rails 的一個方法，`try!` 是他的另一個版本\n\n`&.` (safe navigation operator) 是 ruby 的一個運算子\n\n其中 `try!` 跟 `&.` 的結果很相似，他們 跟 `try` 比起來比較嚴謹，會去 check receiver 是否為 `nil`，如果都用只用 `try`，反而會導致都回傳 `nil` 而發生錯誤時也不知道在哪\n\n## try()\n\n比方說我們想要呼叫一個物件的方法，當物件是 nil 的時候 Rails 會給 method_missing 的例外\n\n```ruby\nif current_user.is_admin?\n    # ...\n    # 這時候如果 current_user 是 nil 會跑出 method_missing 的例外\nend\n```\n\n使用 `try` 就可以避免這種問題，不管 receiver 是 nil 還是 receiver 沒有這個方法都會回傳 nil\n\n```ruby\nif current_user.try(:is_admin?)\n    # ...\n    # 這時候如果 current_user 是 nil 就不會呼叫後面的 is_admin? 方法\nend\n```\n\n## try!()\n\n如果 `try!` 的 receiver 是 nil 的話，不會去執行後面的方法，但不是 nil 的話，這個 receiver 沒有 `try!` 參數內的方法的話會給出 No method error 而不是 nil \n\n## &.\n\n`&.` 的結果跟 `try!` 很像，但語意上不太相同\n\n如果今天使用下面這樣的表示\n\n```ruby\nif current_user&.(is_admin?)\n    # ...\nend\n```\n\n這邊的 `current_user&.(is_admin?)` 代表 `current_user && current_user.is_admin?`\n\n也就是 current_user 存在的話再做後面的那件事情，但 `try!` 的語意會比較偏向試試看能不能執行的感覺\n\n我原本覺得 `try!` 跟 `&.` 應該是一樣的東西，跟同事討論之後得出以上的結論，如果大家有意見歡迎討論\n\n參考資料：\n\n[ihower](https://ihower.tw/rails/activesupport.html)\n\n[try、try! 和 &.]([https://medium.com/@pk60905/rails-try-try-%E5%92%8C-safe-navigation-operator-8503ad9b958a](https://medium.com/@pk60905/rails-try-try-和-safe-navigation-operator-8503ad9b958a))\n\n[Leon's Blog](https://mgleon08.github.io/blog/2019/02/15/ruby-the-safe-navigation-operator/)","slug":"2019-12-22-try","published":1,"updated":"2019-12-22T13:46:12.465Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0evh003h2ob1nydcxcai","content":"<p><code>try</code> 是 rails 的一個方法，<code>try!</code> 是他的另一個版本</p>\n<p><code>&amp;.</code> (safe navigation operator) 是 ruby 的一個運算子</p>\n<p>其中 <code>try!</code> 跟 <code>&amp;.</code> 的結果很相似，他們 跟 <code>try</code> 比起來比較嚴謹，會去 check receiver 是否為 <code>nil</code>，如果都用只用 <code>try</code>，反而會導致都回傳 <code>nil</code> 而發生錯誤時也不知道在哪</p>\n<h2 id=\"try\">try()</h2>\n<p>比方說我們想要呼叫一個物件的方法，當物件是 nil 的時候 Rails 會給 method_missing 的例外</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> current_user.is_admin?</span><br><span class=\"line\">    <span class=\"comment\"># ...</span></span><br><span class=\"line\">    <span class=\"comment\"># 這時候如果 current_user 是 nil 會跑出 method_missing 的例外</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>使用 <code>try</code> 就可以避免這種問題，不管 receiver 是 nil 還是 receiver 沒有這個方法都會回傳 nil</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> current_user.try(<span class=\"symbol\">:is_admin?</span>)</span><br><span class=\"line\">    <span class=\"comment\"># ...</span></span><br><span class=\"line\">    <span class=\"comment\"># 這時候如果 current_user 是 nil 就不會呼叫後面的 is_admin? 方法</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"try\">try!()</h2>\n<p>如果 <code>try!</code> 的 receiver 是 nil 的話，不會去執行後面的方法，但不是 nil 的話，這個 receiver 沒有 <code>try!</code> 參數內的方法的話會給出 No method error 而不是 nil</p>\n<h2 id=\"amp\">&amp;.</h2>\n<p><code>&amp;.</code> 的結果跟 <code>try!</code> 很像，但語意上不太相同</p>\n<p>如果今天使用下面這樣的表示</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> current_user&amp;.(is_admin?)</span><br><span class=\"line\">    <span class=\"comment\"># ...</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>這邊的 <code>current_user&amp;.(is_admin?)</code> 代表 <code>current_user &amp;&amp; current_user.is_admin?</code></p>\n<p>也就是 current_user 存在的話再做後面的那件事情，但 <code>try!</code> 的語意會比較偏向試試看能不能執行的感覺</p>\n<p>我原本覺得 <code>try!</code> 跟 <code>&amp;.</code> 應該是一樣的東西，跟同事討論之後得出以上的結論，如果大家有意見歡迎討論</p>\n<p>參考資料：</p>\n<p><a href=\"https://ihower.tw/rails/activesupport.html\" target=\"_blank\" rel=\"noopener\">ihower</a></p>\n<p><a href=\"%5Bhttps://medium.com/@pk60905/rails-try-try-%E5%92%8C-safe-navigation-operator-8503ad9b958a%5D(https://medium.com/@pk60905/rails-try-try-%E5%92%8C-safe-navigation-operator-8503ad9b958a)\">try、try! 和 &amp;.</a></p>\n<p><a href=\"https://mgleon08.github.io/blog/2019/02/15/ruby-the-safe-navigation-operator/\" target=\"_blank\" rel=\"noopener\">Leon’s Blog</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><code>try</code> 是 rails 的一個方法，<code>try!</code> 是他的另一個版本</p>\n<p><code>&amp;.</code> (safe navigation operator) 是 ruby 的一個運算子</p>\n<p>其中 <code>try!</code> 跟 <code>&amp;.</code> 的結果很相似，他們 跟 <code>try</code> 比起來比較嚴謹，會去 check receiver 是否為 <code>nil</code>，如果都用只用 <code>try</code>，反而會導致都回傳 <code>nil</code> 而發生錯誤時也不知道在哪</p>\n<h2>try()</h2>\n<p>比方說我們想要呼叫一個物件的方法，當物件是 nil 的時候 Rails 會給 method_missing 的例外</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> current_user.is_admin?</span><br><span class=\"line\">    <span class=\"comment\"># ...</span></span><br><span class=\"line\">    <span class=\"comment\"># 這時候如果 current_user 是 nil 會跑出 method_missing 的例外</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>使用 <code>try</code> 就可以避免這種問題，不管 receiver 是 nil 還是 receiver 沒有這個方法都會回傳 nil</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> current_user.try(<span class=\"symbol\">:is_admin?</span>)</span><br><span class=\"line\">    <span class=\"comment\"># ...</span></span><br><span class=\"line\">    <span class=\"comment\"># 這時候如果 current_user 是 nil 就不會呼叫後面的 is_admin? 方法</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<h2>try!()</h2>\n<p>如果 <code>try!</code> 的 receiver 是 nil 的話，不會去執行後面的方法，但不是 nil 的話，這個 receiver 沒有 <code>try!</code> 參數內的方法的話會給出 No method error 而不是 nil</p>\n<h2>&amp;.</h2>\n<p><code>&amp;.</code> 的結果跟 <code>try!</code> 很像，但語意上不太相同</p>\n<p>如果今天使用下面這樣的表示</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> current_user&amp;.(is_admin?)</span><br><span class=\"line\">    <span class=\"comment\"># ...</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>這邊的 <code>current_user&amp;.(is_admin?)</code> 代表 <code>current_user &amp;&amp; current_user.is_admin?</code></p>\n<p>也就是 current_user 存在的話再做後面的那件事情，但 <code>try!</code> 的語意會比較偏向試試看能不能執行的感覺</p>\n<p>我原本覺得 <code>try!</code> 跟 <code>&amp;.</code> 應該是一樣的東西，跟同事討論之後得出以上的結論，如果大家有意見歡迎討論</p>\n<p>參考資料：</p>\n<p><a href=\"https://ihower.tw/rails/activesupport.html\" target=\"_blank\" rel=\"noopener\">ihower</a></p>\n<p><a href=\"%5Bhttps://medium.com/@pk60905/rails-try-try-%E5%92%8C-safe-navigation-operator-8503ad9b958a%5D(https://medium.com/@pk60905/rails-try-try-%E5%92%8C-safe-navigation-operator-8503ad9b958a)\">try、try! 和 &amp;.</a></p>\n<p><a href=\"https://mgleon08.github.io/blog/2019/02/15/ruby-the-safe-navigation-operator/\" target=\"_blank\" rel=\"noopener\">Leon’s Blog</a></p>\n"},{"title":"JS30 day19 Webcam Fun","catalog":true,"toc_nav_num":true,"date":"2019-11-20T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1574249142908-c8824d0bdebb?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1567&q=80","catagories":["Javascript"],"updateDate":"2019-11-20T14:26:24.000Z","_content":"# JS30 day19 - Webcam Fun\n\n## 作業內容\n\n今天的難度又突然提升了，主要內容在玩弄攝影機的畫面，並改造成類似靈異現象的效果，像下面這張圖這樣\n![](https://i.imgur.com/o4TaXTR.jpg)\n\n## 學到什麼\n\n- JS\n  ###  1.  如何拿到 live 的攝影畫面\n  要使用攝影機有一個內建的 js 方法`navigator.mediaDevices.getUserMedia`，要注意的是他回傳的是 Promise 物件，詳細內容可以直接看下面參考資料\n  除此之外要注意 `localMediaStream` 是一個物件，我們必須利用一些特定方法把這個物件轉成 url 才能使用，在這裡使用的方法是設定 video 的 `srcObject` 屬性，等於把這個物件設成 url 的型態\n  \n  ```js\n  function getVideo(){\n    navigator.mediaDevices.getUserMedia({ video: true, audio: false })\n      .then(localMediaStream => {\n        video.srcObject = localMediaStream;\n        video.play()\n      })\n      // 使用 catch 來捕捉例外\n      .catch(err => {\n        console.log('Oh No!!', err);\n      })\n  }\n  ```\n  [srcObject](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/srcObject)\n  [navigator.mediaDevices.getUserMedia](https://tinyurl.com/y22tls2h)\n  \n  ###  2. 拍照功能：\n  `toDataURL()` 是只有 HTMLCanvasElement 這個元素可以使用的方法，他可以把圖片轉換成Base64編碼，裡面可以放兩個值，第一個是圖像格式，預設為 `image/png`，第二個是圖像品質，介於 0 - 1之間，兩個都是非必填參數\n  轉 Base64 通常用在小圖片，因為大圖片編碼起來會很長，好處是可以把編碼包到 HTML / CSS /JS 中，比較方便，壞處是圖片不會被快取起來\n  超連結有個屬性叫做 download `<a href=\"...\" download=\"檔名.txt\">點選下載</a>` 如果有這個屬性就會強迫下載\n  ```js\n  function takePhoto(){\n    // 發出聲音\n    snap.currentTime = 0\n    snap.play()\n    // 拍照\n    // 利用toDataURL把canvas的內容轉為base64的圖檔資訊\n    const data = canvas.toDataURL('image/jpeg')\n    const link = document.createElement('a')\n    link.href = data\n    link.setAttribute('download', 'hansome')\n    link.textContent = 'Download Image'\n    //insertBefore 在 Jquery 等同於 prepend\n    strip.insertBefore(link, strip.firstChild)\n  }\n  ```\n  [別人寫的相關紀錄](https://guahsu.io/2017/10/JavaScript30-19-Webcam-Fun/)\n  [有關超連結的 download 屬性](https://www.w3schools.com/tags/tag_a.asp)\n\n  ## 3. 把畫面呈現在畫布上\n  之前有說過，畫圖不是直接畫在 canvas 而是畫在他的 context 上，所以這邊選擇的節點是 ctx 不是 canvas\n  `drawImage()` 裡的參數為 image, x, y, width, height，最後兩個參數是縮放參數，非必填\n  `getImageData()` 回傳的值為 ImageDate 物件，它代表著這個 canvas 上某部分的像素，這個像素使用 debugger 抓出來會長的像下面那樣，每個數字分別代表 RGBA 的數值：第一個數字代表紅色，第二個是綠色，第三個是藍色，第四個是 alpha 值，第五個是紅色... 以此類推\n  ```js\n  function paintToCanvas(){\n    const width = video.videoWidth\n    const height = video.videoHeight\n    canvas.width = width\n    canvas.height = height\n\n    return setInterval(function(){\n      ctx.drawImage(video, 0, 0, width, height)\n      const pixels = ctx.getImageData(0, 0, width, height)\n      console.log(pixels)\n      debugger\n    }, 16)\n  }\n  ```\n  ![](https://i.imgur.com/hP0ltd2.png)\n  了解 pixels 排列方式之後，就可以來改變輸出的影像了！\n  不管怎麼改造，其實做的順序都一樣：把 pixels 取出，讓他經過 function 變化之後再把改造完的 pixels 放回去\n  ```js\n  function paintToCanvas(){\n    const width = video.videoWidth\n    const height = video.videoHeight\n    canvas.width = width\n    canvas.height = height\n\n    return setInterval(function(){\n      ctx.drawImage(video, 0, 0, width, height);\n      //把 pixels 取出\n      let pixels = ctx.getImageData(0, 0, width, height);\n      // 用 function redEffect處裡\n      // pixels = redEffect(pixels);\n      // 用 function rgbSplit處裡\n      pixels = rgbSplit(pixels);\n      // 用 globalAlpha 屬性改變透明度\n      ctx.globalAlpha = 0.8\n      // 放回去\n      ctx.putImageData(pixels, 0, 0);\n    }, 16)\n  }\n  ```\n  [drawImage()](https://developer.mozilla.org/zh-TW/docs/Web/API/Canvas_API/Tutorial/Using_images)\n  [getImageDate()](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/getImageData)\n\n  其實最後有個 greenScreen 的效果還沒摸透怎麼回事 ＸＤ，等之後更熟悉前端之後再回來看可能會好點！\n  \n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\nHTML:\n```html\n<div class=\"photobooth\">\n  <div class=\"controls\">\n    <button onClick=\"takePhoto()\">Take Photo</button>\n    <div class=\"rgb\">\n      <label for=\"rmin\">Red Min:</label>\n      <input type=\"range\" min=0 max=255 name=\"rmin\">\n      <label for=\"rmax\">Red Max:</label>\n      <input type=\"range\" min=0 max=255 name=\"rmax\">\n\n      <br>\n\n      <label for=\"gmin\">Green Min:</label>\n      <input type=\"range\" min=0 max=255 name=\"gmin\">\n      <label for=\"gmax\">Green Max:</label>\n      <input type=\"range\" min=0 max=255 name=\"gmax\">\n\n      <br>\n\n      <label for=\"bmin\">Blue Min:</label>\n      <input type=\"range\" min=0 max=255 name=\"bmin\">\n      <label for=\"bmax\">Blue Max:</label>\n      <input type=\"range\" min=0 max=255 name=\"bmax\">\n    </div>\n  </div>\n\n  <canvas class=\"photo\"></canvas>\n  <video class=\"player\"></video>\n  <div class=\"strip\"></div>\n</div>\n\n<audio class=\"snap\" src=\"http://wesbos.com/demos/photobooth/snap.mp3\" hidden></audio>\n```\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nhtml {\n  font-size: 10px;\n  background: #ffc600;\n}\n\n.photobooth {\n  background: white;\n  max-width: 150rem;\n  margin: 2rem auto;\n  border-radius: 2px;\n}\n\n/*clearfix*/\n.photobooth:after {\n  content: '';\n  display: block;\n  clear: both;\n}\n\n.photo {\n  width: 100%;\n  float: left;\n}\n\n.player {\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width:200px;\n}\n\n/*\n  Strip!\n*/\n\n.strip {\n  padding: 2rem;\n}\n\n.strip img {\n  width: 100px;\n  overflow-x: scroll;\n  padding: 0.8rem 0.8rem 2.5rem 0.8rem;\n  box-shadow: 0 0 3px rgba(0,0,0,0.2);\n  background: white;\n}\n\n.strip a:nth-child(5n+1) img { transform: rotate(10deg); }\n.strip a:nth-child(5n+2) img { transform: rotate(-2deg); }\n.strip a:nth-child(5n+3) img { transform: rotate(8deg); }\n.strip a:nth-child(5n+4) img { transform: rotate(-11deg); }\n.strip a:nth-child(5n+5) img { transform: rotate(12deg); }\n\n```\nJS:\n```js\nconst video = document.querySelector('.player');\nconst canvas = document.querySelector('.photo');\nconst ctx = canvas.getContext('2d');\nconst strip = document.querySelector('.strip');\nconst snap = document.querySelector('.snap');\n\nfunction getVideo(){\n  navigator.mediaDevices.getUserMedia({ video: true, audio: false })\n    .then(localMediaStream => {\n      console.log(localMediaStream);\n      video.srcObject = localMediaStream;\n      video.play()\n    })\n    .catch(err => {\n      console.log('Oh No!!', err);\n    })\n}\n\nfunction paintToCanvas(){\n  const width = video.videoWidth\n  const height = video.videoHeight\n  canvas.width = width\n  canvas.height = height\n\n  return setInterval(function(){\n    ctx.drawImage(video, 0, 0, width, height);\n    //把 pixels 取出\n    let pixels = ctx.getImageData(0, 0, width, height);\n    // 用 function redEffect處裡\n    // pixels = redEffect(pixels);\n    // 用 function rgbSplit處裡\n    pixels = rgbSplit(pixels);\n    ctx.globalAlpha = 0.8\n    // 放回去\n    ctx.putImageData(pixels, 0, 0);\n  }, 16)\n}\n\nfunction takePhoto(){\n  // 發出聲音\n  snap.currentTime = 0\n  snap.play()\n  // 拍照\n  const data = canvas.toDataURL('image/jpeg')\n  const link = document.createElement('a')\n  link.href = data\n  link.setAttribute('download', 'hansome')\n  link.innerHTML= `<img src=\"${data}\" alt=\"Handsome Man\">`\n  strip.insertBefore(link, strip.firstChild)\n}\n\nfunction redEffect(pixels){\n  for(let i = 0; i < pixels.data.length; i+=4){\n    pixels.data[i + 0] = pixels.data[i + 0] + 100; //紅色\n    pixels.data[i + 1] = pixels.data[i + 1] - 50; //綠色\n    pixels.data[i + 2] = pixels.data[i + 2] * 0.5; //藍色\n  }\n  return pixels;\n}\n\nfunction rgbSplit(pixels){\n  for(let i = 0; i < pixels.data.length; i+=4){\n    pixels.data[i - 150] = pixels.data[i + 0]; //紅色\n    pixels.data[i + 100] = pixels.data[i + 1]; //綠色\n    pixels.data[i - 550] = pixels.data[i + 2]; //藍色\n  }\n  return pixels;\n}\n\ngetVideo()\n\nvideo.addEventListener('canplay', paintToCanvas)\n```","source":"_posts/2019-11-20-JS30_day19.md","raw":"---\ntitle: \"JS30 day19 Webcam Fun\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-20 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1574249142908-c8824d0bdebb?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1567&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-20 22:26:24\n# top: 1\n\n---\n# JS30 day19 - Webcam Fun\n\n## 作業內容\n\n今天的難度又突然提升了，主要內容在玩弄攝影機的畫面，並改造成類似靈異現象的效果，像下面這張圖這樣\n![](https://i.imgur.com/o4TaXTR.jpg)\n\n## 學到什麼\n\n- JS\n  ###  1.  如何拿到 live 的攝影畫面\n  要使用攝影機有一個內建的 js 方法`navigator.mediaDevices.getUserMedia`，要注意的是他回傳的是 Promise 物件，詳細內容可以直接看下面參考資料\n  除此之外要注意 `localMediaStream` 是一個物件，我們必須利用一些特定方法把這個物件轉成 url 才能使用，在這裡使用的方法是設定 video 的 `srcObject` 屬性，等於把這個物件設成 url 的型態\n  \n  ```js\n  function getVideo(){\n    navigator.mediaDevices.getUserMedia({ video: true, audio: false })\n      .then(localMediaStream => {\n        video.srcObject = localMediaStream;\n        video.play()\n      })\n      // 使用 catch 來捕捉例外\n      .catch(err => {\n        console.log('Oh No!!', err);\n      })\n  }\n  ```\n  [srcObject](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/srcObject)\n  [navigator.mediaDevices.getUserMedia](https://tinyurl.com/y22tls2h)\n  \n  ###  2. 拍照功能：\n  `toDataURL()` 是只有 HTMLCanvasElement 這個元素可以使用的方法，他可以把圖片轉換成Base64編碼，裡面可以放兩個值，第一個是圖像格式，預設為 `image/png`，第二個是圖像品質，介於 0 - 1之間，兩個都是非必填參數\n  轉 Base64 通常用在小圖片，因為大圖片編碼起來會很長，好處是可以把編碼包到 HTML / CSS /JS 中，比較方便，壞處是圖片不會被快取起來\n  超連結有個屬性叫做 download `<a href=\"...\" download=\"檔名.txt\">點選下載</a>` 如果有這個屬性就會強迫下載\n  ```js\n  function takePhoto(){\n    // 發出聲音\n    snap.currentTime = 0\n    snap.play()\n    // 拍照\n    // 利用toDataURL把canvas的內容轉為base64的圖檔資訊\n    const data = canvas.toDataURL('image/jpeg')\n    const link = document.createElement('a')\n    link.href = data\n    link.setAttribute('download', 'hansome')\n    link.textContent = 'Download Image'\n    //insertBefore 在 Jquery 等同於 prepend\n    strip.insertBefore(link, strip.firstChild)\n  }\n  ```\n  [別人寫的相關紀錄](https://guahsu.io/2017/10/JavaScript30-19-Webcam-Fun/)\n  [有關超連結的 download 屬性](https://www.w3schools.com/tags/tag_a.asp)\n\n  ## 3. 把畫面呈現在畫布上\n  之前有說過，畫圖不是直接畫在 canvas 而是畫在他的 context 上，所以這邊選擇的節點是 ctx 不是 canvas\n  `drawImage()` 裡的參數為 image, x, y, width, height，最後兩個參數是縮放參數，非必填\n  `getImageData()` 回傳的值為 ImageDate 物件，它代表著這個 canvas 上某部分的像素，這個像素使用 debugger 抓出來會長的像下面那樣，每個數字分別代表 RGBA 的數值：第一個數字代表紅色，第二個是綠色，第三個是藍色，第四個是 alpha 值，第五個是紅色... 以此類推\n  ```js\n  function paintToCanvas(){\n    const width = video.videoWidth\n    const height = video.videoHeight\n    canvas.width = width\n    canvas.height = height\n\n    return setInterval(function(){\n      ctx.drawImage(video, 0, 0, width, height)\n      const pixels = ctx.getImageData(0, 0, width, height)\n      console.log(pixels)\n      debugger\n    }, 16)\n  }\n  ```\n  ![](https://i.imgur.com/hP0ltd2.png)\n  了解 pixels 排列方式之後，就可以來改變輸出的影像了！\n  不管怎麼改造，其實做的順序都一樣：把 pixels 取出，讓他經過 function 變化之後再把改造完的 pixels 放回去\n  ```js\n  function paintToCanvas(){\n    const width = video.videoWidth\n    const height = video.videoHeight\n    canvas.width = width\n    canvas.height = height\n\n    return setInterval(function(){\n      ctx.drawImage(video, 0, 0, width, height);\n      //把 pixels 取出\n      let pixels = ctx.getImageData(0, 0, width, height);\n      // 用 function redEffect處裡\n      // pixels = redEffect(pixels);\n      // 用 function rgbSplit處裡\n      pixels = rgbSplit(pixels);\n      // 用 globalAlpha 屬性改變透明度\n      ctx.globalAlpha = 0.8\n      // 放回去\n      ctx.putImageData(pixels, 0, 0);\n    }, 16)\n  }\n  ```\n  [drawImage()](https://developer.mozilla.org/zh-TW/docs/Web/API/Canvas_API/Tutorial/Using_images)\n  [getImageDate()](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/getImageData)\n\n  其實最後有個 greenScreen 的效果還沒摸透怎麼回事 ＸＤ，等之後更熟悉前端之後再回來看可能會好點！\n  \n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\ncode 內容：\nHTML:\n```html\n<div class=\"photobooth\">\n  <div class=\"controls\">\n    <button onClick=\"takePhoto()\">Take Photo</button>\n    <div class=\"rgb\">\n      <label for=\"rmin\">Red Min:</label>\n      <input type=\"range\" min=0 max=255 name=\"rmin\">\n      <label for=\"rmax\">Red Max:</label>\n      <input type=\"range\" min=0 max=255 name=\"rmax\">\n\n      <br>\n\n      <label for=\"gmin\">Green Min:</label>\n      <input type=\"range\" min=0 max=255 name=\"gmin\">\n      <label for=\"gmax\">Green Max:</label>\n      <input type=\"range\" min=0 max=255 name=\"gmax\">\n\n      <br>\n\n      <label for=\"bmin\">Blue Min:</label>\n      <input type=\"range\" min=0 max=255 name=\"bmin\">\n      <label for=\"bmax\">Blue Max:</label>\n      <input type=\"range\" min=0 max=255 name=\"bmax\">\n    </div>\n  </div>\n\n  <canvas class=\"photo\"></canvas>\n  <video class=\"player\"></video>\n  <div class=\"strip\"></div>\n</div>\n\n<audio class=\"snap\" src=\"http://wesbos.com/demos/photobooth/snap.mp3\" hidden></audio>\n```\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nhtml {\n  font-size: 10px;\n  background: #ffc600;\n}\n\n.photobooth {\n  background: white;\n  max-width: 150rem;\n  margin: 2rem auto;\n  border-radius: 2px;\n}\n\n/*clearfix*/\n.photobooth:after {\n  content: '';\n  display: block;\n  clear: both;\n}\n\n.photo {\n  width: 100%;\n  float: left;\n}\n\n.player {\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width:200px;\n}\n\n/*\n  Strip!\n*/\n\n.strip {\n  padding: 2rem;\n}\n\n.strip img {\n  width: 100px;\n  overflow-x: scroll;\n  padding: 0.8rem 0.8rem 2.5rem 0.8rem;\n  box-shadow: 0 0 3px rgba(0,0,0,0.2);\n  background: white;\n}\n\n.strip a:nth-child(5n+1) img { transform: rotate(10deg); }\n.strip a:nth-child(5n+2) img { transform: rotate(-2deg); }\n.strip a:nth-child(5n+3) img { transform: rotate(8deg); }\n.strip a:nth-child(5n+4) img { transform: rotate(-11deg); }\n.strip a:nth-child(5n+5) img { transform: rotate(12deg); }\n\n```\nJS:\n```js\nconst video = document.querySelector('.player');\nconst canvas = document.querySelector('.photo');\nconst ctx = canvas.getContext('2d');\nconst strip = document.querySelector('.strip');\nconst snap = document.querySelector('.snap');\n\nfunction getVideo(){\n  navigator.mediaDevices.getUserMedia({ video: true, audio: false })\n    .then(localMediaStream => {\n      console.log(localMediaStream);\n      video.srcObject = localMediaStream;\n      video.play()\n    })\n    .catch(err => {\n      console.log('Oh No!!', err);\n    })\n}\n\nfunction paintToCanvas(){\n  const width = video.videoWidth\n  const height = video.videoHeight\n  canvas.width = width\n  canvas.height = height\n\n  return setInterval(function(){\n    ctx.drawImage(video, 0, 0, width, height);\n    //把 pixels 取出\n    let pixels = ctx.getImageData(0, 0, width, height);\n    // 用 function redEffect處裡\n    // pixels = redEffect(pixels);\n    // 用 function rgbSplit處裡\n    pixels = rgbSplit(pixels);\n    ctx.globalAlpha = 0.8\n    // 放回去\n    ctx.putImageData(pixels, 0, 0);\n  }, 16)\n}\n\nfunction takePhoto(){\n  // 發出聲音\n  snap.currentTime = 0\n  snap.play()\n  // 拍照\n  const data = canvas.toDataURL('image/jpeg')\n  const link = document.createElement('a')\n  link.href = data\n  link.setAttribute('download', 'hansome')\n  link.innerHTML= `<img src=\"${data}\" alt=\"Handsome Man\">`\n  strip.insertBefore(link, strip.firstChild)\n}\n\nfunction redEffect(pixels){\n  for(let i = 0; i < pixels.data.length; i+=4){\n    pixels.data[i + 0] = pixels.data[i + 0] + 100; //紅色\n    pixels.data[i + 1] = pixels.data[i + 1] - 50; //綠色\n    pixels.data[i + 2] = pixels.data[i + 2] * 0.5; //藍色\n  }\n  return pixels;\n}\n\nfunction rgbSplit(pixels){\n  for(let i = 0; i < pixels.data.length; i+=4){\n    pixels.data[i - 150] = pixels.data[i + 0]; //紅色\n    pixels.data[i + 100] = pixels.data[i + 1]; //綠色\n    pixels.data[i - 550] = pixels.data[i + 2]; //藍色\n  }\n  return pixels;\n}\n\ngetVideo()\n\nvideo.addEventListener('canplay', paintToCanvas)\n```","slug":"2019-11-20-JS30_day19","published":1,"updated":"2019-11-22T07:08:57.052Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0evq003p2ob18n2zvfvb","content":"<h1 id=\"js30-day19-webcam-fun\">JS30 day19 - Webcam Fun</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>今天的難度又突然提升了，主要內容在玩弄攝影機的畫面，並改造成類似靈異現象的效果，像下面這張圖這樣<br>\n<img src=\"https://i.imgur.com/o4TaXTR.jpg\" alt=\"\"></p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<h3 id=\"1-如何拿到-live-的攝影畫面\">1.  如何拿到 live 的攝影畫面</h3>\n<p>要使用攝影機有一個內建的 js 方法<code>navigator.mediaDevices.getUserMedia</code>，要注意的是他回傳的是 Promise 物件，詳細內容可以直接看下面參考資料<br>\n除此之外要注意 <code>localMediaStream</code> 是一個物件，我們必須利用一些特定方法把這個物件轉成 url 才能使用，在這裡使用的方法是設定 video 的 <code>srcObject</code> 屬性，等於把這個物件設成 url 的型態</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getVideo</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  navigator.mediaDevices.getUserMedia(&#123; <span class=\"attr\">video</span>: <span class=\"literal\">true</span>, <span class=\"attr\">audio</span>: <span class=\"literal\">false</span> &#125;)</span><br><span class=\"line\">    .then(<span class=\"function\"><span class=\"params\">localMediaStream</span> =&gt;</span> &#123;</span><br><span class=\"line\">      video.srcObject = localMediaStream;</span><br><span class=\"line\">      video.play()</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">// 使用 catch 來捕捉例外</span></span><br><span class=\"line\">    .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'Oh No!!'</span>, err);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/srcObject\" target=\"_blank\" rel=\"noopener\">srcObject</a><br>\n<a href=\"https://tinyurl.com/y22tls2h\" target=\"_blank\" rel=\"noopener\">navigator.mediaDevices.getUserMedia</a></p>\n<h3 id=\"2-拍照功能\">2. 拍照功能：</h3>\n<p><code>toDataURL()</code> 是只有 HTMLCanvasElement 這個元素可以使用的方法，他可以把圖片轉換成Base64編碼，裡面可以放兩個值，第一個是圖像格式，預設為 <code>image/png</code>，第二個是圖像品質，介於 0 - 1之間，兩個都是非必填參數<br>\n轉 Base64 通常用在小圖片，因為大圖片編碼起來會很長，好處是可以把編碼包到 HTML / CSS /JS 中，比較方便，壞處是圖片不會被快取起來<br>\n超連結有個屬性叫做 download <code>&lt;a href=&quot;...&quot; download=&quot;檔名.txt&quot;&gt;點選下載&lt;/a&gt;</code> 如果有這個屬性就會強迫下載</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">takePhoto</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 發出聲音</span></span><br><span class=\"line\">  snap.currentTime = <span class=\"number\">0</span></span><br><span class=\"line\">  snap.play()</span><br><span class=\"line\">  <span class=\"comment\">// 拍照</span></span><br><span class=\"line\">  <span class=\"comment\">// 利用toDataURL把canvas的內容轉為base64的圖檔資訊</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> data = canvas.toDataURL(<span class=\"string\">'image/jpeg'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> link = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'a'</span>)</span><br><span class=\"line\">  link.href = data</span><br><span class=\"line\">  link.setAttribute(<span class=\"string\">'download'</span>, <span class=\"string\">'hansome'</span>)</span><br><span class=\"line\">  link.textContent = <span class=\"string\">'Download Image'</span></span><br><span class=\"line\">  <span class=\"comment\">//insertBefore 在 Jquery 等同於 prepend</span></span><br><span class=\"line\">  strip.insertBefore(link, strip.firstChild)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://guahsu.io/2017/10/JavaScript30-19-Webcam-Fun/\" target=\"_blank\" rel=\"noopener\">別人寫的相關紀錄</a><br>\n<a href=\"https://www.w3schools.com/tags/tag_a.asp\" target=\"_blank\" rel=\"noopener\">有關超連結的 download 屬性</a></p>\n<h2 id=\"3-把畫面呈現在畫布上\">3. 把畫面呈現在畫布上</h2>\n<p>之前有說過，畫圖不是直接畫在 canvas 而是畫在他的 context 上，所以這邊選擇的節點是 ctx 不是 canvas<br>\n<code>drawImage()</code> 裡的參數為 image, x, y, width, height，最後兩個參數是縮放參數，非必填<br>\n<code>getImageData()</code> 回傳的值為 ImageDate 物件，它代表著這個 canvas 上某部分的像素，這個像素使用 debugger 抓出來會長的像下面那樣，每個數字分別代表 RGBA 的數值：第一個數字代表紅色，第二個是綠色，第三個是藍色，第四個是 alpha 值，第五個是紅色… 以此類推</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">paintToCanvas</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> width = video.videoWidth</span><br><span class=\"line\">  <span class=\"keyword\">const</span> height = video.videoHeight</span><br><span class=\"line\">  canvas.width = width</span><br><span class=\"line\">  canvas.height = height</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    ctx.drawImage(video, <span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> pixels = ctx.getImageData(<span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height)</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(pixels)</span><br><span class=\"line\">    <span class=\"keyword\">debugger</span></span><br><span class=\"line\">  &#125;, <span class=\"number\">16</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://i.imgur.com/hP0ltd2.png\" alt=\"\"><br>\n了解 pixels 排列方式之後，就可以來改變輸出的影像了！<br>\n不管怎麼改造，其實做的順序都一樣：把 pixels 取出，讓他經過 function 變化之後再把改造完的 pixels 放回去</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">paintToCanvas</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> width = video.videoWidth</span><br><span class=\"line\">  <span class=\"keyword\">const</span> height = video.videoHeight</span><br><span class=\"line\">  canvas.width = width</span><br><span class=\"line\">  canvas.height = height</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    ctx.drawImage(video, <span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height);</span><br><span class=\"line\">    <span class=\"comment\">//把 pixels 取出</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> pixels = ctx.getImageData(<span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height);</span><br><span class=\"line\">    <span class=\"comment\">// 用 function redEffect處裡</span></span><br><span class=\"line\">    <span class=\"comment\">// pixels = redEffect(pixels);</span></span><br><span class=\"line\">    <span class=\"comment\">// 用 function rgbSplit處裡</span></span><br><span class=\"line\">    pixels = rgbSplit(pixels);</span><br><span class=\"line\">    <span class=\"comment\">// 用 globalAlpha 屬性改變透明度</span></span><br><span class=\"line\">    ctx.globalAlpha = <span class=\"number\">0.8</span></span><br><span class=\"line\">    <span class=\"comment\">// 放回去</span></span><br><span class=\"line\">    ctx.putImageData(pixels, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;, <span class=\"number\">16</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://developer.mozilla.org/zh-TW/docs/Web/API/Canvas_API/Tutorial/Using_images\" target=\"_blank\" rel=\"noopener\">drawImage()</a><br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/getImageData\" target=\"_blank\" rel=\"noopener\">getImageDate()</a></p>\n<p>其實最後有個 greenScreen 的效果還沒摸透怎麼回事 ＸＤ，等之後更熟悉前端之後再回來看可能會好點！</p>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：<br>\nHTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"photobooth\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"controls\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">\"takePhoto()\"</span>&gt;</span>Take Photo<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"rgb\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"rmin\"</span>&gt;</span>Red Min:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">min</span>=<span class=\"string\">0</span> <span class=\"attr\">max</span>=<span class=\"string\">255</span> <span class=\"attr\">name</span>=<span class=\"string\">\"rmin\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"rmax\"</span>&gt;</span>Red Max:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">min</span>=<span class=\"string\">0</span> <span class=\"attr\">max</span>=<span class=\"string\">255</span> <span class=\"attr\">name</span>=<span class=\"string\">\"rmax\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"gmin\"</span>&gt;</span>Green Min:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">min</span>=<span class=\"string\">0</span> <span class=\"attr\">max</span>=<span class=\"string\">255</span> <span class=\"attr\">name</span>=<span class=\"string\">\"gmin\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"gmax\"</span>&gt;</span>Green Max:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">min</span>=<span class=\"string\">0</span> <span class=\"attr\">max</span>=<span class=\"string\">255</span> <span class=\"attr\">name</span>=<span class=\"string\">\"gmax\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"bmin\"</span>&gt;</span>Blue Min:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">min</span>=<span class=\"string\">0</span> <span class=\"attr\">max</span>=<span class=\"string\">255</span> <span class=\"attr\">name</span>=<span class=\"string\">\"bmin\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"bmax\"</span>&gt;</span>Blue Max:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">min</span>=<span class=\"string\">0</span> <span class=\"attr\">max</span>=<span class=\"string\">255</span> <span class=\"attr\">name</span>=<span class=\"string\">\"bmax\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">class</span>=<span class=\"string\">\"photo\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">class</span>=<span class=\"string\">\"player\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"strip\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">audio</span> <span class=\"attr\">class</span>=<span class=\"string\">\"snap\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://wesbos.com/demos/photobooth/snap.mp3\"</span> <span class=\"attr\">hidden</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.photobooth</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">150rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">2rem</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*clearfix*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.photobooth</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.photo</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.player</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  Strip!</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.strip</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">2rem</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.strip</span> <span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow-x</span>: scroll;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0.8rem</span> <span class=\"number\">0.8rem</span> <span class=\"number\">2.5rem</span> <span class=\"number\">0.8rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">3px</span> <span class=\"built_in\">rgba</span>(0,0,0,0.2);</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.strip</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:nth-child(5n+1)</span> <span class=\"selector-tag\">img</span> &#123; <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(10deg); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.strip</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:nth-child(5n+2)</span> <span class=\"selector-tag\">img</span> &#123; <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-2deg); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.strip</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:nth-child(5n+3)</span> <span class=\"selector-tag\">img</span> &#123; <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(8deg); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.strip</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:nth-child(5n+4)</span> <span class=\"selector-tag\">img</span> &#123; <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-11deg); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.strip</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:nth-child(5n+5)</span> <span class=\"selector-tag\">img</span> &#123; <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(12deg); &#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> video = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.player'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> canvas = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.photo'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> ctx = canvas.getContext(<span class=\"string\">'2d'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> strip = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.strip'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> snap = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.snap'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getVideo</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  navigator.mediaDevices.getUserMedia(&#123; <span class=\"attr\">video</span>: <span class=\"literal\">true</span>, <span class=\"attr\">audio</span>: <span class=\"literal\">false</span> &#125;)</span><br><span class=\"line\">    .then(<span class=\"function\"><span class=\"params\">localMediaStream</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(localMediaStream);</span><br><span class=\"line\">      video.srcObject = localMediaStream;</span><br><span class=\"line\">      video.play()</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'Oh No!!'</span>, err);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">paintToCanvas</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> width = video.videoWidth</span><br><span class=\"line\">  <span class=\"keyword\">const</span> height = video.videoHeight</span><br><span class=\"line\">  canvas.width = width</span><br><span class=\"line\">  canvas.height = height</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    ctx.drawImage(video, <span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height);</span><br><span class=\"line\">    <span class=\"comment\">//把 pixels 取出</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> pixels = ctx.getImageData(<span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height);</span><br><span class=\"line\">    <span class=\"comment\">// 用 function redEffect處裡</span></span><br><span class=\"line\">    <span class=\"comment\">// pixels = redEffect(pixels);</span></span><br><span class=\"line\">    <span class=\"comment\">// 用 function rgbSplit處裡</span></span><br><span class=\"line\">    pixels = rgbSplit(pixels);</span><br><span class=\"line\">    ctx.globalAlpha = <span class=\"number\">0.8</span></span><br><span class=\"line\">    <span class=\"comment\">// 放回去</span></span><br><span class=\"line\">    ctx.putImageData(pixels, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;, <span class=\"number\">16</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">takePhoto</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 發出聲音</span></span><br><span class=\"line\">  snap.currentTime = <span class=\"number\">0</span></span><br><span class=\"line\">  snap.play()</span><br><span class=\"line\">  <span class=\"comment\">// 拍照</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> data = canvas.toDataURL(<span class=\"string\">'image/jpeg'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> link = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'a'</span>)</span><br><span class=\"line\">  link.href = data</span><br><span class=\"line\">  link.setAttribute(<span class=\"string\">'download'</span>, <span class=\"string\">'hansome'</span>)</span><br><span class=\"line\">  link.innerHTML= <span class=\"string\">`&lt;img src=\"<span class=\"subst\">$&#123;data&#125;</span>\" alt=\"Handsome Man\"&gt;`</span></span><br><span class=\"line\">  strip.insertBefore(link, strip.firstChild)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">redEffect</span>(<span class=\"params\">pixels</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; pixels.data.length; i+=<span class=\"number\">4</span>)&#123;</span><br><span class=\"line\">    pixels.data[i + <span class=\"number\">0</span>] = pixels.data[i + <span class=\"number\">0</span>] + <span class=\"number\">100</span>; <span class=\"comment\">//紅色</span></span><br><span class=\"line\">    pixels.data[i + <span class=\"number\">1</span>] = pixels.data[i + <span class=\"number\">1</span>] - <span class=\"number\">50</span>; <span class=\"comment\">//綠色</span></span><br><span class=\"line\">    pixels.data[i + <span class=\"number\">2</span>] = pixels.data[i + <span class=\"number\">2</span>] * <span class=\"number\">0.5</span>; <span class=\"comment\">//藍色</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> pixels;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rgbSplit</span>(<span class=\"params\">pixels</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; pixels.data.length; i+=<span class=\"number\">4</span>)&#123;</span><br><span class=\"line\">    pixels.data[i - <span class=\"number\">150</span>] = pixels.data[i + <span class=\"number\">0</span>]; <span class=\"comment\">//紅色</span></span><br><span class=\"line\">    pixels.data[i + <span class=\"number\">100</span>] = pixels.data[i + <span class=\"number\">1</span>]; <span class=\"comment\">//綠色</span></span><br><span class=\"line\">    pixels.data[i - <span class=\"number\">550</span>] = pixels.data[i + <span class=\"number\">2</span>]; <span class=\"comment\">//藍色</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> pixels;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">getVideo()</span><br><span class=\"line\"></span><br><span class=\"line\">video.addEventListener(<span class=\"string\">'canplay'</span>, paintToCanvas)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day19 - Webcam Fun</h1>\n<h2>作業內容</h2>\n<p>今天的難度又突然提升了，主要內容在玩弄攝影機的畫面，並改造成類似靈異現象的效果，像下面這張圖這樣<br>\n<img src=\"https://i.imgur.com/o4TaXTR.jpg\" alt=\"\"></p>\n<h2>學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<h3>1.  如何拿到 live 的攝影畫面</h3>\n<p>要使用攝影機有一個內建的 js 方法<code>navigator.mediaDevices.getUserMedia</code>，要注意的是他回傳的是 Promise 物件，詳細內容可以直接看下面參考資料<br>\n除此之外要注意 <code>localMediaStream</code> 是一個物件，我們必須利用一些特定方法把這個物件轉成 url 才能使用，在這裡使用的方法是設定 video 的 <code>srcObject</code> 屬性，等於把這個物件設成 url 的型態</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getVideo</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  navigator.mediaDevices.getUserMedia(&#123; <span class=\"attr\">video</span>: <span class=\"literal\">true</span>, <span class=\"attr\">audio</span>: <span class=\"literal\">false</span> &#125;)</span><br><span class=\"line\">    .then(<span class=\"function\"><span class=\"params\">localMediaStream</span> =&gt;</span> &#123;</span><br><span class=\"line\">      video.srcObject = localMediaStream;</span><br><span class=\"line\">      video.play()</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">// 使用 catch 來捕捉例外</span></span><br><span class=\"line\">    .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'Oh No!!'</span>, err);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/srcObject\" target=\"_blank\" rel=\"noopener\">srcObject</a><br>\n<a href=\"https://tinyurl.com/y22tls2h\" target=\"_blank\" rel=\"noopener\">navigator.mediaDevices.getUserMedia</a></p>\n<h3>2. 拍照功能：</h3>\n<p><code>toDataURL()</code> 是只有 HTMLCanvasElement 這個元素可以使用的方法，他可以把圖片轉換成Base64編碼，裡面可以放兩個值，第一個是圖像格式，預設為 <code>image/png</code>，第二個是圖像品質，介於 0 - 1之間，兩個都是非必填參數<br>\n轉 Base64 通常用在小圖片，因為大圖片編碼起來會很長，好處是可以把編碼包到 HTML / CSS /JS 中，比較方便，壞處是圖片不會被快取起來<br>\n超連結有個屬性叫做 download <code>&lt;a href=&quot;...&quot; download=&quot;檔名.txt&quot;&gt;點選下載&lt;/a&gt;</code> 如果有這個屬性就會強迫下載</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">takePhoto</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 發出聲音</span></span><br><span class=\"line\">  snap.currentTime = <span class=\"number\">0</span></span><br><span class=\"line\">  snap.play()</span><br><span class=\"line\">  <span class=\"comment\">// 拍照</span></span><br><span class=\"line\">  <span class=\"comment\">// 利用toDataURL把canvas的內容轉為base64的圖檔資訊</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> data = canvas.toDataURL(<span class=\"string\">'image/jpeg'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> link = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'a'</span>)</span><br><span class=\"line\">  link.href = data</span><br><span class=\"line\">  link.setAttribute(<span class=\"string\">'download'</span>, <span class=\"string\">'hansome'</span>)</span><br><span class=\"line\">  link.textContent = <span class=\"string\">'Download Image'</span></span><br><span class=\"line\">  <span class=\"comment\">//insertBefore 在 Jquery 等同於 prepend</span></span><br><span class=\"line\">  strip.insertBefore(link, strip.firstChild)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://guahsu.io/2017/10/JavaScript30-19-Webcam-Fun/\" target=\"_blank\" rel=\"noopener\">別人寫的相關紀錄</a><br>\n<a href=\"https://www.w3schools.com/tags/tag_a.asp\" target=\"_blank\" rel=\"noopener\">有關超連結的 download 屬性</a></p>\n<h2>3. 把畫面呈現在畫布上</h2>\n<p>之前有說過，畫圖不是直接畫在 canvas 而是畫在他的 context 上，所以這邊選擇的節點是 ctx 不是 canvas<br>\n<code>drawImage()</code> 裡的參數為 image, x, y, width, height，最後兩個參數是縮放參數，非必填<br>\n<code>getImageData()</code> 回傳的值為 ImageDate 物件，它代表著這個 canvas 上某部分的像素，這個像素使用 debugger 抓出來會長的像下面那樣，每個數字分別代表 RGBA 的數值：第一個數字代表紅色，第二個是綠色，第三個是藍色，第四個是 alpha 值，第五個是紅色… 以此類推</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">paintToCanvas</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> width = video.videoWidth</span><br><span class=\"line\">  <span class=\"keyword\">const</span> height = video.videoHeight</span><br><span class=\"line\">  canvas.width = width</span><br><span class=\"line\">  canvas.height = height</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    ctx.drawImage(video, <span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> pixels = ctx.getImageData(<span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height)</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(pixels)</span><br><span class=\"line\">    <span class=\"keyword\">debugger</span></span><br><span class=\"line\">  &#125;, <span class=\"number\">16</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://i.imgur.com/hP0ltd2.png\" alt=\"\"><br>\n了解 pixels 排列方式之後，就可以來改變輸出的影像了！<br>\n不管怎麼改造，其實做的順序都一樣：把 pixels 取出，讓他經過 function 變化之後再把改造完的 pixels 放回去</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">paintToCanvas</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> width = video.videoWidth</span><br><span class=\"line\">  <span class=\"keyword\">const</span> height = video.videoHeight</span><br><span class=\"line\">  canvas.width = width</span><br><span class=\"line\">  canvas.height = height</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    ctx.drawImage(video, <span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height);</span><br><span class=\"line\">    <span class=\"comment\">//把 pixels 取出</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> pixels = ctx.getImageData(<span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height);</span><br><span class=\"line\">    <span class=\"comment\">// 用 function redEffect處裡</span></span><br><span class=\"line\">    <span class=\"comment\">// pixels = redEffect(pixels);</span></span><br><span class=\"line\">    <span class=\"comment\">// 用 function rgbSplit處裡</span></span><br><span class=\"line\">    pixels = rgbSplit(pixels);</span><br><span class=\"line\">    <span class=\"comment\">// 用 globalAlpha 屬性改變透明度</span></span><br><span class=\"line\">    ctx.globalAlpha = <span class=\"number\">0.8</span></span><br><span class=\"line\">    <span class=\"comment\">// 放回去</span></span><br><span class=\"line\">    ctx.putImageData(pixels, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;, <span class=\"number\">16</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://developer.mozilla.org/zh-TW/docs/Web/API/Canvas_API/Tutorial/Using_images\" target=\"_blank\" rel=\"noopener\">drawImage()</a><br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/getImageData\" target=\"_blank\" rel=\"noopener\">getImageDate()</a></p>\n<p>其實最後有個 greenScreen 的效果還沒摸透怎麼回事 ＸＤ，等之後更熟悉前端之後再回來看可能會好點！</p>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<p>code 內容：<br>\nHTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"photobooth\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"controls\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">\"takePhoto()\"</span>&gt;</span>Take Photo<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"rgb\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"rmin\"</span>&gt;</span>Red Min:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">min</span>=<span class=\"string\">0</span> <span class=\"attr\">max</span>=<span class=\"string\">255</span> <span class=\"attr\">name</span>=<span class=\"string\">\"rmin\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"rmax\"</span>&gt;</span>Red Max:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">min</span>=<span class=\"string\">0</span> <span class=\"attr\">max</span>=<span class=\"string\">255</span> <span class=\"attr\">name</span>=<span class=\"string\">\"rmax\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"gmin\"</span>&gt;</span>Green Min:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">min</span>=<span class=\"string\">0</span> <span class=\"attr\">max</span>=<span class=\"string\">255</span> <span class=\"attr\">name</span>=<span class=\"string\">\"gmin\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"gmax\"</span>&gt;</span>Green Max:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">min</span>=<span class=\"string\">0</span> <span class=\"attr\">max</span>=<span class=\"string\">255</span> <span class=\"attr\">name</span>=<span class=\"string\">\"gmax\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"bmin\"</span>&gt;</span>Blue Min:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">min</span>=<span class=\"string\">0</span> <span class=\"attr\">max</span>=<span class=\"string\">255</span> <span class=\"attr\">name</span>=<span class=\"string\">\"bmin\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"bmax\"</span>&gt;</span>Blue Max:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">min</span>=<span class=\"string\">0</span> <span class=\"attr\">max</span>=<span class=\"string\">255</span> <span class=\"attr\">name</span>=<span class=\"string\">\"bmax\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">class</span>=<span class=\"string\">\"photo\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">class</span>=<span class=\"string\">\"player\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"strip\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">audio</span> <span class=\"attr\">class</span>=<span class=\"string\">\"snap\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://wesbos.com/demos/photobooth/snap.mp3\"</span> <span class=\"attr\">hidden</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.photobooth</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">150rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">2rem</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*clearfix*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.photobooth</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.photo</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.player</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  Strip!</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.strip</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">2rem</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.strip</span> <span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow-x</span>: scroll;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0.8rem</span> <span class=\"number\">0.8rem</span> <span class=\"number\">2.5rem</span> <span class=\"number\">0.8rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">3px</span> <span class=\"built_in\">rgba</span>(0,0,0,0.2);</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.strip</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:nth-child(5n+1)</span> <span class=\"selector-tag\">img</span> &#123; <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(10deg); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.strip</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:nth-child(5n+2)</span> <span class=\"selector-tag\">img</span> &#123; <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-2deg); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.strip</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:nth-child(5n+3)</span> <span class=\"selector-tag\">img</span> &#123; <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(8deg); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.strip</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:nth-child(5n+4)</span> <span class=\"selector-tag\">img</span> &#123; <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-11deg); &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.strip</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:nth-child(5n+5)</span> <span class=\"selector-tag\">img</span> &#123; <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(12deg); &#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> video = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.player'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> canvas = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.photo'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> ctx = canvas.getContext(<span class=\"string\">'2d'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> strip = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.strip'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> snap = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.snap'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getVideo</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  navigator.mediaDevices.getUserMedia(&#123; <span class=\"attr\">video</span>: <span class=\"literal\">true</span>, <span class=\"attr\">audio</span>: <span class=\"literal\">false</span> &#125;)</span><br><span class=\"line\">    .then(<span class=\"function\"><span class=\"params\">localMediaStream</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(localMediaStream);</span><br><span class=\"line\">      video.srcObject = localMediaStream;</span><br><span class=\"line\">      video.play()</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'Oh No!!'</span>, err);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">paintToCanvas</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> width = video.videoWidth</span><br><span class=\"line\">  <span class=\"keyword\">const</span> height = video.videoHeight</span><br><span class=\"line\">  canvas.width = width</span><br><span class=\"line\">  canvas.height = height</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    ctx.drawImage(video, <span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height);</span><br><span class=\"line\">    <span class=\"comment\">//把 pixels 取出</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> pixels = ctx.getImageData(<span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height);</span><br><span class=\"line\">    <span class=\"comment\">// 用 function redEffect處裡</span></span><br><span class=\"line\">    <span class=\"comment\">// pixels = redEffect(pixels);</span></span><br><span class=\"line\">    <span class=\"comment\">// 用 function rgbSplit處裡</span></span><br><span class=\"line\">    pixels = rgbSplit(pixels);</span><br><span class=\"line\">    ctx.globalAlpha = <span class=\"number\">0.8</span></span><br><span class=\"line\">    <span class=\"comment\">// 放回去</span></span><br><span class=\"line\">    ctx.putImageData(pixels, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;, <span class=\"number\">16</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">takePhoto</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 發出聲音</span></span><br><span class=\"line\">  snap.currentTime = <span class=\"number\">0</span></span><br><span class=\"line\">  snap.play()</span><br><span class=\"line\">  <span class=\"comment\">// 拍照</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> data = canvas.toDataURL(<span class=\"string\">'image/jpeg'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> link = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'a'</span>)</span><br><span class=\"line\">  link.href = data</span><br><span class=\"line\">  link.setAttribute(<span class=\"string\">'download'</span>, <span class=\"string\">'hansome'</span>)</span><br><span class=\"line\">  link.innerHTML= <span class=\"string\">`&lt;img src=\"<span class=\"subst\">$&#123;data&#125;</span>\" alt=\"Handsome Man\"&gt;`</span></span><br><span class=\"line\">  strip.insertBefore(link, strip.firstChild)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">redEffect</span>(<span class=\"params\">pixels</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; pixels.data.length; i+=<span class=\"number\">4</span>)&#123;</span><br><span class=\"line\">    pixels.data[i + <span class=\"number\">0</span>] = pixels.data[i + <span class=\"number\">0</span>] + <span class=\"number\">100</span>; <span class=\"comment\">//紅色</span></span><br><span class=\"line\">    pixels.data[i + <span class=\"number\">1</span>] = pixels.data[i + <span class=\"number\">1</span>] - <span class=\"number\">50</span>; <span class=\"comment\">//綠色</span></span><br><span class=\"line\">    pixels.data[i + <span class=\"number\">2</span>] = pixels.data[i + <span class=\"number\">2</span>] * <span class=\"number\">0.5</span>; <span class=\"comment\">//藍色</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> pixels;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rgbSplit</span>(<span class=\"params\">pixels</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; pixels.data.length; i+=<span class=\"number\">4</span>)&#123;</span><br><span class=\"line\">    pixels.data[i - <span class=\"number\">150</span>] = pixels.data[i + <span class=\"number\">0</span>]; <span class=\"comment\">//紅色</span></span><br><span class=\"line\">    pixels.data[i + <span class=\"number\">100</span>] = pixels.data[i + <span class=\"number\">1</span>]; <span class=\"comment\">//綠色</span></span><br><span class=\"line\">    pixels.data[i - <span class=\"number\">550</span>] = pixels.data[i + <span class=\"number\">2</span>]; <span class=\"comment\">//藍色</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> pixels;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">getVideo()</span><br><span class=\"line\"></span><br><span class=\"line\">video.addEventListener(<span class=\"string\">'canplay'</span>, paintToCanvas)</span><br></pre></td></tr></table></figure>"},{"title":"JS30 day23 Speech Synthesis","catalog":true,"toc_nav_num":true,"date":"2019-11-24T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1569271532860-dd35503aaf1f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1951&q=80","catagories":["Javascript"],"updateDate":"2019-11-24T14:26:24.000Z","_content":"# JS30 day23 - Speech Synthesis\n\n## 作業內容\n\n最近做的都跟聲音有關，雖然概念上不複雜但我覺得 Google 能把這個東西實作出來放在瀏覽器真的太猛了吧 =  =，這個作業自己覺得比較難的部分是理解整個 google 系統是怎麼把聲音的資訊結合成物件\n![](https://i.imgur.com/wyvNVW8.png)\n\n## 學到什麼\n\n- JS\n  1. `SpeechSynthesisUtterance()` 物件為 Web Speech API 中代表一發音的需求，翻成白話文就是一段話的資訊，例如內容，語言、音調、聲音、速率等，我們可以透過 console log 看看這個物件的組成：\n  ```\n  SpeechSynthesisUtterance {text: \"\", lang: \"\", voice: null, volume: -1, rate: -1, …}\n  ```\n  發出聲音的方式是用下面的方式來說：\n  ```js\n  SpeechSynthesis.speak(<SpeechSynthesisUtterance實體>)\n  ```\n  上面這句的 `SpeechSynthesis` 介面是語音合成伺服器的控制器，可透過其來取得可使用的語音合成資訊，並播放或暫停發音等相關功能\n  <br>\n\n  2. `speechSynthesis.addEventListener('voiceschanged', populatVoices)`\n  voiceschanged 事件是當 `SpeechSynthesis.getVoices()` 改變時被觸發，它也是 SpeechSynthesis 唯一的一個事件。\n  這裡會被觸發，Bos 是說因為 SpeechSynthesis 被讀取所以觸發了這個事件\n  <br>\n  3. `SpeechSynthesis.getVoices()`：取得一陣列，其中包含目前所有的 SpeechSynthesisVoice 物件，其裡頭的屬性為當下環境支援的所有發音資訊，晚點必須選擇其中一個給 msg 這個實體才有辦法發出聲音\n  \n  ```js\n  function populateVoices(){\n    voices = this.getVoices()\n    console.log(voices)\n  }\n  ```\n  ![](https://i.imgur.com/hq4T4iD.png)\n\n  參考資料：https://ithelp.ithome.com.tw/articles/10196799\n\n  4. 現在要做出在下拉選單選擇不同語言就要發出不同語言的聲音\n  ```js\n  function setVoice(){\n    msg.voice = voices.find(voice => voice.name === this.value)\n  }\n  voicesDropdown.addEventListener('change', setVoice)\n  ```\n\n  5. 做出切換語言同時直接中段前一個然後發聲音\n  ```js\n  function setVoice(){\n    msg.voice = voices.find(voice => voice.name === this.value)\n    toggle()\n  }\n\n  function toggle(startOver = true){\n    speechSynthesis.cancel()\n    if (startOver){\n      speechSynthesis.speak(msg)\n    }\n  }\n  ```\n  6. 監聽 scroll bar 跟 text 變化\n  ```js\n  function setOption(){\n    console.log(this.name, this.value);\n    msg[${this.name}] = this.value;\n    toggle();\n  }\n  options.forEach(option => {\n    option.addEventListener('change', setOption)\n  })\n  ```\n  ![](https://i.imgur.com/eO8xkik.png)\n\n  7. 綁定 stopButton 事件的時候注意不能這樣寫\n  ```js\n  stopButton.addEventListener('click', toggle(false))  \n  ```\n  這樣會只有在一開始的時候觸發一次，按鍵本身沒作用，所以有兩種寫法\n  `bind()` 會生成一個新的綁定函式，第一個值是 this 的值，後面的才是第 1,2,3...個參數\n  ```js\n  stopButton.addEventListener('click', toggle.bind(null, false))  \n  // 或者\n  stopButton.addEventListener('click', () => toggle(false))  \n  ```\n\n  8. 經過自己分析之後，發出聲音的步驟可以拆解如下如下\n  ```js\n  //1.把瀏覽器可以發出的聲音列出來，放在下拉選單(window 會比 mac 少)，這邊的 this 是 speechSynthesis\n  voices = this.getVoices()\n  //2.根據使用者選的下拉選單，把指定的這個 vioce 物件塞回去給 SpeechSynthesisUtterance 生出來的實體 msg\n  msg.voice = voices.find(voice => voice.name === this.value)\n  //3.根據 input 不同改變這段 msg 的內容 / 速度 / 音高 \n  msg[this.name] = this.value \n  //4.包裝成 toggle function 發出聲音，如果傳入的參數是 false 就可以不發出聲音\n  function toggle(startOver = true){\n    speechSynthesis.cancel()\n    if (startOver){\n      speechSynthesis.speak(msg)\n    }\n  }\n  ```\n  \n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\n## code 內容：\nHTML:\n```html\n<div class=\"voiceinator\">\n\n      <h1>The Voiceinator 5000</h1>\n\n      <select name=\"voice\" id=\"voices\">\n        <option value=\"\">Select A Voice</option>\n      </select>\n\n      <label for=\"rate\">Rate:</label>\n      <input name=\"rate\" type=\"range\" min=\"0\" max=\"3\" value=\"1\" step=\"0.1\">\n\n      <label for=\"pitch\">Pitch:</label>\n\n      <input name=\"pitch\" type=\"range\" min=\"0\" max=\"2\" step=\"0.1\">\n      <textarea name=\"text\">Hello! I love JavaScript 👍</textarea>\n      <button id=\"stop\">Stop!</button>\n      <button id=\"speak\">Speak</button>\n<option value=\"\"></option>\n```\nCSS:\n```css\nhtml {\n  font-size: 10px;\n  box-sizing: border-box;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: sans-serif;\n  background-color: #3BC1AC;\n  display: flex;\n  min-height: 100vh;\n  align-items: center;\n\n  background-image:\n  radial-gradient(circle at 100% 150%, #3BC1AC 24%, #42D2BB 25%, #42D2BB 28%, #3BC1AC 29%, #3BC1AC 36%, #42D2BB 36%, #42D2BB 40%, transparent 40%, transparent),\n  radial-gradient(circle at 0    150%, #3BC1AC 24%, #42D2BB 25%, #42D2BB 28%, #3BC1AC 29%, #3BC1AC 36%, #42D2BB 36%, #42D2BB 40%, transparent 40%, transparent),\n  radial-gradient(circle at 50%  100%, #42D2BB 10%, #3BC1AC 11%, #3BC1AC 23%, #42D2BB 24%, #42D2BB 30%, #3BC1AC 31%, #3BC1AC 43%, #42D2BB 44%, #42D2BB 50%, #3BC1AC 51%, #3BC1AC 63%, #42D2BB 64%, #42D2BB 71%, transparent 71%, transparent),\n  radial-gradient(circle at 100% 50%, #42D2BB 5%, #3BC1AC 6%, #3BC1AC 15%, #42D2BB 16%, #42D2BB 20%, #3BC1AC 21%, #3BC1AC 30%, #42D2BB 31%, #42D2BB 35%, #3BC1AC 36%, #3BC1AC 45%, #42D2BB 46%, #42D2BB 49%, transparent 50%, transparent),\n  radial-gradient(circle at 0    50%, #42D2BB 5%, #3BC1AC 6%, #3BC1AC 15%, #42D2BB 16%, #42D2BB 20%, #3BC1AC 21%, #3BC1AC 30%, #42D2BB 31%, #42D2BB 35%, #3BC1AC 36%, #3BC1AC 45%, #42D2BB 46%, #42D2BB 49%, transparent 50%, transparent);\n  background-size:100px 50px;\n}\n\n.voiceinator {\n  padding: 2rem;\n  width: 50rem;\n  margin: 0 auto;\n  border-radius: 1rem;\n  position: relative;\n  background: white;\n  overflow: hidden;\n  z-index: 1;\n  box-shadow: 0 0 5px 5px rgba(0,0,0,0.1);\n}\n\nh1 {\n  width: calc(100% + 4rem);\n  margin: -2rem 0 2rem -2rem;\n  padding: .5rem;\n  background: #ffc600;\n  border-bottom: 5px solid #F3C010;\n  text-align: center;\n  font-size: 5rem;\n  font-weight: 100;\n  font-family: 'Pacifico', cursive;\n  text-shadow: 3px 3px 0 #F3C010;\n}\n\n.voiceinator input,\n.voiceinator button,\n.voiceinator select,\n.voiceinator textarea {\n  width: 100%;\n  display: block;\n  margin: 10px 0;\n  padding: 10px;\n  border: 0;\n  font-size: 2rem;\n  background: #F7F7F7;\n  outline: 0;\n}\n\ntextarea {\n  height: 20rem;\n}\n\ninput[type=\"select\"] {\n\n}\n\n.voiceinator button {\n  background: #ffc600;\n  border: 0;\n  width: 49%;\n  float: left;\n  font-family: 'Pacifico', cursive;\n  margin-bottom: 0;\n  font-size: 2rem;\n  border-bottom: 5px solid #F3C010;\n  cursor: pointer;\n  position: relative;\n}\n\n.voiceinator button:active {\n  top: 2px;\n}\n\n.voiceinator button:nth-of-type(1) {\n  margin-right: 2%;\n}\n\n```\nJS:\n```js\nconst msg = new SpeechSynthesisUtterance();\nlet voices = [];\nconst voicesDropdown = document.querySelector('[name=\"voice\"]');\nconst options = document.querySelectorAll('[type=\"range\"], [name=\"text\"]');\nconst speakButton = document.querySelector('#speak');\nconst stopButton = document.querySelector('#stop');\nmsg.text = document.querySelector('[name=\"text\"]').value\n\nfunction populateVoices(){\n  voices = this.getVoices()\n  const voiceOptions = voices\n    .map( voice => { return `<option value=\"${voice.name}\">${voice.name}(${voice.lang})</option>`})\n    .join('')\n  voicesDropdown.innerHTML = voiceOptions\n}\n\nfunction setVoice(){\n  msg.voice = voices.find(voice => voice.name === this.value)\n  toggle()\n}\n\nfunction toggle(startOver = true){\n  speechSynthesis.cancel()\n  if (startOver){\n    speechSynthesis.speak(msg)\n  }\n}\n\nfunction setOption(){\n  msg[this.name] = this.value;\n  toggle();\n}\n\nspeechSynthesis.addEventListener('voiceschanged', populateVoices)\nvoicesDropdown.addEventListener('change', setVoice)\noptions.forEach(option => {\n  option.addEventListener('change', setOption)\n})\nspeakButton.addEventListener('click', toggle.bind(null, false))\nstopButton.addEventListener('click', toggle(false))\n```","source":"_posts/2019-11-24-JS30_day23.md","raw":"---\ntitle: \"JS30 day23 Speech Synthesis\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-24 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1569271532860-dd35503aaf1f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1951&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-24 22:26:24\n# top: 1\n\n---\n# JS30 day23 - Speech Synthesis\n\n## 作業內容\n\n最近做的都跟聲音有關，雖然概念上不複雜但我覺得 Google 能把這個東西實作出來放在瀏覽器真的太猛了吧 =  =，這個作業自己覺得比較難的部分是理解整個 google 系統是怎麼把聲音的資訊結合成物件\n![](https://i.imgur.com/wyvNVW8.png)\n\n## 學到什麼\n\n- JS\n  1. `SpeechSynthesisUtterance()` 物件為 Web Speech API 中代表一發音的需求，翻成白話文就是一段話的資訊，例如內容，語言、音調、聲音、速率等，我們可以透過 console log 看看這個物件的組成：\n  ```\n  SpeechSynthesisUtterance {text: \"\", lang: \"\", voice: null, volume: -1, rate: -1, …}\n  ```\n  發出聲音的方式是用下面的方式來說：\n  ```js\n  SpeechSynthesis.speak(<SpeechSynthesisUtterance實體>)\n  ```\n  上面這句的 `SpeechSynthesis` 介面是語音合成伺服器的控制器，可透過其來取得可使用的語音合成資訊，並播放或暫停發音等相關功能\n  <br>\n\n  2. `speechSynthesis.addEventListener('voiceschanged', populatVoices)`\n  voiceschanged 事件是當 `SpeechSynthesis.getVoices()` 改變時被觸發，它也是 SpeechSynthesis 唯一的一個事件。\n  這裡會被觸發，Bos 是說因為 SpeechSynthesis 被讀取所以觸發了這個事件\n  <br>\n  3. `SpeechSynthesis.getVoices()`：取得一陣列，其中包含目前所有的 SpeechSynthesisVoice 物件，其裡頭的屬性為當下環境支援的所有發音資訊，晚點必須選擇其中一個給 msg 這個實體才有辦法發出聲音\n  \n  ```js\n  function populateVoices(){\n    voices = this.getVoices()\n    console.log(voices)\n  }\n  ```\n  ![](https://i.imgur.com/hq4T4iD.png)\n\n  參考資料：https://ithelp.ithome.com.tw/articles/10196799\n\n  4. 現在要做出在下拉選單選擇不同語言就要發出不同語言的聲音\n  ```js\n  function setVoice(){\n    msg.voice = voices.find(voice => voice.name === this.value)\n  }\n  voicesDropdown.addEventListener('change', setVoice)\n  ```\n\n  5. 做出切換語言同時直接中段前一個然後發聲音\n  ```js\n  function setVoice(){\n    msg.voice = voices.find(voice => voice.name === this.value)\n    toggle()\n  }\n\n  function toggle(startOver = true){\n    speechSynthesis.cancel()\n    if (startOver){\n      speechSynthesis.speak(msg)\n    }\n  }\n  ```\n  6. 監聽 scroll bar 跟 text 變化\n  ```js\n  function setOption(){\n    console.log(this.name, this.value);\n    msg[${this.name}] = this.value;\n    toggle();\n  }\n  options.forEach(option => {\n    option.addEventListener('change', setOption)\n  })\n  ```\n  ![](https://i.imgur.com/eO8xkik.png)\n\n  7. 綁定 stopButton 事件的時候注意不能這樣寫\n  ```js\n  stopButton.addEventListener('click', toggle(false))  \n  ```\n  這樣會只有在一開始的時候觸發一次，按鍵本身沒作用，所以有兩種寫法\n  `bind()` 會生成一個新的綁定函式，第一個值是 this 的值，後面的才是第 1,2,3...個參數\n  ```js\n  stopButton.addEventListener('click', toggle.bind(null, false))  \n  // 或者\n  stopButton.addEventListener('click', () => toggle(false))  \n  ```\n\n  8. 經過自己分析之後，發出聲音的步驟可以拆解如下如下\n  ```js\n  //1.把瀏覽器可以發出的聲音列出來，放在下拉選單(window 會比 mac 少)，這邊的 this 是 speechSynthesis\n  voices = this.getVoices()\n  //2.根據使用者選的下拉選單，把指定的這個 vioce 物件塞回去給 SpeechSynthesisUtterance 生出來的實體 msg\n  msg.voice = voices.find(voice => voice.name === this.value)\n  //3.根據 input 不同改變這段 msg 的內容 / 速度 / 音高 \n  msg[this.name] = this.value \n  //4.包裝成 toggle function 發出聲音，如果傳入的參數是 false 就可以不發出聲音\n  function toggle(startOver = true){\n    speechSynthesis.cancel()\n    if (startOver){\n      speechSynthesis.speak(msg)\n    }\n  }\n  ```\n  \n參考資料：\nhttps://github.com/wesbos/JavaScript30\n\n## code 內容：\nHTML:\n```html\n<div class=\"voiceinator\">\n\n      <h1>The Voiceinator 5000</h1>\n\n      <select name=\"voice\" id=\"voices\">\n        <option value=\"\">Select A Voice</option>\n      </select>\n\n      <label for=\"rate\">Rate:</label>\n      <input name=\"rate\" type=\"range\" min=\"0\" max=\"3\" value=\"1\" step=\"0.1\">\n\n      <label for=\"pitch\">Pitch:</label>\n\n      <input name=\"pitch\" type=\"range\" min=\"0\" max=\"2\" step=\"0.1\">\n      <textarea name=\"text\">Hello! I love JavaScript 👍</textarea>\n      <button id=\"stop\">Stop!</button>\n      <button id=\"speak\">Speak</button>\n<option value=\"\"></option>\n```\nCSS:\n```css\nhtml {\n  font-size: 10px;\n  box-sizing: border-box;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: sans-serif;\n  background-color: #3BC1AC;\n  display: flex;\n  min-height: 100vh;\n  align-items: center;\n\n  background-image:\n  radial-gradient(circle at 100% 150%, #3BC1AC 24%, #42D2BB 25%, #42D2BB 28%, #3BC1AC 29%, #3BC1AC 36%, #42D2BB 36%, #42D2BB 40%, transparent 40%, transparent),\n  radial-gradient(circle at 0    150%, #3BC1AC 24%, #42D2BB 25%, #42D2BB 28%, #3BC1AC 29%, #3BC1AC 36%, #42D2BB 36%, #42D2BB 40%, transparent 40%, transparent),\n  radial-gradient(circle at 50%  100%, #42D2BB 10%, #3BC1AC 11%, #3BC1AC 23%, #42D2BB 24%, #42D2BB 30%, #3BC1AC 31%, #3BC1AC 43%, #42D2BB 44%, #42D2BB 50%, #3BC1AC 51%, #3BC1AC 63%, #42D2BB 64%, #42D2BB 71%, transparent 71%, transparent),\n  radial-gradient(circle at 100% 50%, #42D2BB 5%, #3BC1AC 6%, #3BC1AC 15%, #42D2BB 16%, #42D2BB 20%, #3BC1AC 21%, #3BC1AC 30%, #42D2BB 31%, #42D2BB 35%, #3BC1AC 36%, #3BC1AC 45%, #42D2BB 46%, #42D2BB 49%, transparent 50%, transparent),\n  radial-gradient(circle at 0    50%, #42D2BB 5%, #3BC1AC 6%, #3BC1AC 15%, #42D2BB 16%, #42D2BB 20%, #3BC1AC 21%, #3BC1AC 30%, #42D2BB 31%, #42D2BB 35%, #3BC1AC 36%, #3BC1AC 45%, #42D2BB 46%, #42D2BB 49%, transparent 50%, transparent);\n  background-size:100px 50px;\n}\n\n.voiceinator {\n  padding: 2rem;\n  width: 50rem;\n  margin: 0 auto;\n  border-radius: 1rem;\n  position: relative;\n  background: white;\n  overflow: hidden;\n  z-index: 1;\n  box-shadow: 0 0 5px 5px rgba(0,0,0,0.1);\n}\n\nh1 {\n  width: calc(100% + 4rem);\n  margin: -2rem 0 2rem -2rem;\n  padding: .5rem;\n  background: #ffc600;\n  border-bottom: 5px solid #F3C010;\n  text-align: center;\n  font-size: 5rem;\n  font-weight: 100;\n  font-family: 'Pacifico', cursive;\n  text-shadow: 3px 3px 0 #F3C010;\n}\n\n.voiceinator input,\n.voiceinator button,\n.voiceinator select,\n.voiceinator textarea {\n  width: 100%;\n  display: block;\n  margin: 10px 0;\n  padding: 10px;\n  border: 0;\n  font-size: 2rem;\n  background: #F7F7F7;\n  outline: 0;\n}\n\ntextarea {\n  height: 20rem;\n}\n\ninput[type=\"select\"] {\n\n}\n\n.voiceinator button {\n  background: #ffc600;\n  border: 0;\n  width: 49%;\n  float: left;\n  font-family: 'Pacifico', cursive;\n  margin-bottom: 0;\n  font-size: 2rem;\n  border-bottom: 5px solid #F3C010;\n  cursor: pointer;\n  position: relative;\n}\n\n.voiceinator button:active {\n  top: 2px;\n}\n\n.voiceinator button:nth-of-type(1) {\n  margin-right: 2%;\n}\n\n```\nJS:\n```js\nconst msg = new SpeechSynthesisUtterance();\nlet voices = [];\nconst voicesDropdown = document.querySelector('[name=\"voice\"]');\nconst options = document.querySelectorAll('[type=\"range\"], [name=\"text\"]');\nconst speakButton = document.querySelector('#speak');\nconst stopButton = document.querySelector('#stop');\nmsg.text = document.querySelector('[name=\"text\"]').value\n\nfunction populateVoices(){\n  voices = this.getVoices()\n  const voiceOptions = voices\n    .map( voice => { return `<option value=\"${voice.name}\">${voice.name}(${voice.lang})</option>`})\n    .join('')\n  voicesDropdown.innerHTML = voiceOptions\n}\n\nfunction setVoice(){\n  msg.voice = voices.find(voice => voice.name === this.value)\n  toggle()\n}\n\nfunction toggle(startOver = true){\n  speechSynthesis.cancel()\n  if (startOver){\n    speechSynthesis.speak(msg)\n  }\n}\n\nfunction setOption(){\n  msg[this.name] = this.value;\n  toggle();\n}\n\nspeechSynthesis.addEventListener('voiceschanged', populateVoices)\nvoicesDropdown.addEventListener('change', setVoice)\noptions.forEach(option => {\n  option.addEventListener('change', setOption)\n})\nspeakButton.addEventListener('click', toggle.bind(null, false))\nstopButton.addEventListener('click', toggle(false))\n```","slug":"2019-11-24-JS30_day23","published":1,"updated":"2019-11-24T13:05:25.469Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0evs003q2ob1ft7wlnjb","content":"<h1 id=\"js30-day23-speech-synthesis\">JS30 day23 - Speech Synthesis</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>最近做的都跟聲音有關，雖然概念上不複雜但我覺得 Google 能把這個東西實作出來放在瀏覽器真的太猛了吧 =  =，這個作業自己覺得比較難的部分是理解整個 google 系統是怎麼把聲音的資訊結合成物件<br>\n<img src=\"https://i.imgur.com/wyvNVW8.png\" alt=\"\"></p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li><code>SpeechSynthesisUtterance()</code> 物件為 Web Speech API 中代表一發音的需求，翻成白話文就是一段話的資訊，例如內容，語言、音調、聲音、速率等，我們可以透過 console log 看看這個物件的組成：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SpeechSynthesisUtterance &#123;text: &quot;&quot;, lang: &quot;&quot;, voice: null, volume: -1, rate: -1, …&#125;</span><br></pre></td></tr></table></figure>\n<p>發出聲音的方式是用下面的方式來說：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SpeechSynthesis.speak(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">SpeechSynthesisUtterance實體</span>&gt;</span>)</span></span><br></pre></td></tr></table></figure>\n<p>上面這句的 <code>SpeechSynthesis</code> 介面是語音合成伺服器的控制器，可透過其來取得可使用的語音合成資訊，並播放或暫停發音等相關功能<br>\n<br></p>\n<ol start=\"2\">\n<li><code>speechSynthesis.addEventListener('voiceschanged', populatVoices)</code><br>\nvoiceschanged 事件是當 <code>SpeechSynthesis.getVoices()</code> 改變時被觸發，它也是 SpeechSynthesis 唯一的一個事件。<br>\n這裡會被觸發，Bos 是說因為 SpeechSynthesis 被讀取所以觸發了這個事件<br>\n<br></li>\n<li><code>SpeechSynthesis.getVoices()</code>：取得一陣列，其中包含目前所有的 SpeechSynthesisVoice 物件，其裡頭的屬性為當下環境支援的所有發音資訊，晚點必須選擇其中一個給 msg 這個實體才有辦法發出聲音</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">populateVoices</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  voices = <span class=\"keyword\">this</span>.getVoices()</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(voices)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://i.imgur.com/hq4T4iD.png\" alt=\"\"></p>\n<p>參考資料：<a href=\"https://ithelp.ithome.com.tw/articles/10196799\" target=\"_blank\" rel=\"noopener\">https://ithelp.ithome.com.tw/articles/10196799</a></p>\n<ol start=\"4\">\n<li>現在要做出在下拉選單選擇不同語言就要發出不同語言的聲音</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setVoice</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  msg.voice = voices.find(<span class=\"function\"><span class=\"params\">voice</span> =&gt;</span> voice.name === <span class=\"keyword\">this</span>.value)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">voicesDropdown.addEventListener(<span class=\"string\">'change'</span>, setVoice)</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>做出切換語言同時直接中段前一個然後發聲音</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setVoice</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  msg.voice = voices.find(<span class=\"function\"><span class=\"params\">voice</span> =&gt;</span> voice.name === <span class=\"keyword\">this</span>.value)</span><br><span class=\"line\">  toggle()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toggle</span>(<span class=\"params\">startOver = true</span>)</span>&#123;</span><br><span class=\"line\">  speechSynthesis.cancel()</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (startOver)&#123;</span><br><span class=\"line\">    speechSynthesis.speak(msg)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>監聽 scroll bar 跟 text 變化</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setOption</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.value);</span><br><span class=\"line\">  msg[$&#123;<span class=\"keyword\">this</span>.name&#125;] = <span class=\"keyword\">this</span>.value;</span><br><span class=\"line\">  toggle();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">options.forEach(<span class=\"function\"><span class=\"params\">option</span> =&gt;</span> &#123;</span><br><span class=\"line\">  option.addEventListener(<span class=\"string\">'change'</span>, setOption)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://i.imgur.com/eO8xkik.png\" alt=\"\"></p>\n<ol start=\"7\">\n<li>綁定 stopButton 事件的時候注意不能這樣寫</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stopButton.addEventListener(<span class=\"string\">'click'</span>, toggle(<span class=\"literal\">false</span>))</span><br></pre></td></tr></table></figure>\n<p>這樣會只有在一開始的時候觸發一次，按鍵本身沒作用，所以有兩種寫法<br>\n<code>bind()</code> 會生成一個新的綁定函式，第一個值是 this 的值，後面的才是第 1,2,3…個參數</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stopButton.addEventListener(<span class=\"string\">'click'</span>, toggle.bind(<span class=\"literal\">null</span>, <span class=\"literal\">false</span>))  </span><br><span class=\"line\"><span class=\"comment\">// 或者</span></span><br><span class=\"line\">stopButton.addEventListener(<span class=\"string\">'click'</span>, () =&gt; toggle(<span class=\"literal\">false</span>))</span><br></pre></td></tr></table></figure>\n<ol start=\"8\">\n<li>經過自己分析之後，發出聲音的步驟可以拆解如下如下</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.把瀏覽器可以發出的聲音列出來，放在下拉選單(window 會比 mac 少)，這邊的 this 是 speechSynthesis</span></span><br><span class=\"line\">voices = <span class=\"keyword\">this</span>.getVoices()</span><br><span class=\"line\"><span class=\"comment\">//2.根據使用者選的下拉選單，把指定的這個 vioce 物件塞回去給 SpeechSynthesisUtterance 生出來的實體 msg</span></span><br><span class=\"line\">msg.voice = voices.find(<span class=\"function\"><span class=\"params\">voice</span> =&gt;</span> voice.name === <span class=\"keyword\">this</span>.value)</span><br><span class=\"line\"><span class=\"comment\">//3.根據 input 不同改變這段 msg 的內容 / 速度 / 音高 </span></span><br><span class=\"line\">msg[<span class=\"keyword\">this</span>.name] = <span class=\"keyword\">this</span>.value </span><br><span class=\"line\"><span class=\"comment\">//4.包裝成 toggle function 發出聲音，如果傳入的參數是 false 就可以不發出聲音</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toggle</span>(<span class=\"params\">startOver = true</span>)</span>&#123;</span><br><span class=\"line\">  speechSynthesis.cancel()</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (startOver)&#123;</span><br><span class=\"line\">    speechSynthesis.speak(msg)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<h2 id=\"code-內容\">code 內容：</h2>\n<p>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"voiceinator\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>The Voiceinator 5000<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">name</span>=<span class=\"string\">\"voice\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"voices\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"\"</span>&gt;</span>Select A Voice<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"rate\"</span>&gt;</span>Rate:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"rate\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">min</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">max</span>=<span class=\"string\">\"3\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">step</span>=<span class=\"string\">\"0.1\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"pitch\"</span>&gt;</span>Pitch:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"pitch\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">min</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">max</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">step</span>=<span class=\"string\">\"0.1\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">name</span>=<span class=\"string\">\"text\"</span>&gt;</span>Hello! I love JavaScript 👍<span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"stop\"</span>&gt;</span>Stop!<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"speak\"</span>&gt;</span>Speak<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#3BC1AC</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>:</span><br><span class=\"line\">  <span class=\"built_in\">radial-gradient</span>(circle at 100% 150%, #3BC1AC 24%, #42D2BB 25%, #42D2BB 28%, #3BC1AC 29%, #3BC1AC 36%, #42D2BB 36%, #42D2BB 40%, transparent 40%, transparent),</span><br><span class=\"line\">  <span class=\"built_in\">radial-gradient</span>(circle at 0    150%, #3BC1AC 24%, #42D2BB 25%, #42D2BB 28%, #3BC1AC 29%, #3BC1AC 36%, #42D2BB 36%, #42D2BB 40%, transparent 40%, transparent),</span><br><span class=\"line\">  <span class=\"built_in\">radial-gradient</span>(circle at 50%  100%, #42D2BB 10%, #3BC1AC 11%, #3BC1AC 23%, #42D2BB 24%, #42D2BB 30%, #3BC1AC 31%, #3BC1AC 43%, #42D2BB 44%, #42D2BB 50%, #3BC1AC 51%, #3BC1AC 63%, #42D2BB 64%, #42D2BB 71%, transparent 71%, transparent),</span><br><span class=\"line\">  <span class=\"built_in\">radial-gradient</span>(circle at 100% 50%, #42D2BB 5%, #3BC1AC 6%, #3BC1AC 15%, #42D2BB 16%, #42D2BB 20%, #3BC1AC 21%, #3BC1AC 30%, #42D2BB 31%, #42D2BB 35%, #3BC1AC 36%, #3BC1AC 45%, #42D2BB 46%, #42D2BB 49%, transparent 50%, transparent),</span><br><span class=\"line\">  <span class=\"built_in\">radial-gradient</span>(circle at 0    50%, #42D2BB 5%, #3BC1AC 6%, #3BC1AC 15%, #42D2BB 16%, #42D2BB 20%, #3BC1AC 21%, #3BC1AC 30%, #42D2BB 31%, #42D2BB 35%, #3BC1AC 36%, #3BC1AC 45%, #42D2BB 46%, #42D2BB 49%, transparent 50%, transparent);</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>:<span class=\"number\">100px</span> <span class=\"number\">50px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.voiceinator</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">2rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">50rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"number\">5px</span> <span class=\"built_in\">rgba</span>(0,0,0,0.1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"built_in\">calc</span>(100% + 4rem);</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: -<span class=\"number\">2rem</span> <span class=\"number\">0</span> <span class=\"number\">2rem</span> -<span class=\"number\">2rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: .<span class=\"number\">5rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">5px</span> solid <span class=\"number\">#F3C010</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">5rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">100</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'Pacifico'</span>, cursive;</span><br><span class=\"line\">  <span class=\"attribute\">text-shadow</span>: <span class=\"number\">3px</span> <span class=\"number\">3px</span> <span class=\"number\">0</span> <span class=\"number\">#F3C010</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.voiceinator</span> <span class=\"selector-tag\">input</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.voiceinator</span> <span class=\"selector-tag\">button</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.voiceinator</span> <span class=\"selector-tag\">select</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.voiceinator</span> <span class=\"selector-tag\">textarea</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">2rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#F7F7F7</span>;</span><br><span class=\"line\">  <span class=\"attribute\">outline</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">textarea</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">20rem</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">input</span><span class=\"selector-attr\">[type=\"select\"]</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.voiceinator</span> <span class=\"selector-tag\">button</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">49%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'Pacifico'</span>, cursive;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">2rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">5px</span> solid <span class=\"number\">#F3C010</span>;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.voiceinator</span> <span class=\"selector-tag\">button</span><span class=\"selector-pseudo\">:active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.voiceinator</span> <span class=\"selector-tag\">button</span><span class=\"selector-pseudo\">:nth-of-type(1)</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-right</span>: <span class=\"number\">2%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> msg = <span class=\"keyword\">new</span> SpeechSynthesisUtterance();</span><br><span class=\"line\"><span class=\"keyword\">let</span> voices = [];</span><br><span class=\"line\"><span class=\"keyword\">const</span> voicesDropdown = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'[name=\"voice\"]'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> options = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'[type=\"range\"], [name=\"text\"]'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> speakButton = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#speak'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> stopButton = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#stop'</span>);</span><br><span class=\"line\">msg.text = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'[name=\"text\"]'</span>).value</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">populateVoices</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  voices = <span class=\"keyword\">this</span>.getVoices()</span><br><span class=\"line\">  <span class=\"keyword\">const</span> voiceOptions = voices</span><br><span class=\"line\">    .map( <span class=\"function\"><span class=\"params\">voice</span> =&gt;</span> &#123; <span class=\"keyword\">return</span> <span class=\"string\">`&lt;option value=\"<span class=\"subst\">$&#123;voice.name&#125;</span>\"&gt;<span class=\"subst\">$&#123;voice.name&#125;</span>(<span class=\"subst\">$&#123;voice.lang&#125;</span>)&lt;/option&gt;`</span>&#125;)</span><br><span class=\"line\">    .join(<span class=\"string\">''</span>)</span><br><span class=\"line\">  voicesDropdown.innerHTML = voiceOptions</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setVoice</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  msg.voice = voices.find(<span class=\"function\"><span class=\"params\">voice</span> =&gt;</span> voice.name === <span class=\"keyword\">this</span>.value)</span><br><span class=\"line\">  toggle()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toggle</span>(<span class=\"params\">startOver = true</span>)</span>&#123;</span><br><span class=\"line\">  speechSynthesis.cancel()</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (startOver)&#123;</span><br><span class=\"line\">    speechSynthesis.speak(msg)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setOption</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  msg[<span class=\"keyword\">this</span>.name] = <span class=\"keyword\">this</span>.value;</span><br><span class=\"line\">  toggle();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">speechSynthesis.addEventListener(<span class=\"string\">'voiceschanged'</span>, populateVoices)</span><br><span class=\"line\">voicesDropdown.addEventListener(<span class=\"string\">'change'</span>, setVoice)</span><br><span class=\"line\">options.forEach(<span class=\"function\"><span class=\"params\">option</span> =&gt;</span> &#123;</span><br><span class=\"line\">  option.addEventListener(<span class=\"string\">'change'</span>, setOption)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">speakButton.addEventListener(<span class=\"string\">'click'</span>, toggle.bind(<span class=\"literal\">null</span>, <span class=\"literal\">false</span>))</span><br><span class=\"line\">stopButton.addEventListener(<span class=\"string\">'click'</span>, toggle(<span class=\"literal\">false</span>))</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day23 - Speech Synthesis</h1>\n<h2>作業內容</h2>\n<p>最近做的都跟聲音有關，雖然概念上不複雜但我覺得 Google 能把這個東西實作出來放在瀏覽器真的太猛了吧 =  =，這個作業自己覺得比較難的部分是理解整個 google 系統是怎麼把聲音的資訊結合成物件<br>\n<img src=\"https://i.imgur.com/wyvNVW8.png\" alt=\"\"></p>\n<h2>學到什麼</h2>\n<ul>\n<li>\n<p>JS</p>\n<ol>\n<li><code>SpeechSynthesisUtterance()</code> 物件為 Web Speech API 中代表一發音的需求，翻成白話文就是一段話的資訊，例如內容，語言、音調、聲音、速率等，我們可以透過 console log 看看這個物件的組成：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SpeechSynthesisUtterance &#123;text: &quot;&quot;, lang: &quot;&quot;, voice: null, volume: -1, rate: -1, …&#125;</span><br></pre></td></tr></table></figure>\n<p>發出聲音的方式是用下面的方式來說：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SpeechSynthesis.speak(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">SpeechSynthesisUtterance實體</span>&gt;</span>)</span></span><br></pre></td></tr></table></figure>\n<p>上面這句的 <code>SpeechSynthesis</code> 介面是語音合成伺服器的控制器，可透過其來取得可使用的語音合成資訊，並播放或暫停發音等相關功能<br>\n<br></p>\n<ol start=\"2\">\n<li><code>speechSynthesis.addEventListener('voiceschanged', populatVoices)</code><br>\nvoiceschanged 事件是當 <code>SpeechSynthesis.getVoices()</code> 改變時被觸發，它也是 SpeechSynthesis 唯一的一個事件。<br>\n這裡會被觸發，Bos 是說因為 SpeechSynthesis 被讀取所以觸發了這個事件<br>\n<br></li>\n<li><code>SpeechSynthesis.getVoices()</code>：取得一陣列，其中包含目前所有的 SpeechSynthesisVoice 物件，其裡頭的屬性為當下環境支援的所有發音資訊，晚點必須選擇其中一個給 msg 這個實體才有辦法發出聲音</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">populateVoices</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  voices = <span class=\"keyword\">this</span>.getVoices()</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(voices)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://i.imgur.com/hq4T4iD.png\" alt=\"\"></p>\n<p>參考資料：<a href=\"https://ithelp.ithome.com.tw/articles/10196799\" target=\"_blank\" rel=\"noopener\">https://ithelp.ithome.com.tw/articles/10196799</a></p>\n<ol start=\"4\">\n<li>現在要做出在下拉選單選擇不同語言就要發出不同語言的聲音</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setVoice</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  msg.voice = voices.find(<span class=\"function\"><span class=\"params\">voice</span> =&gt;</span> voice.name === <span class=\"keyword\">this</span>.value)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">voicesDropdown.addEventListener(<span class=\"string\">'change'</span>, setVoice)</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>做出切換語言同時直接中段前一個然後發聲音</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setVoice</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  msg.voice = voices.find(<span class=\"function\"><span class=\"params\">voice</span> =&gt;</span> voice.name === <span class=\"keyword\">this</span>.value)</span><br><span class=\"line\">  toggle()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toggle</span>(<span class=\"params\">startOver = true</span>)</span>&#123;</span><br><span class=\"line\">  speechSynthesis.cancel()</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (startOver)&#123;</span><br><span class=\"line\">    speechSynthesis.speak(msg)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>監聽 scroll bar 跟 text 變化</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setOption</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name, <span class=\"keyword\">this</span>.value);</span><br><span class=\"line\">  msg[$&#123;<span class=\"keyword\">this</span>.name&#125;] = <span class=\"keyword\">this</span>.value;</span><br><span class=\"line\">  toggle();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">options.forEach(<span class=\"function\"><span class=\"params\">option</span> =&gt;</span> &#123;</span><br><span class=\"line\">  option.addEventListener(<span class=\"string\">'change'</span>, setOption)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://i.imgur.com/eO8xkik.png\" alt=\"\"></p>\n<ol start=\"7\">\n<li>綁定 stopButton 事件的時候注意不能這樣寫</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stopButton.addEventListener(<span class=\"string\">'click'</span>, toggle(<span class=\"literal\">false</span>))</span><br></pre></td></tr></table></figure>\n<p>這樣會只有在一開始的時候觸發一次，按鍵本身沒作用，所以有兩種寫法<br>\n<code>bind()</code> 會生成一個新的綁定函式，第一個值是 this 的值，後面的才是第 1,2,3…個參數</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stopButton.addEventListener(<span class=\"string\">'click'</span>, toggle.bind(<span class=\"literal\">null</span>, <span class=\"literal\">false</span>))  </span><br><span class=\"line\"><span class=\"comment\">// 或者</span></span><br><span class=\"line\">stopButton.addEventListener(<span class=\"string\">'click'</span>, () =&gt; toggle(<span class=\"literal\">false</span>))</span><br></pre></td></tr></table></figure>\n<ol start=\"8\">\n<li>經過自己分析之後，發出聲音的步驟可以拆解如下如下</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.把瀏覽器可以發出的聲音列出來，放在下拉選單(window 會比 mac 少)，這邊的 this 是 speechSynthesis</span></span><br><span class=\"line\">voices = <span class=\"keyword\">this</span>.getVoices()</span><br><span class=\"line\"><span class=\"comment\">//2.根據使用者選的下拉選單，把指定的這個 vioce 物件塞回去給 SpeechSynthesisUtterance 生出來的實體 msg</span></span><br><span class=\"line\">msg.voice = voices.find(<span class=\"function\"><span class=\"params\">voice</span> =&gt;</span> voice.name === <span class=\"keyword\">this</span>.value)</span><br><span class=\"line\"><span class=\"comment\">//3.根據 input 不同改變這段 msg 的內容 / 速度 / 音高 </span></span><br><span class=\"line\">msg[<span class=\"keyword\">this</span>.name] = <span class=\"keyword\">this</span>.value </span><br><span class=\"line\"><span class=\"comment\">//4.包裝成 toggle function 發出聲音，如果傳入的參數是 false 就可以不發出聲音</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toggle</span>(<span class=\"params\">startOver = true</span>)</span>&#123;</span><br><span class=\"line\">  speechSynthesis.cancel()</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (startOver)&#123;</span><br><span class=\"line\">    speechSynthesis.speak(msg)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>參考資料：<br>\n<a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<h2>code 內容：</h2>\n<p>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"voiceinator\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>The Voiceinator 5000<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">name</span>=<span class=\"string\">\"voice\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"voices\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"\"</span>&gt;</span>Select A Voice<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"rate\"</span>&gt;</span>Rate:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"rate\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">min</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">max</span>=<span class=\"string\">\"3\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">step</span>=<span class=\"string\">\"0.1\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"pitch\"</span>&gt;</span>Pitch:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"pitch\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">min</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">max</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">step</span>=<span class=\"string\">\"0.1\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">name</span>=<span class=\"string\">\"text\"</span>&gt;</span>Hello! I love JavaScript 👍<span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"stop\"</span>&gt;</span>Stop!<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"speak\"</span>&gt;</span>Speak<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#3BC1AC</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>:</span><br><span class=\"line\">  <span class=\"built_in\">radial-gradient</span>(circle at 100% 150%, #3BC1AC 24%, #42D2BB 25%, #42D2BB 28%, #3BC1AC 29%, #3BC1AC 36%, #42D2BB 36%, #42D2BB 40%, transparent 40%, transparent),</span><br><span class=\"line\">  <span class=\"built_in\">radial-gradient</span>(circle at 0    150%, #3BC1AC 24%, #42D2BB 25%, #42D2BB 28%, #3BC1AC 29%, #3BC1AC 36%, #42D2BB 36%, #42D2BB 40%, transparent 40%, transparent),</span><br><span class=\"line\">  <span class=\"built_in\">radial-gradient</span>(circle at 50%  100%, #42D2BB 10%, #3BC1AC 11%, #3BC1AC 23%, #42D2BB 24%, #42D2BB 30%, #3BC1AC 31%, #3BC1AC 43%, #42D2BB 44%, #42D2BB 50%, #3BC1AC 51%, #3BC1AC 63%, #42D2BB 64%, #42D2BB 71%, transparent 71%, transparent),</span><br><span class=\"line\">  <span class=\"built_in\">radial-gradient</span>(circle at 100% 50%, #42D2BB 5%, #3BC1AC 6%, #3BC1AC 15%, #42D2BB 16%, #42D2BB 20%, #3BC1AC 21%, #3BC1AC 30%, #42D2BB 31%, #42D2BB 35%, #3BC1AC 36%, #3BC1AC 45%, #42D2BB 46%, #42D2BB 49%, transparent 50%, transparent),</span><br><span class=\"line\">  <span class=\"built_in\">radial-gradient</span>(circle at 0    50%, #42D2BB 5%, #3BC1AC 6%, #3BC1AC 15%, #42D2BB 16%, #42D2BB 20%, #3BC1AC 21%, #3BC1AC 30%, #42D2BB 31%, #42D2BB 35%, #3BC1AC 36%, #3BC1AC 45%, #42D2BB 46%, #42D2BB 49%, transparent 50%, transparent);</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>:<span class=\"number\">100px</span> <span class=\"number\">50px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.voiceinator</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">2rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">50rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"number\">5px</span> <span class=\"built_in\">rgba</span>(0,0,0,0.1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"built_in\">calc</span>(100% + 4rem);</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: -<span class=\"number\">2rem</span> <span class=\"number\">0</span> <span class=\"number\">2rem</span> -<span class=\"number\">2rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: .<span class=\"number\">5rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">5px</span> solid <span class=\"number\">#F3C010</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">5rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">100</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'Pacifico'</span>, cursive;</span><br><span class=\"line\">  <span class=\"attribute\">text-shadow</span>: <span class=\"number\">3px</span> <span class=\"number\">3px</span> <span class=\"number\">0</span> <span class=\"number\">#F3C010</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.voiceinator</span> <span class=\"selector-tag\">input</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.voiceinator</span> <span class=\"selector-tag\">button</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.voiceinator</span> <span class=\"selector-tag\">select</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.voiceinator</span> <span class=\"selector-tag\">textarea</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">2rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#F7F7F7</span>;</span><br><span class=\"line\">  <span class=\"attribute\">outline</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">textarea</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">20rem</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">input</span><span class=\"selector-attr\">[type=\"select\"]</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.voiceinator</span> <span class=\"selector-tag\">button</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">49%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">'Pacifico'</span>, cursive;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">2rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">5px</span> solid <span class=\"number\">#F3C010</span>;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.voiceinator</span> <span class=\"selector-tag\">button</span><span class=\"selector-pseudo\">:active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.voiceinator</span> <span class=\"selector-tag\">button</span><span class=\"selector-pseudo\">:nth-of-type(1)</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-right</span>: <span class=\"number\">2%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> msg = <span class=\"keyword\">new</span> SpeechSynthesisUtterance();</span><br><span class=\"line\"><span class=\"keyword\">let</span> voices = [];</span><br><span class=\"line\"><span class=\"keyword\">const</span> voicesDropdown = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'[name=\"voice\"]'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> options = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'[type=\"range\"], [name=\"text\"]'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> speakButton = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#speak'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> stopButton = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#stop'</span>);</span><br><span class=\"line\">msg.text = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'[name=\"text\"]'</span>).value</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">populateVoices</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  voices = <span class=\"keyword\">this</span>.getVoices()</span><br><span class=\"line\">  <span class=\"keyword\">const</span> voiceOptions = voices</span><br><span class=\"line\">    .map( <span class=\"function\"><span class=\"params\">voice</span> =&gt;</span> &#123; <span class=\"keyword\">return</span> <span class=\"string\">`&lt;option value=\"<span class=\"subst\">$&#123;voice.name&#125;</span>\"&gt;<span class=\"subst\">$&#123;voice.name&#125;</span>(<span class=\"subst\">$&#123;voice.lang&#125;</span>)&lt;/option&gt;`</span>&#125;)</span><br><span class=\"line\">    .join(<span class=\"string\">''</span>)</span><br><span class=\"line\">  voicesDropdown.innerHTML = voiceOptions</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setVoice</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  msg.voice = voices.find(<span class=\"function\"><span class=\"params\">voice</span> =&gt;</span> voice.name === <span class=\"keyword\">this</span>.value)</span><br><span class=\"line\">  toggle()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toggle</span>(<span class=\"params\">startOver = true</span>)</span>&#123;</span><br><span class=\"line\">  speechSynthesis.cancel()</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (startOver)&#123;</span><br><span class=\"line\">    speechSynthesis.speak(msg)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setOption</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  msg[<span class=\"keyword\">this</span>.name] = <span class=\"keyword\">this</span>.value;</span><br><span class=\"line\">  toggle();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">speechSynthesis.addEventListener(<span class=\"string\">'voiceschanged'</span>, populateVoices)</span><br><span class=\"line\">voicesDropdown.addEventListener(<span class=\"string\">'change'</span>, setVoice)</span><br><span class=\"line\">options.forEach(<span class=\"function\"><span class=\"params\">option</span> =&gt;</span> &#123;</span><br><span class=\"line\">  option.addEventListener(<span class=\"string\">'change'</span>, setOption)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">speakButton.addEventListener(<span class=\"string\">'click'</span>, toggle.bind(<span class=\"literal\">null</span>, <span class=\"literal\">false</span>))</span><br><span class=\"line\">stopButton.addEventListener(<span class=\"string\">'click'</span>, toggle(<span class=\"literal\">false</span>))</span><br></pre></td></tr></table></figure>"},{"title":"JS30 day26 Stripe Follow Along Dropdown","catalog":true,"toc_nav_num":true,"date":"2019-11-26T14:26:24.000Z","subtitle":"","header-img":"https://images.unsplash.com/photo-1574654540337-d175089f84ce?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80","catagories":["Javascript"],"updateDate":"2019-11-26T14:26:24.000Z","_content":"# JS30 day26 - Stripe Follow Along Dropdown\n\n## 作業內容\n\n這次的網頁要做出下拉式選單動態移動的效果\n今天的作業其實 code 本身不難，難就難在你能不能想到用這個概念做出效果，如果是我應該想不到ＸＤ，創意性看來還要再加油\n可以參考這份 [CodePen](https://codepen.io/gbvjpsln/pen/jOOjQaG)的效果\n![](https://i.imgur.com/tcxLwId.jpg)\n## 學到什麼\n- CSS\n  1. 這邊很特別的地方是把隱藏的選項顯現出來的方式，一開始是 `display: none` 加上 `opacity: 0`\n  第一步驟先把 `display: none` 變成 `diaplay: block`\n  第二步再把 `opacity: 0` 變成 `opacity: 1`\n  ```css\n  .dropdown {\n    opacity: 0;\n    position: absolute;\n    overflow: hidden;\n    padding: 20px;\n    top: -20px;\n    border-radius: 2px;\n    transition: all 0.5s;\n    transform: translateY(100px);\n    will-change: opacity;\n    display: none;\n  }\n\n  .trigger-enter .dropdown {\n    display: block;\n  }\n\n  .trigger-enter-active .dropdown {\n    opacity: 1;\n  }\n  ```\n- JS\n  1. 有個很細節的地方在於，如果導覽列上方有東西，我們必須把座標值扣掉，否則白框位置會跑掉\n  ```js\n  const coords = {\n    height: dropdownCoords.height,\n    width: dropdownCoords.width,\n    top:  dropdownCoords.top - navCoords.top,\n    left: dropdownCoords.left - navCoords.left\n  }\n  ```\n  `dropdownCoords.top - navCoords.top,`像這行就是下拉選單的座標扣掉導覽列的上方座標\n  2. 除此之外還有更細節的地方，一開始程式碼長的是下面這樣\n  ```js\n  function handleEnter(){\n    this.classList.add('trigger-enter')\n    setTimeout(() => {\n      this.classList.add('trigger-enter-active')\n    },150)\n    //下略\n  }\n  function handleLeave(){\n    this.classList.remove('trigger-enter', 'trigger-enter-active')\n  }\n    //下略\n  ```\n  我再加上 class 的時候為了有動畫的效果，有個 setTimeout 設定 150 微秒之後才加上 `trigger-enter-active` 這 class，但移除的時候是同時移除\n  這樣會有個問題，當我在導覽列中快速移動，可能已經觸發到移除了，但 150 微秒還沒到，所以後面下拉選單的內容才跑出來\n  解決方法如下：再設上一個條件，150微秒的時候檢查是不是有一開始加上的那個 class `trigger-enter`，沒有的話就不用再加上這個 class\n  ```js\n  function handleEnter(){\n    this.classList.add('trigger-enter')\n    setTimeout(() => {\n      if(this.classList.contains('trigger-enter')){\n        this.classList.add('trigger-enter-active')\n      }\n    },150)\n    //下略\n  ```\n\nhttps://github.com/wesbos/JavaScript30\n\n## code 內容：\nHTML:\n```html\n  <h2>Cool</h2>\n  <nav class=\"top\">\n    <div class=\"dropdownBackground\">\n      <span class=\"arrow\"></span>\n    </div>\n\n    <ul class=\"cool\">\n      <li>\n        <a href=\"#\">About Me</a>\n        <div class=\"dropdown dropdown1\">\n          <div class=\"bio\">\n            <img src=\"https://logo.clearbit.com/wesbos.com\">\n            <p>Wes Bos sure does love web development. He teaches things like JavaScript, CSS and BBQ. Wait. BBQ isn't part of web development. It should be though!</p>\n          </div>\n        </div>\n      </li>\n      <li>\n        <a href=\"#\">Courses</a>\n        <ul class=\"dropdown courses\">\n          <li>\n            <span class=\"code\">RFB</span>\n            <a href=\"https://ReactForBeginners.com\">React For Beginners</a>\n          </li>\n          <li>\n            <span class=\"code\">ES6</span>\n            <a href=\"https://ES6.io\">ES6 For Everyone</a>\n          </li>\n          <li>\n            <span class=\"code\">NODE</span>\n            <a href=\"https://LearnNode.com\">Learn Node</a>\n          </li>\n          <li>\n            <span class=\"code\">STPU</span>\n            <a href=\"https://SublimeTextBook.com\">Sublime Text Power User</a>\n          </li>\n          <li>\n            <span class=\"code\">WTF</span>\n            <a href=\"http://Flexbox.io\">What The Flexbox?!</a>\n          </li>\n          <li>\n            <span class=\"code\">GRID</span>\n            <a href=\"https://CSSGrid.io\">CSS Grid</a>\n          </li>\n          <li>\n            <span class=\"code\">LRX</span>\n            <a href=\"http://LearnRedux.com\">Learn Redux</a>\n          </li>\n          <li>\n            <span class=\"code\">CLPU</span>\n            <a href=\"http://CommandLinePowerUser.com\">Command Line Power User</a>\n          </li>\n          <li>\n            <span class=\"code\">MMD</span>\n            <a href=\"http://MasteringMarkdown.com\">Mastering Markdown</a>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <a href=\"#\">Other Links</a>\n        <ul class=\"dropdown dropdown3\">\n          <li><a class=\"button\" href=\"http://twitter.com/wesbos\">Twitter</a></li>\n          <li><a class=\"button\" href=\"http://facebook.com/wesbos.developer\">Facebook</a></li>\n          <li><a class=\"button\" href=\"http://wesbos.com\">Blog</a></li>\n          <li><a class=\"button\" href=\"http://wesbos.com/courses\">Course Catalog</a></li>\n        </ul>\n      </li>\n    </ul>\n  </nav>\n\n```\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n  font-family: \"Arial Rounded MT Bold\", \"Helvetica Rounded\", Arial, sans-serif;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nbody {\n  margin: 0;\n  min-height: 100vh;\n  background:\n    linear-gradient(45deg, hsla(340, 100%, 55%, 1) 0%, hsla(340, 100%, 55%, 0) 70%),\n    linear-gradient(135deg, hsla(225, 95%, 50%, 1) 10%, hsla(225, 95%, 50%, 0) 80%),\n    linear-gradient(225deg, hsla(140, 90%, 50%, 1) 10%, hsla(140, 90%, 50%, 0) 80%),\n    linear-gradient(315deg, hsla(35, 95%, 55%, 1) 100%, hsla(35, 95%, 55%, 0) 70%);\n}\n\nh2 {\n  margin-top: 0;\n  padding-top: .8em;\n}\n\nnav {\n  position: relative;\n  perspective: 600px;\n}\n\n.cool > li > a {\n  color: yellow;\n  text-decoration: none;\n  font-size: 20px;\n  background: rgba(0,0,0,0.2);\n  padding: 10px 20px;\n  display: inline-block;\n  margin: 20px;\n  border-radius: 5px;\n}\n\nnav ul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n}\n\n.cool > li {\n  position: relative;\n  display: flex;\n  justify-content: center;\n}\n\n.dropdown {\n  opacity: 0;\n  position: absolute;\n  overflow: hidden;\n  padding: 20px;\n  top: -20px;\n  border-radius: 2px;\n  transition: all 0.5s;\n  transform: translateY(100px);\n  will-change: opacity;\n  display: none;\n}\n\n.trigger-enter .dropdown {\n  display: block;\n}\n\n.trigger-enter-active .dropdown {\n  opacity: 1;\n}\n\n.dropdownBackground {\n  width: 100px;\n  height: 100px;\n  position: absolute;\n  background: #fff;\n  border-radius: 4px;\n  box-shadow: 0 50px 100px rgba(50,50,93,.1), 0 15px 35px rgba(50,50,93,.15), 0 5px 15px rgba(0,0,0,.1);\n  transition: all 0.3s, opacity 0.1s, transform 0.2s;\n  transform-origin: 50% 0;\n  display: flex;\n  justify-content: center;\n  opacity:0;\n}\n\n.dropdownBackground.open {\n  opacity: 1;\n}\n\n.arrow {\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  display: block;\n  background: white;\n  transform: translateY(-50%) rotate(45deg);\n}\n\n.bio {\n  min-width: 500px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.7;\n}\n\n.bio img {\n  float: left;\n  margin-right: 20px;\n}\n\n.courses {\n  min-width: 300px;\n}\n\n.courses li {\n  padding: 10px 0;\n  display: block;\n  border-bottom: 1px solid rgba(0,0,0,0.2);\n}\n\n.dropdown a {\n  text-decoration: none;\n  color: #ffc600;\n}\n\na.button {\n  background: black;\n  display: block;\n  padding: 10px;\n  color: white;\n  margin-bottom: 10px;\n}\n\n/* Matches Twitter, TWITTER, twitter, tWitter, TWiTTeR... */\n.button[href*=twitter] { background: #019FE9; }\n.button[href*=facebook] { background: #3B5998; }\n.button[href*=courses] { background: #ffc600; }\n```\nJS:\n```js\n  const triggers = document.querySelectorAll('.cool > li')\n  const background = document.querySelector('.dropdownBackground')\n  const nav = document.querySelector('.top')\n\n  function handleEnter(){\n    this.classList.add('trigger-enter')\n    setTimeout(() => {\n      if(this.classList.contains('trigger-enter')){\n        this.classList.add('trigger-enter-active')\n      }\n    },150)\n    background.classList.add('open')\n\n    const dropdown = this.querySelector('.dropdown') // 要這時候才抓，因為要抓到不同時候的下拉選單\n    const dropdownCoords = dropdown.getBoundingClientRect()\n    const navCoords = nav.getBoundingClientRect()\n    const coords = {\n      height: dropdownCoords.height,\n      width: dropdownCoords.width,\n      top:  dropdownCoords.top - navCoords.top,\n      left: dropdownCoords.left - navCoords.left\n    }\n\n    background.style.setProperty('width', `${coords.width}px`)\n    background.style.setProperty('height', `${coords.height}px`)\n    background.style.setProperty('transform', `translate(${coords.left}px, ${coords.top}px`)\n  }\n  function handleLeave(){\n    this.classList.remove('trigger-enter', 'trigger-enter-active')\n  }\n\n  triggers.forEach( trigger => trigger.addEventListener('mouseenter', handleEnter))\n  triggers.forEach( trigger => trigger.addEventListener('mouseleave', handleLeave))\n```","source":"_posts/2019-11-27-JS30_day26.md","raw":"---\ntitle: \"JS30 day26 Stripe Follow Along Dropdown\"\ncatalog: true\ntoc_nav_num: true\ndate: 2019-11-26 22:26:24\nsubtitle: \"\"\nheader-img: \"https://images.unsplash.com/photo-1574654540337-d175089f84ce?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\"\ntags:\n- Javascript\ncatagories:\n- Javascript\nupdateDate: 2019-11-26 22:26:24\n# top: 1\n\n---\n# JS30 day26 - Stripe Follow Along Dropdown\n\n## 作業內容\n\n這次的網頁要做出下拉式選單動態移動的效果\n今天的作業其實 code 本身不難，難就難在你能不能想到用這個概念做出效果，如果是我應該想不到ＸＤ，創意性看來還要再加油\n可以參考這份 [CodePen](https://codepen.io/gbvjpsln/pen/jOOjQaG)的效果\n![](https://i.imgur.com/tcxLwId.jpg)\n## 學到什麼\n- CSS\n  1. 這邊很特別的地方是把隱藏的選項顯現出來的方式，一開始是 `display: none` 加上 `opacity: 0`\n  第一步驟先把 `display: none` 變成 `diaplay: block`\n  第二步再把 `opacity: 0` 變成 `opacity: 1`\n  ```css\n  .dropdown {\n    opacity: 0;\n    position: absolute;\n    overflow: hidden;\n    padding: 20px;\n    top: -20px;\n    border-radius: 2px;\n    transition: all 0.5s;\n    transform: translateY(100px);\n    will-change: opacity;\n    display: none;\n  }\n\n  .trigger-enter .dropdown {\n    display: block;\n  }\n\n  .trigger-enter-active .dropdown {\n    opacity: 1;\n  }\n  ```\n- JS\n  1. 有個很細節的地方在於，如果導覽列上方有東西，我們必須把座標值扣掉，否則白框位置會跑掉\n  ```js\n  const coords = {\n    height: dropdownCoords.height,\n    width: dropdownCoords.width,\n    top:  dropdownCoords.top - navCoords.top,\n    left: dropdownCoords.left - navCoords.left\n  }\n  ```\n  `dropdownCoords.top - navCoords.top,`像這行就是下拉選單的座標扣掉導覽列的上方座標\n  2. 除此之外還有更細節的地方，一開始程式碼長的是下面這樣\n  ```js\n  function handleEnter(){\n    this.classList.add('trigger-enter')\n    setTimeout(() => {\n      this.classList.add('trigger-enter-active')\n    },150)\n    //下略\n  }\n  function handleLeave(){\n    this.classList.remove('trigger-enter', 'trigger-enter-active')\n  }\n    //下略\n  ```\n  我再加上 class 的時候為了有動畫的效果，有個 setTimeout 設定 150 微秒之後才加上 `trigger-enter-active` 這 class，但移除的時候是同時移除\n  這樣會有個問題，當我在導覽列中快速移動，可能已經觸發到移除了，但 150 微秒還沒到，所以後面下拉選單的內容才跑出來\n  解決方法如下：再設上一個條件，150微秒的時候檢查是不是有一開始加上的那個 class `trigger-enter`，沒有的話就不用再加上這個 class\n  ```js\n  function handleEnter(){\n    this.classList.add('trigger-enter')\n    setTimeout(() => {\n      if(this.classList.contains('trigger-enter')){\n        this.classList.add('trigger-enter-active')\n      }\n    },150)\n    //下略\n  ```\n\nhttps://github.com/wesbos/JavaScript30\n\n## code 內容：\nHTML:\n```html\n  <h2>Cool</h2>\n  <nav class=\"top\">\n    <div class=\"dropdownBackground\">\n      <span class=\"arrow\"></span>\n    </div>\n\n    <ul class=\"cool\">\n      <li>\n        <a href=\"#\">About Me</a>\n        <div class=\"dropdown dropdown1\">\n          <div class=\"bio\">\n            <img src=\"https://logo.clearbit.com/wesbos.com\">\n            <p>Wes Bos sure does love web development. He teaches things like JavaScript, CSS and BBQ. Wait. BBQ isn't part of web development. It should be though!</p>\n          </div>\n        </div>\n      </li>\n      <li>\n        <a href=\"#\">Courses</a>\n        <ul class=\"dropdown courses\">\n          <li>\n            <span class=\"code\">RFB</span>\n            <a href=\"https://ReactForBeginners.com\">React For Beginners</a>\n          </li>\n          <li>\n            <span class=\"code\">ES6</span>\n            <a href=\"https://ES6.io\">ES6 For Everyone</a>\n          </li>\n          <li>\n            <span class=\"code\">NODE</span>\n            <a href=\"https://LearnNode.com\">Learn Node</a>\n          </li>\n          <li>\n            <span class=\"code\">STPU</span>\n            <a href=\"https://SublimeTextBook.com\">Sublime Text Power User</a>\n          </li>\n          <li>\n            <span class=\"code\">WTF</span>\n            <a href=\"http://Flexbox.io\">What The Flexbox?!</a>\n          </li>\n          <li>\n            <span class=\"code\">GRID</span>\n            <a href=\"https://CSSGrid.io\">CSS Grid</a>\n          </li>\n          <li>\n            <span class=\"code\">LRX</span>\n            <a href=\"http://LearnRedux.com\">Learn Redux</a>\n          </li>\n          <li>\n            <span class=\"code\">CLPU</span>\n            <a href=\"http://CommandLinePowerUser.com\">Command Line Power User</a>\n          </li>\n          <li>\n            <span class=\"code\">MMD</span>\n            <a href=\"http://MasteringMarkdown.com\">Mastering Markdown</a>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <a href=\"#\">Other Links</a>\n        <ul class=\"dropdown dropdown3\">\n          <li><a class=\"button\" href=\"http://twitter.com/wesbos\">Twitter</a></li>\n          <li><a class=\"button\" href=\"http://facebook.com/wesbos.developer\">Facebook</a></li>\n          <li><a class=\"button\" href=\"http://wesbos.com\">Blog</a></li>\n          <li><a class=\"button\" href=\"http://wesbos.com/courses\">Course Catalog</a></li>\n        </ul>\n      </li>\n    </ul>\n  </nav>\n\n```\nCSS:\n```css\nhtml {\n  box-sizing: border-box;\n  font-family: \"Arial Rounded MT Bold\", \"Helvetica Rounded\", Arial, sans-serif;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nbody {\n  margin: 0;\n  min-height: 100vh;\n  background:\n    linear-gradient(45deg, hsla(340, 100%, 55%, 1) 0%, hsla(340, 100%, 55%, 0) 70%),\n    linear-gradient(135deg, hsla(225, 95%, 50%, 1) 10%, hsla(225, 95%, 50%, 0) 80%),\n    linear-gradient(225deg, hsla(140, 90%, 50%, 1) 10%, hsla(140, 90%, 50%, 0) 80%),\n    linear-gradient(315deg, hsla(35, 95%, 55%, 1) 100%, hsla(35, 95%, 55%, 0) 70%);\n}\n\nh2 {\n  margin-top: 0;\n  padding-top: .8em;\n}\n\nnav {\n  position: relative;\n  perspective: 600px;\n}\n\n.cool > li > a {\n  color: yellow;\n  text-decoration: none;\n  font-size: 20px;\n  background: rgba(0,0,0,0.2);\n  padding: 10px 20px;\n  display: inline-block;\n  margin: 20px;\n  border-radius: 5px;\n}\n\nnav ul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n}\n\n.cool > li {\n  position: relative;\n  display: flex;\n  justify-content: center;\n}\n\n.dropdown {\n  opacity: 0;\n  position: absolute;\n  overflow: hidden;\n  padding: 20px;\n  top: -20px;\n  border-radius: 2px;\n  transition: all 0.5s;\n  transform: translateY(100px);\n  will-change: opacity;\n  display: none;\n}\n\n.trigger-enter .dropdown {\n  display: block;\n}\n\n.trigger-enter-active .dropdown {\n  opacity: 1;\n}\n\n.dropdownBackground {\n  width: 100px;\n  height: 100px;\n  position: absolute;\n  background: #fff;\n  border-radius: 4px;\n  box-shadow: 0 50px 100px rgba(50,50,93,.1), 0 15px 35px rgba(50,50,93,.15), 0 5px 15px rgba(0,0,0,.1);\n  transition: all 0.3s, opacity 0.1s, transform 0.2s;\n  transform-origin: 50% 0;\n  display: flex;\n  justify-content: center;\n  opacity:0;\n}\n\n.dropdownBackground.open {\n  opacity: 1;\n}\n\n.arrow {\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  display: block;\n  background: white;\n  transform: translateY(-50%) rotate(45deg);\n}\n\n.bio {\n  min-width: 500px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.7;\n}\n\n.bio img {\n  float: left;\n  margin-right: 20px;\n}\n\n.courses {\n  min-width: 300px;\n}\n\n.courses li {\n  padding: 10px 0;\n  display: block;\n  border-bottom: 1px solid rgba(0,0,0,0.2);\n}\n\n.dropdown a {\n  text-decoration: none;\n  color: #ffc600;\n}\n\na.button {\n  background: black;\n  display: block;\n  padding: 10px;\n  color: white;\n  margin-bottom: 10px;\n}\n\n/* Matches Twitter, TWITTER, twitter, tWitter, TWiTTeR... */\n.button[href*=twitter] { background: #019FE9; }\n.button[href*=facebook] { background: #3B5998; }\n.button[href*=courses] { background: #ffc600; }\n```\nJS:\n```js\n  const triggers = document.querySelectorAll('.cool > li')\n  const background = document.querySelector('.dropdownBackground')\n  const nav = document.querySelector('.top')\n\n  function handleEnter(){\n    this.classList.add('trigger-enter')\n    setTimeout(() => {\n      if(this.classList.contains('trigger-enter')){\n        this.classList.add('trigger-enter-active')\n      }\n    },150)\n    background.classList.add('open')\n\n    const dropdown = this.querySelector('.dropdown') // 要這時候才抓，因為要抓到不同時候的下拉選單\n    const dropdownCoords = dropdown.getBoundingClientRect()\n    const navCoords = nav.getBoundingClientRect()\n    const coords = {\n      height: dropdownCoords.height,\n      width: dropdownCoords.width,\n      top:  dropdownCoords.top - navCoords.top,\n      left: dropdownCoords.left - navCoords.left\n    }\n\n    background.style.setProperty('width', `${coords.width}px`)\n    background.style.setProperty('height', `${coords.height}px`)\n    background.style.setProperty('transform', `translate(${coords.left}px, ${coords.top}px`)\n  }\n  function handleLeave(){\n    this.classList.remove('trigger-enter', 'trigger-enter-active')\n  }\n\n  triggers.forEach( trigger => trigger.addEventListener('mouseenter', handleEnter))\n  triggers.forEach( trigger => trigger.addEventListener('mouseleave', handleLeave))\n```","slug":"2019-11-27-JS30_day26","published":1,"updated":"2019-11-27T03:33:15.936Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckjza0evu003s2ob1msgs9uud","content":"<h1 id=\"js30-day26-stripe-follow-along-dropdown\">JS30 day26 - Stripe Follow Along Dropdown</h1>\n<h2 id=\"作業內容\">作業內容</h2>\n<p>這次的網頁要做出下拉式選單動態移動的效果<br>\n今天的作業其實 code 本身不難，難就難在你能不能想到用這個概念做出效果，如果是我應該想不到ＸＤ，創意性看來還要再加油<br>\n可以參考這份 <a href=\"https://codepen.io/gbvjpsln/pen/jOOjQaG\" target=\"_blank\" rel=\"noopener\">CodePen</a>的效果<br>\n<img src=\"https://i.imgur.com/tcxLwId.jpg\" alt=\"\"></p>\n<h2 id=\"學到什麼\">學到什麼</h2>\n<ul>\n<li>\n<p>CSS</p>\n<ol>\n<li>這邊很特別的地方是把隱藏的選項顯現出來的方式，一開始是 <code>display: none</code> 加上 <code>opacity: 0</code><br>\n第一步驟先把 <code>display: none</code> 變成 <code>diaplay: block</code><br>\n第二步再把 <code>opacity: 0</code> 變成 <code>opacity: 1</code></li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.dropdown</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: -<span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(100px);</span><br><span class=\"line\">  <span class=\"attribute\">will-change</span>: opacity;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.trigger-enter</span> <span class=\"selector-class\">.dropdown</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.trigger-enter-active</span> <span class=\"selector-class\">.dropdown</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>JS</p>\n<ol>\n<li>有個很細節的地方在於，如果導覽列上方有東西，我們必須把座標值扣掉，否則白框位置會跑掉</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> coords = &#123;</span><br><span class=\"line\">  height: dropdownCoords.height,</span><br><span class=\"line\">  width: dropdownCoords.width,</span><br><span class=\"line\">  top:  dropdownCoords.top - navCoords.top,</span><br><span class=\"line\">  left: dropdownCoords.left - navCoords.left</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>dropdownCoords.top - navCoords.top,</code>像這行就是下拉選單的座標扣掉導覽列的上方座標</p>\n<ol start=\"2\">\n<li>除此之外還有更細節的地方，一開始程式碼長的是下面這樣</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleEnter</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.classList.add(<span class=\"string\">'trigger-enter'</span>)</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.classList.add(<span class=\"string\">'trigger-enter-active'</span>)</span><br><span class=\"line\">  &#125;,<span class=\"number\">150</span>)</span><br><span class=\"line\">  <span class=\"comment\">//下略</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleLeave</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.classList.remove(<span class=\"string\">'trigger-enter'</span>, <span class=\"string\">'trigger-enter-active'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  <span class=\"comment\">//下略</span></span><br></pre></td></tr></table></figure>\n<p>我再加上 class 的時候為了有動畫的效果，有個 setTimeout 設定 150 微秒之後才加上 <code>trigger-enter-active</code> 這 class，但移除的時候是同時移除<br>\n這樣會有個問題，當我在導覽列中快速移動，可能已經觸發到移除了，但 150 微秒還沒到，所以後面下拉選單的內容才跑出來<br>\n解決方法如下：再設上一個條件，150微秒的時候檢查是不是有一開始加上的那個 class <code>trigger-enter</code>，沒有的話就不用再加上這個 class</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleEnter</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.classList.add(<span class=\"string\">'trigger-enter'</span>)</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.classList.contains(<span class=\"string\">'trigger-enter'</span>))&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.classList.add(<span class=\"string\">'trigger-enter-active'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,<span class=\"number\">150</span>)</span><br><span class=\"line\">  <span class=\"comment\">//下略</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<h2 id=\"code-內容\">code 內容：</h2>\n<p>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Cool<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">class</span>=<span class=\"string\">\"top\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropdownBackground\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"arrow\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"cool\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>About Me<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropdown dropdown1\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"bio\"</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://logo.clearbit.com/wesbos.com\"</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Wes Bos sure does love web development. He teaches things like JavaScript, CSS and BBQ. Wait. BBQ isn't part of web development. It should be though!<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>Courses<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropdown courses\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"code\"</span>&gt;</span>RFB<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://ReactForBeginners.com\"</span>&gt;</span>React For Beginners<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"code\"</span>&gt;</span>ES6<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://ES6.io\"</span>&gt;</span>ES6 For Everyone<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"code\"</span>&gt;</span>NODE<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://LearnNode.com\"</span>&gt;</span>Learn Node<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"code\"</span>&gt;</span>STPU<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://SublimeTextBook.com\"</span>&gt;</span>Sublime Text Power User<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"code\"</span>&gt;</span>WTF<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://Flexbox.io\"</span>&gt;</span>What The Flexbox?!<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"code\"</span>&gt;</span>GRID<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://CSSGrid.io\"</span>&gt;</span>CSS Grid<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"code\"</span>&gt;</span>LRX<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://LearnRedux.com\"</span>&gt;</span>Learn Redux<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"code\"</span>&gt;</span>CLPU<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://CommandLinePowerUser.com\"</span>&gt;</span>Command Line Power User<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"code\"</span>&gt;</span>MMD<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://MasteringMarkdown.com\"</span>&gt;</span>Mastering Markdown<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>Other Links<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropdown dropdown3\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://twitter.com/wesbos\"</span>&gt;</span>Twitter<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://facebook.com/wesbos.developer\"</span>&gt;</span>Facebook<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://wesbos.com\"</span>&gt;</span>Blog<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://wesbos.com/courses\"</span>&gt;</span>Course Catalog<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">\"Arial Rounded MT Bold\"</span>, <span class=\"string\">\"Helvetica Rounded\"</span>, Arial, sans-serif;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>:</span><br><span class=\"line\">    <span class=\"built_in\">linear-gradient</span>(45deg, hsla(340, 100%, 55%, 1) <span class=\"number\">0%</span>, <span class=\"built_in\">hsla</span>(340, 100%, 55%, 0) <span class=\"number\">70%</span>),</span><br><span class=\"line\">    <span class=\"built_in\">linear-gradient</span>(135deg, hsla(225, 95%, 50%, 1) <span class=\"number\">10%</span>, <span class=\"built_in\">hsla</span>(225, 95%, 50%, 0) <span class=\"number\">80%</span>),</span><br><span class=\"line\">    <span class=\"built_in\">linear-gradient</span>(225deg, hsla(140, 90%, 50%, 1) <span class=\"number\">10%</span>, <span class=\"built_in\">hsla</span>(140, 90%, 50%, 0) <span class=\"number\">80%</span>),</span><br><span class=\"line\">    <span class=\"built_in\">linear-gradient</span>(315deg, hsla(35, 95%, 55%, 1) <span class=\"number\">100%</span>, <span class=\"built_in\">hsla</span>(35, 95%, 55%, 0) <span class=\"number\">70%</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">h2</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-top</span>: .<span class=\"number\">8em</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">nav</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">perspective</span>: <span class=\"number\">600px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.cool</span> &gt; <span class=\"selector-tag\">li</span> &gt; <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: yellow;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(0,0,0,0.2);</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.cool</span> &gt; <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.dropdown</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: -<span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(100px);</span><br><span class=\"line\">  <span class=\"attribute\">will-change</span>: opacity;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.trigger-enter</span> <span class=\"selector-class\">.dropdown</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.trigger-enter-active</span> <span class=\"selector-class\">.dropdown</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.dropdownBackground</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">4px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">50px</span> <span class=\"number\">100px</span> <span class=\"built_in\">rgba</span>(50,50,93,.1), <span class=\"number\">0</span> <span class=\"number\">15px</span> <span class=\"number\">35px</span> <span class=\"built_in\">rgba</span>(50,50,93,.15), <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"number\">15px</span> <span class=\"built_in\">rgba</span>(0,0,0,.1);</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.3s</span>, opacity <span class=\"number\">0.1s</span>, transform <span class=\"number\">0.2s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transform-origin</span>: <span class=\"number\">50%</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.dropdownBackground</span><span class=\"selector-class\">.open</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.arrow</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(-50%) <span class=\"built_in\">rotate</span>(45deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.bio</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">min-width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">1.7</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.bio</span> <span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">margin-right</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.courses</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">min-width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.courses</span> <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"built_in\">rgba</span>(0,0,0,0.2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.dropdown</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-class\">.button</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: black;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Matches Twitter, TWITTER, twitter, tWitter, TWiTTeR... */</span></span><br><span class=\"line\"><span class=\"selector-class\">.button</span><span class=\"selector-attr\">[href*=twitter]</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#019FE9</span>; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.button</span><span class=\"selector-attr\">[href*=facebook]</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#3B5998</span>; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.button</span><span class=\"selector-attr\">[href*=courses]</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#ffc600</span>; &#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> triggers = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'.cool &gt; li'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> background = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.dropdownBackground'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> nav = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.top'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleEnter</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.classList.add(<span class=\"string\">'trigger-enter'</span>)</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.classList.contains(<span class=\"string\">'trigger-enter'</span>))&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.classList.add(<span class=\"string\">'trigger-enter-active'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,<span class=\"number\">150</span>)</span><br><span class=\"line\">  background.classList.add(<span class=\"string\">'open'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> dropdown = <span class=\"keyword\">this</span>.querySelector(<span class=\"string\">'.dropdown'</span>) <span class=\"comment\">// 要這時候才抓，因為要抓到不同時候的下拉選單</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> dropdownCoords = dropdown.getBoundingClientRect()</span><br><span class=\"line\">  <span class=\"keyword\">const</span> navCoords = nav.getBoundingClientRect()</span><br><span class=\"line\">  <span class=\"keyword\">const</span> coords = &#123;</span><br><span class=\"line\">    height: dropdownCoords.height,</span><br><span class=\"line\">    width: dropdownCoords.width,</span><br><span class=\"line\">    top:  dropdownCoords.top - navCoords.top,</span><br><span class=\"line\">    left: dropdownCoords.left - navCoords.left</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  background.style.setProperty(<span class=\"string\">'width'</span>, <span class=\"string\">`<span class=\"subst\">$&#123;coords.width&#125;</span>px`</span>)</span><br><span class=\"line\">  background.style.setProperty(<span class=\"string\">'height'</span>, <span class=\"string\">`<span class=\"subst\">$&#123;coords.height&#125;</span>px`</span>)</span><br><span class=\"line\">  background.style.setProperty(<span class=\"string\">'transform'</span>, <span class=\"string\">`translate(<span class=\"subst\">$&#123;coords.left&#125;</span>px, <span class=\"subst\">$&#123;coords.top&#125;</span>px`</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleLeave</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.classList.remove(<span class=\"string\">'trigger-enter'</span>, <span class=\"string\">'trigger-enter-active'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">triggers.forEach( <span class=\"function\"><span class=\"params\">trigger</span> =&gt;</span> trigger.addEventListener(<span class=\"string\">'mouseenter'</span>, handleEnter))</span><br><span class=\"line\">triggers.forEach( <span class=\"function\"><span class=\"params\">trigger</span> =&gt;</span> trigger.addEventListener(<span class=\"string\">'mouseleave'</span>, handleLeave))</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>JS30 day26 - Stripe Follow Along Dropdown</h1>\n<h2>作業內容</h2>\n<p>這次的網頁要做出下拉式選單動態移動的效果<br>\n今天的作業其實 code 本身不難，難就難在你能不能想到用這個概念做出效果，如果是我應該想不到ＸＤ，創意性看來還要再加油<br>\n可以參考這份 <a href=\"https://codepen.io/gbvjpsln/pen/jOOjQaG\" target=\"_blank\" rel=\"noopener\">CodePen</a>的效果<br>\n<img src=\"https://i.imgur.com/tcxLwId.jpg\" alt=\"\"></p>\n<h2>學到什麼</h2>\n<ul>\n<li>\n<p>CSS</p>\n<ol>\n<li>這邊很特別的地方是把隱藏的選項顯現出來的方式，一開始是 <code>display: none</code> 加上 <code>opacity: 0</code><br>\n第一步驟先把 <code>display: none</code> 變成 <code>diaplay: block</code><br>\n第二步再把 <code>opacity: 0</code> 變成 <code>opacity: 1</code></li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.dropdown</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: -<span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(100px);</span><br><span class=\"line\">  <span class=\"attribute\">will-change</span>: opacity;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.trigger-enter</span> <span class=\"selector-class\">.dropdown</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.trigger-enter-active</span> <span class=\"selector-class\">.dropdown</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>JS</p>\n<ol>\n<li>有個很細節的地方在於，如果導覽列上方有東西，我們必須把座標值扣掉，否則白框位置會跑掉</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> coords = &#123;</span><br><span class=\"line\">  height: dropdownCoords.height,</span><br><span class=\"line\">  width: dropdownCoords.width,</span><br><span class=\"line\">  top:  dropdownCoords.top - navCoords.top,</span><br><span class=\"line\">  left: dropdownCoords.left - navCoords.left</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>dropdownCoords.top - navCoords.top,</code>像這行就是下拉選單的座標扣掉導覽列的上方座標</p>\n<ol start=\"2\">\n<li>除此之外還有更細節的地方，一開始程式碼長的是下面這樣</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleEnter</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.classList.add(<span class=\"string\">'trigger-enter'</span>)</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.classList.add(<span class=\"string\">'trigger-enter-active'</span>)</span><br><span class=\"line\">  &#125;,<span class=\"number\">150</span>)</span><br><span class=\"line\">  <span class=\"comment\">//下略</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleLeave</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.classList.remove(<span class=\"string\">'trigger-enter'</span>, <span class=\"string\">'trigger-enter-active'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  <span class=\"comment\">//下略</span></span><br></pre></td></tr></table></figure>\n<p>我再加上 class 的時候為了有動畫的效果，有個 setTimeout 設定 150 微秒之後才加上 <code>trigger-enter-active</code> 這 class，但移除的時候是同時移除<br>\n這樣會有個問題，當我在導覽列中快速移動，可能已經觸發到移除了，但 150 微秒還沒到，所以後面下拉選單的內容才跑出來<br>\n解決方法如下：再設上一個條件，150微秒的時候檢查是不是有一開始加上的那個 class <code>trigger-enter</code>，沒有的話就不用再加上這個 class</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleEnter</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.classList.add(<span class=\"string\">'trigger-enter'</span>)</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.classList.contains(<span class=\"string\">'trigger-enter'</span>))&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.classList.add(<span class=\"string\">'trigger-enter-active'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,<span class=\"number\">150</span>)</span><br><span class=\"line\">  <span class=\"comment\">//下略</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a href=\"https://github.com/wesbos/JavaScript30\" target=\"_blank\" rel=\"noopener\">https://github.com/wesbos/JavaScript30</a></p>\n<h2>code 內容：</h2>\n<p>HTML:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Cool<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">class</span>=<span class=\"string\">\"top\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropdownBackground\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"arrow\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"cool\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>About Me<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropdown dropdown1\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"bio\"</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://logo.clearbit.com/wesbos.com\"</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Wes Bos sure does love web development. He teaches things like JavaScript, CSS and BBQ. Wait. BBQ isn't part of web development. It should be though!<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>Courses<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropdown courses\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"code\"</span>&gt;</span>RFB<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://ReactForBeginners.com\"</span>&gt;</span>React For Beginners<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"code\"</span>&gt;</span>ES6<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://ES6.io\"</span>&gt;</span>ES6 For Everyone<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"code\"</span>&gt;</span>NODE<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://LearnNode.com\"</span>&gt;</span>Learn Node<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"code\"</span>&gt;</span>STPU<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://SublimeTextBook.com\"</span>&gt;</span>Sublime Text Power User<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"code\"</span>&gt;</span>WTF<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://Flexbox.io\"</span>&gt;</span>What The Flexbox?!<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"code\"</span>&gt;</span>GRID<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://CSSGrid.io\"</span>&gt;</span>CSS Grid<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"code\"</span>&gt;</span>LRX<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://LearnRedux.com\"</span>&gt;</span>Learn Redux<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"code\"</span>&gt;</span>CLPU<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://CommandLinePowerUser.com\"</span>&gt;</span>Command Line Power User<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"code\"</span>&gt;</span>MMD<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://MasteringMarkdown.com\"</span>&gt;</span>Mastering Markdown<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>Other Links<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropdown dropdown3\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://twitter.com/wesbos\"</span>&gt;</span>Twitter<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://facebook.com/wesbos.developer\"</span>&gt;</span>Facebook<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://wesbos.com\"</span>&gt;</span>Blog<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://wesbos.com/courses\"</span>&gt;</span>Course Catalog<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">\"Arial Rounded MT Bold\"</span>, <span class=\"string\">\"Helvetica Rounded\"</span>, Arial, sans-serif;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*, *<span class=\"selector-pseudo\">:before</span>, *<span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>:</span><br><span class=\"line\">    <span class=\"built_in\">linear-gradient</span>(45deg, hsla(340, 100%, 55%, 1) <span class=\"number\">0%</span>, <span class=\"built_in\">hsla</span>(340, 100%, 55%, 0) <span class=\"number\">70%</span>),</span><br><span class=\"line\">    <span class=\"built_in\">linear-gradient</span>(135deg, hsla(225, 95%, 50%, 1) <span class=\"number\">10%</span>, <span class=\"built_in\">hsla</span>(225, 95%, 50%, 0) <span class=\"number\">80%</span>),</span><br><span class=\"line\">    <span class=\"built_in\">linear-gradient</span>(225deg, hsla(140, 90%, 50%, 1) <span class=\"number\">10%</span>, <span class=\"built_in\">hsla</span>(140, 90%, 50%, 0) <span class=\"number\">80%</span>),</span><br><span class=\"line\">    <span class=\"built_in\">linear-gradient</span>(315deg, hsla(35, 95%, 55%, 1) <span class=\"number\">100%</span>, <span class=\"built_in\">hsla</span>(35, 95%, 55%, 0) <span class=\"number\">70%</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">h2</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-top</span>: .<span class=\"number\">8em</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">nav</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">perspective</span>: <span class=\"number\">600px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.cool</span> &gt; <span class=\"selector-tag\">li</span> &gt; <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: yellow;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(0,0,0,0.2);</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.cool</span> &gt; <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.dropdown</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: -<span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(100px);</span><br><span class=\"line\">  <span class=\"attribute\">will-change</span>: opacity;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.trigger-enter</span> <span class=\"selector-class\">.dropdown</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.trigger-enter-active</span> <span class=\"selector-class\">.dropdown</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.dropdownBackground</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">4px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">50px</span> <span class=\"number\">100px</span> <span class=\"built_in\">rgba</span>(50,50,93,.1), <span class=\"number\">0</span> <span class=\"number\">15px</span> <span class=\"number\">35px</span> <span class=\"built_in\">rgba</span>(50,50,93,.15), <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"number\">15px</span> <span class=\"built_in\">rgba</span>(0,0,0,.1);</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.3s</span>, opacity <span class=\"number\">0.1s</span>, transform <span class=\"number\">0.2s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transform-origin</span>: <span class=\"number\">50%</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.dropdownBackground</span><span class=\"selector-class\">.open</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.arrow</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(-50%) <span class=\"built_in\">rotate</span>(45deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.bio</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">min-width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">1.7</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.bio</span> <span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">margin-right</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.courses</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">min-width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.courses</span> <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"built_in\">rgba</span>(0,0,0,0.2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.dropdown</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#ffc600</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-class\">.button</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: black;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Matches Twitter, TWITTER, twitter, tWitter, TWiTTeR... */</span></span><br><span class=\"line\"><span class=\"selector-class\">.button</span><span class=\"selector-attr\">[href*=twitter]</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#019FE9</span>; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.button</span><span class=\"selector-attr\">[href*=facebook]</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#3B5998</span>; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.button</span><span class=\"selector-attr\">[href*=courses]</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#ffc600</span>; &#125;</span><br></pre></td></tr></table></figure>\n<p>JS:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> triggers = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'.cool &gt; li'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> background = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.dropdownBackground'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> nav = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.top'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleEnter</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.classList.add(<span class=\"string\">'trigger-enter'</span>)</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.classList.contains(<span class=\"string\">'trigger-enter'</span>))&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.classList.add(<span class=\"string\">'trigger-enter-active'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,<span class=\"number\">150</span>)</span><br><span class=\"line\">  background.classList.add(<span class=\"string\">'open'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> dropdown = <span class=\"keyword\">this</span>.querySelector(<span class=\"string\">'.dropdown'</span>) <span class=\"comment\">// 要這時候才抓，因為要抓到不同時候的下拉選單</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> dropdownCoords = dropdown.getBoundingClientRect()</span><br><span class=\"line\">  <span class=\"keyword\">const</span> navCoords = nav.getBoundingClientRect()</span><br><span class=\"line\">  <span class=\"keyword\">const</span> coords = &#123;</span><br><span class=\"line\">    height: dropdownCoords.height,</span><br><span class=\"line\">    width: dropdownCoords.width,</span><br><span class=\"line\">    top:  dropdownCoords.top - navCoords.top,</span><br><span class=\"line\">    left: dropdownCoords.left - navCoords.left</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  background.style.setProperty(<span class=\"string\">'width'</span>, <span class=\"string\">`<span class=\"subst\">$&#123;coords.width&#125;</span>px`</span>)</span><br><span class=\"line\">  background.style.setProperty(<span class=\"string\">'height'</span>, <span class=\"string\">`<span class=\"subst\">$&#123;coords.height&#125;</span>px`</span>)</span><br><span class=\"line\">  background.style.setProperty(<span class=\"string\">'transform'</span>, <span class=\"string\">`translate(<span class=\"subst\">$&#123;coords.left&#125;</span>px, <span class=\"subst\">$&#123;coords.top&#125;</span>px`</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleLeave</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.classList.remove(<span class=\"string\">'trigger-enter'</span>, <span class=\"string\">'trigger-enter-active'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">triggers.forEach( <span class=\"function\"><span class=\"params\">trigger</span> =&gt;</span> trigger.addEventListener(<span class=\"string\">'mouseenter'</span>, handleEnter))</span><br><span class=\"line\">triggers.forEach( <span class=\"function\"><span class=\"params\">trigger</span> =&gt;</span> trigger.addEventListener(<span class=\"string\">'mouseleave'</span>, handleLeave))</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ckjza0etn00082ob1fornmozx","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0ets000b2ob1q1v3wx3a"},{"post_id":"ckjza0ete00022ob1wzbk2hvf","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0etu000d2ob10c43jdu5"},{"post_id":"ckjza0eto00092ob1c1ijte5h","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0etw000g2ob179jeywl9"},{"post_id":"ckjza0ets000c2ob1j2lp1lxg","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0etx000i2ob1035oscmw"},{"post_id":"ckjza0etj00042ob10w432n69","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0ety000k2ob1omw516iq"},{"post_id":"ckjza0etv000e2ob1nb9bfezd","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0etz000m2ob1tsx3gvob"},{"post_id":"ckjza0etw000h2ob1jnwuu9yq","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0eu4000o2ob1p8raqs8n"},{"post_id":"ckjza0etm00072ob1hvbf5nat","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0eu6000q2ob1oz6z5eyr"},{"post_id":"ckjza0etx000j2ob1xxug1sil","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0eu7000s2ob1ewcm1mxj"},{"post_id":"ckjza0ety000l2ob14qly07n2","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0eu8000u2ob1aixm4pyl"},{"post_id":"ckjza0etz000n2ob1nl78m08a","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0eu9000w2ob1vpda3q3b"},{"post_id":"ckjza0eu5000p2ob1idvgv3cs","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0eua000y2ob1vx9czcma"},{"post_id":"ckjza0eu6000r2ob1ge7rhz5z","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0eub00102ob1njxaj7li"},{"post_id":"ckjza0eu7000t2ob1srq2yaq1","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0euc00122ob1anbr0kga"},{"post_id":"ckjza0eu8000v2ob1ua00qvqf","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0eud00142ob1ortczc3d"},{"post_id":"ckjza0eu9000x2ob17pd29xm2","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0eud00162ob1k4czur7q"},{"post_id":"ckjza0eua000z2ob1muh2wqci","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0eug00182ob1b7rxpl9v"},{"post_id":"ckjza0eub00112ob1ygqscbrd","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0eug001a2ob1xas019t5"},{"post_id":"ckjza0euc00132ob10ng37w16","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0euh001c2ob15qbbuvnn"},{"post_id":"ckjza0eud00152ob1q6f72z7x","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0euj001e2ob1sdtob36g"},{"post_id":"ckjza0eue00172ob1yqnetb96","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0euk001g2ob1nabatjxa"},{"post_id":"ckjza0eug00192ob1vhxf9nyx","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0euk001i2ob1nce5l37y"},{"post_id":"ckjza0euh001b2ob1b3t42sxd","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0eul001k2ob1y7lonn52"},{"post_id":"ckjza0euh001d2ob19yfdzuuo","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0eum001m2ob1kp4ecben"},{"post_id":"ckjza0euj001f2ob1j21hi26d","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0eun001o2ob1oudm9w32"},{"post_id":"ckjza0euk001h2ob1riceshe7","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0euo001q2ob1qjhqyuwr"},{"post_id":"ckjza0euk001j2ob105b7o2lf","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0eup001s2ob16b8h01jn"},{"post_id":"ckjza0eul001l2ob1paxfhs4o","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0euq001u2ob18dxc1ncs"},{"post_id":"ckjza0eum001n2ob14eyow029","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0eur001x2ob12d50l6zt"},{"post_id":"ckjza0eun001p2ob1zvj25rth","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0eus001z2ob1dso50km1"},{"post_id":"ckjza0euo001r2ob1hw8j0g40","tag_id":"ckjza0etk00052ob1whid4xir","_id":"ckjza0eus00212ob1y7q5jzhn"},{"post_id":"ckjza0eus00202ob1kavnexct","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0eut00242ob1ti5zqevq"},{"post_id":"ckjza0eup001t2ob1oryga2s8","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0euu00262ob17kc2hr8u"},{"post_id":"ckjza0eus00222ob19t9ff97d","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0euw00292ob16vydmcyg"},{"post_id":"ckjza0eut00252ob1bmqg21of","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0eux002b2ob12n1wu721"},{"post_id":"ckjza0euq001v2ob1akr37611","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0euy002d2ob12g2u66eu"},{"post_id":"ckjza0euu00272ob1ct8595ge","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0euz002f2ob1pwxqgs5v"},{"post_id":"ckjza0eux002a2ob1lcmrcg35","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0ev0002h2ob1kyg7z6lo"},{"post_id":"ckjza0eur001y2ob134dltrbw","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0ev0002j2ob1kzsmpdj2"},{"post_id":"ckjza0eux002c2ob1j8okzqh4","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0ev1002l2ob15720coz9"},{"post_id":"ckjza0euy002e2ob13vmr3r4e","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0ev2002n2ob1deoi1wam"},{"post_id":"ckjza0euz002g2ob1lthby1l2","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0ev3002p2ob1hqhjmdbu"},{"post_id":"ckjza0ev0002i2ob1dflwt6p9","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0ev4002r2ob1tmtjfgd4"},{"post_id":"ckjza0ev0002k2ob1dkp7ocb8","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0ev6002t2ob13tus05k8"},{"post_id":"ckjza0ev1002m2ob1vi4b900g","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0ev6002v2ob1ij787rbz"},{"post_id":"ckjza0ev2002o2ob1nzefz62u","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0ev7002x2ob1vbtcyw4x"},{"post_id":"ckjza0ev3002q2ob14r6u2ugm","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0ev8002z2ob1fxyadu4x"},{"post_id":"ckjza0ev4002s2ob11y8muajb","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0ev900312ob174bek233"},{"post_id":"ckjza0ev6002u2ob1n6nl1qr9","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0evb00332ob1v8598mud"},{"post_id":"ckjza0ev6002w2ob1zts06vsx","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0evc00352ob1jwnqkm8g"},{"post_id":"ckjza0ev7002y2ob1r06stdpl","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0evd00372ob18q7lulx1"},{"post_id":"ckjza0ev800302ob12ylaf6wt","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0eve00392ob1z6kmzo9r"},{"post_id":"ckjza0ev900322ob1z88aw06u","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0evf003b2ob1avmu4bf7"},{"post_id":"ckjza0evb00342ob12kg5h0ke","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0evg003e2ob1v6hmqy0i"},{"post_id":"ckjza0evc00362ob170dq3lx4","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0evh003g2ob1mzpkeqbk"},{"post_id":"ckjza0evd00382ob17122zpkz","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0evh003i2ob1h53oj5yi"},{"post_id":"ckjza0evf003c2ob1tgbed7q4","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0evi003k2ob1zib30b82"},{"post_id":"ckjza0eve003a2ob113ygnuh4","tag_id":"ckjza0evg003d2ob196igxb37","_id":"ckjza0evi003l2ob1rmdwnjcf"},{"post_id":"ckjza0evg003f2ob1nq7obj3q","tag_id":"ckjza0evh003j2ob1hhgbkrul","_id":"ckjza0evi003n2ob17ttwc7qa"},{"post_id":"ckjza0evh003h2ob1nydcxcai","tag_id":"ckjza0evh003j2ob1hhgbkrul","_id":"ckjza0evi003o2ob1bq6s8mwd"},{"post_id":"ckjza0evq003p2ob18n2zvfvb","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0evu003r2ob1di7iseb9"},{"post_id":"ckjza0evs003q2ob1ft7wlnjb","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0evv003t2ob1g9w1wf63"},{"post_id":"ckjza0evu003s2ob1msgs9uud","tag_id":"ckjza0eur001w2ob19uk7lk1v","_id":"ckjza0evv003u2ob146yv4061"}],"Tag":[{"name":"Rails","_id":"ckjza0etk00052ob1whid4xir"},{"name":"Javascript","_id":"ckjza0eur001w2ob19uk7lk1v"},{"name":"Life","_id":"ckjza0evg003d2ob196igxb37"},{"name":"Ruby","_id":"ckjza0evh003j2ob1hhgbkrul"}]}}